MP2COD 3.94, COFF to COD File Converter
Copyright (c) 2005 Microchip Technology Inc.
Listing File Generated: Sat Oct 28 09:23:04 2006


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	TITLE:		camera.c                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	VERSION:	0.1 (Beta)                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	DATE:		1-Jan-2006                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:	This is the "streamlined" version of camera.c                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *				You are free to use this source code for any non-commercial                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           *				use. Please do not make copies of this source code, modified                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *				without permission. Thanks.                                                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           ******************************************************************************** C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CHANGE LOG:                                                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           #include "serial_ports.h"                                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           #include "camera.h"                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           // This variable, when equal to one, indicates that the                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           // camera has successfully initialized and should be                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           // sending data. You can also force a re-initialization                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           // by setting this variable to zero by calling the                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           // function Reinitialize_Camera().                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned char camera_initialized = 0;                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned int camera_t_packets = 0;                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned int camera_acks = 0;                                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned int camera_ncks = 0;                                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           // camera T packet structure                                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           T_Packet_Data_Type T_Packet_Data;                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Camera_Handler()                                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		This function is responsable for camera initialization               C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					and camera serial data interpretation. Once the camera                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					is initialized and starts sending tracking data, this                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					function will continuously update the global T_Packet_Data                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					structure with the received tracking information.					                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		none                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		nothing                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
003374   cfd9     MOVFF     0xfd9,0xfe6    void Camera_Handler(void)                                                        C:\FIRST\ATLcode\WorkHere\camera.c
003376   ffe6                                                                                                               
003378   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00337a   ffd9                                                                                                               
00337c   0e04     MOVLW     0x4                                                                                             
00337e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           	unsigned char return_value;                                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           	unsigned char byte_count;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           	unsigned char byte;                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           	unsigned char i;                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// if needed, (re)initialize the camera and if the                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// initialization process throws an error, retry                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// until it's successfully initializes                                          C:\FIRST\ATLcode\WorkHere\camera.c
003380   0103     MOVLB     0x3            	if(camera_initialized == 0)                                                     C:\FIRST\ATLcode\WorkHere\camera.c
003382   5126     MOVF      0x26,0x0,0x1                                                                                    
003384   e10b     BNZ       0x339c                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
003386   d8f0     RCALL     0x3568         		return_value = Initialize_Camera();                                            C:\FIRST\ATLcode\WorkHere\camera.c
003388   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// is the camera done initializing and if so,                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// did it initialize without an error?                                         C:\FIRST\ATLcode\WorkHere\camera.c
00338a   04df     DECF      0xdf,0x0,0x0   		if(return_value == 1)                                                          C:\FIRST\ATLcode\WorkHere\camera.c
00338c   e104     BNZ       0x3396                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
00338e   0103     MOVLB     0x3            			camera_initialized = 1;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
003390   0e01     MOVLW     0x1                                                                                             
003392   6f26     MOVWF     0x26,0x1                                                                                        
                                           			DEBUG(("\r\nCamera: Initialized normally\r\n"));                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// is the camera done initializing and if so,                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// did it return an error?                                                     C:\FIRST\ATLcode\WorkHere\camera.c
003394   d003     BRA       0x339c         		else if(return_value > 1)                                                      C:\FIRST\ATLcode\WorkHere\camera.c
003396   50df     MOVF      0xdf,0x0,0x0                                                                                    
003398   0801     SUBLW     0x1                                                                                             
00339a   e200     BC        0x339c                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           			DEBUG(("\r\nCamera: Initialized abnormally with code %u\r\n", (unsigned int)return_value)); C:\FIRST\ATLcode\WorkHere\camera.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// find out how much data, if any, is present in                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// the camera serial port's received data queue?                                C:\FIRST\ATLcode\WorkHere\camera.c
00339c   dad9     RCALL     0x3950         	byte_count = Camera_Serial_Port_Byte_Count();                                   C:\FIRST\ATLcode\WorkHere\camera.c
00339e   6ee7     MOVWF     0xe7,0x0                                                                                        
0033a0   0e01     MOVLW     0x1                                                                                             
0033a2   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0033a4   ffdb                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// have we received any data?                                                   C:\FIRST\ATLcode\WorkHere\camera.c
0033a6   50db     MOVF      0xdb,0x0,0x0   	if(byte_count > 0)                                                              C:\FIRST\ATLcode\WorkHere\camera.c
0033a8   0800     SUBLW     0x0                                                                                             
0033aa   e217     BC        0x33da                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// we have fresh data, so read each received byte one                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// at a time and immediatly send it to the camera state                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// machine, which is responsable for parsing the camera                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// data packets                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0033ac   0e03     MOVLW     0x3            		for(i=0; i<byte_count; i++)                                                    C:\FIRST\ATLcode\WorkHere\camera.c
0033ae   6adb     CLRF      0xdb,0x0                                                                                        
0033b0   0e01     MOVLW     0x1                                                                                             
0033b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0033b4   6ef3     MOVWF     0xf3,0x0                                                                                        
0033b6   0e03     MOVLW     0x3                                                                                             
0033b8   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0033ba   fff4                                                                                                               
0033bc   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0033be   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0033c0   e20c     BC        0x33da                                                                                          
0033d4   0e03     MOVLW     0x3                                                                                             
0033d6   2adb     INCF      0xdb,0x1,0x0                                                                                    
0033d8   d7eb     BRA       0x33b0                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// get the next data byte                                                     C:\FIRST\ATLcode\WorkHere\camera.c
0033c2   daca     RCALL     0x3958         			byte = Read_Camera_Serial_Port();                                             C:\FIRST\ATLcode\WorkHere\camera.c
0033c4   6ee7     MOVWF     0xe7,0x0                                                                                        
0033c6   0e02     MOVLW     0x2                                                                                             
0033c8   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0033ca   ffdb                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// send the byte to the camera state machine                                  C:\FIRST\ATLcode\WorkHere\camera.c
0033cc   cfdb     MOVFF     0xfdb,0xfe6    			Camera_State_Machine(byte);                                                   C:\FIRST\ATLcode\WorkHere\camera.c
0033ce   ffe6                                                                                                               
0033d0   d80a     RCALL     0x33e6                                                                                          
0033d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
0033da   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0033dc   ffe1                                                                                                               
0033de   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033e0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0033e2   ffd9                                                                                                               
0033e4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Camera_State_Machine()                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Parses the camera serial data stream looking for data                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					packets, ACKs and NCKS. When packets are complete the                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					individual packet counter variable is incremented, and                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					in the case of packets, the global data structure is                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					updated with the new data.					                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:	Camera_Handler(), above                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		unsigned char of camera serial data                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		nothing                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		Camera must be configured to output binary data,                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
0033e6   cfd9     MOVFF     0xfd9,0xfe6    void Camera_State_Machine(unsigned char byte)                                    C:\FIRST\ATLcode\WorkHere\camera.c
0033e8   ffe6                                                                                                               
0033ea   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0033ec   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char state = UNSYNCHRONIZED;                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char packet_buffer[34];                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char packet_buffer_index;                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char packet_char_count;                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0033ee   0103     MOVLB     0x3            	switch(state)                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
0033f0   512d     MOVF      0x2d,0x0,0x1                                                                                    
0033f2   0a06     XORLW     0x6                                                                                             
0033f4   e101     BNZ       0x33f8                                                                                          
0033f6   d08f     BRA       0x3516                                                                                          
0033f8   0a03     XORLW     0x3                                                                                             
0033fa   e068     BZ        0x34cc                                                                                          
0033fc   0a06     XORLW     0x6                                                                                             
0033fe   e034     BZ        0x3468                                                                                          
003400   0a01     XORLW     0x1                                                                                             
003402   e025     BZ        0x344e                                                                                          
003404   0a03     XORLW     0x3                                                                                             
003406   e001     BZ        0x340a                                                                                          
003408   d0ab     BRA       0x3560                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           		case UNSYNCHRONIZED:                                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
00340a   0efe     MOVLW     0xfe           			if(byte == 255) // start of a new data packet?                                C:\FIRST\ATLcode\WorkHere\camera.c
00340c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00340e   6e2b     MOVWF     0x2b,0x0                                                                                        
003410   6a2c     CLRF      0x2c,0x0                                                                                        
003412   0eff     MOVLW     0xff                                                                                            
003414   182b     XORWF     0x2b,0x0,0x0                                                                                    
003416   e101     BNZ       0x341a                                                                                          
003418   502c     MOVF      0x2c,0x0,0x0                                                                                    
00341a   e103     BNZ       0x3422                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00341c   0e02     MOVLW     0x2            				state = DETERMINING_PACKET_TYPE;                                             C:\FIRST\ATLcode\WorkHere\camera.c
00341e   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003420   d015     BRA       0x344c         			else if(byte == 'A') // start of an ACK?                                      C:\FIRST\ATLcode\WorkHere\camera.c
003422   0efe     MOVLW     0xfe                                                                                            
003424   50db     MOVF      0xdb,0x0,0x0                                                                                    
003426   0841     SUBLW     0x41                                                                                            
003428   e107     BNZ       0x3438                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00342a   0102     MOVLB     0x2            				packet_char_count = 2;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
00342c   0e02     MOVLW     0x2                                                                                             
00342e   6fc4     MOVWF     0xc4,0x1                                                                                        
003430   0103     MOVLB     0x3            				state = RECEIVING_ACK;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
003432   0e05     MOVLW     0x5                                                                                             
003434   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003436   d00a     BRA       0x344c         			else if(byte == 'N') // start of a NCK?                                       C:\FIRST\ATLcode\WorkHere\camera.c
003438   0efe     MOVLW     0xfe                                                                                            
00343a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00343c   084e     SUBLW     0x4e                                                                                            
00343e   e106     BNZ       0x344c                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003440   0102     MOVLB     0x2            				packet_char_count = 2;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
003442   0e02     MOVLW     0x2                                                                                             
003444   6fc4     MOVWF     0xc4,0x1                                                                                        
003446   0103     MOVLB     0x3            				state = RECEIVING_NCK;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
003448   0e06     MOVLW     0x6                                                                                             
00344a   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00344c   d089     BRA       0x3560         			break;                                                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           		case DETERMINING_PACKET_TYPE:                                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
00344e   0efe     MOVLW     0xfe           			if(byte == 'T') // are we receiving a "t packet"?                             C:\FIRST\ATLcode\WorkHere\camera.c
003450   50db     MOVF      0xdb,0x0,0x0                                                                                    
003452   0854     SUBLW     0x54                                                                                            
003454   e106     BNZ       0x3462                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003456   0102     MOVLB     0x2            				packet_buffer_index = 0;                                                     C:\FIRST\ATLcode\WorkHere\camera.c
003458   6bc3     CLRF      0xc3,0x1                                                                                        
00345a   0103     MOVLB     0x3            				state = RECEIVING_T_PACKET;                                                  C:\FIRST\ATLcode\WorkHere\camera.c
00345c   0e03     MOVLW     0x3                                                                                             
00345e   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003460   d002     BRA       0x3466         			else // unknown packet type; go back to the unsynchronized state              C:\FIRST\ATLcode\WorkHere\camera.c
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003462   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\FIRST\ATLcode\WorkHere\camera.c
003464   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003466   d07c     BRA       0x3560         			break;                                                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           		case RECEIVING_T_PACKET:                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003468   0102     MOVLB     0x2            			if(packet_buffer_index < sizeof(T_Packet_Data_Type)) // still building the packet? C:\FIRST\ATLcode\WorkHere\camera.c
00346a   51c3     MOVF      0xc3,0x0,0x1                                                                                    
00346c   6e2b     MOVWF     0x2b,0x0                                                                                        
00346e   6a2c     CLRF      0x2c,0x0                                                                                        
003470   0e08     MOVLW     0x8                                                                                             
003472   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
003474   0e00     MOVLW     0x0                                                                                             
003476   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
003478   e20a     BC        0x348e                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// move packet character to our buffer                                       C:\FIRST\ATLcode\WorkHere\camera.c
00347a   51c3     MOVF      0xc3,0x0,0x1   				packet_buffer[packet_buffer_index] = byte;                                   C:\FIRST\ATLcode\WorkHere\camera.c
00347c   6aea     CLRF      0xea,0x0                                                                                        
00347e   0fa1     ADDLW     0xa1                                                                                            
003480   6ee9     MOVWF     0xe9,0x0                                                                                        
003482   0e02     MOVLW     0x2                                                                                             
003484   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003486   0efe     MOVLW     0xfe                                                                                            
003488   cfdb     MOVFF     0xfdb,0xfef                                                                                     
00348a   ffef                                                                                                               
00348c   2bc3     INCF      0xc3,0x1,0x1   				packet_buffer_index++;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           			                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
00348e   51c3     MOVF      0xc3,0x0,0x1   			if(packet_buffer_index == sizeof(T_Packet_Data_Type)) // complete packet?     C:\FIRST\ATLcode\WorkHere\camera.c
003490   6e2b     MOVWF     0x2b,0x0                                                                                        
003492   6a2c     CLRF      0x2c,0x0                                                                                        
003494   0e08     MOVLW     0x8                                                                                             
003496   182b     XORWF     0x2b,0x0,0x0                                                                                    
003498   e101     BNZ       0x349c                                                                                          
00349a   502c     MOVF      0x2c,0x0,0x0                                                                                    
00349c   e116     BNZ       0x34ca                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00349e   c2a1     MOVFF     0x2a1,0x299    				T_Packet_Data.mx = packet_buffer[0];                                         C:\FIRST\ATLcode\WorkHere\camera.c
0034a0   f299                                                                                                               
0034a2   c2a2     MOVFF     0x2a2,0x29a    				T_Packet_Data.my = packet_buffer[1];                                         C:\FIRST\ATLcode\WorkHere\camera.c
0034a4   f29a                                                                                                               
0034a6   c2a3     MOVFF     0x2a3,0x29b    				T_Packet_Data.x1 = packet_buffer[2];                                         C:\FIRST\ATLcode\WorkHere\camera.c
0034a8   f29b                                                                                                               
0034aa   c2a4     MOVFF     0x2a4,0x29c    				T_Packet_Data.y1 = packet_buffer[3];                                         C:\FIRST\ATLcode\WorkHere\camera.c
0034ac   f29c                                                                                                               
0034ae   c2a5     MOVFF     0x2a5,0x29d    				T_Packet_Data.x2 = packet_buffer[4];                                         C:\FIRST\ATLcode\WorkHere\camera.c
0034b0   f29d                                                                                                               
0034b2   c2a6     MOVFF     0x2a6,0x29e    				T_Packet_Data.y2 = packet_buffer[5];                                         C:\FIRST\ATLcode\WorkHere\camera.c
0034b4   f29e                                                                                                               
0034b6   c2a7     MOVFF     0x2a7,0x29f    				T_Packet_Data.pixels = packet_buffer[6];                                     C:\FIRST\ATLcode\WorkHere\camera.c
0034b8   f29f                                                                                                               
0034ba   c2a8     MOVFF     0x2a8,0x2a0    				T_Packet_Data.confidence = packet_buffer[7];                                 C:\FIRST\ATLcode\WorkHere\camera.c
0034bc   f2a0                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0034be   0103     MOVLB     0x3            				camera_t_packets++;                                                          C:\FIRST\ATLcode\WorkHere\camera.c
0034c0   2b27     INCF      0x27,0x1,0x1                                                                                    
0034c2   0e00     MOVLW     0x0                                                                                             
0034c4   2328     ADDWFC    0x28,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0034c6   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED; // we're done; go back to the unsynchronized state   C:\FIRST\ATLcode\WorkHere\camera.c
0034c8   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
0034ca   d04a     BRA       0x3560         			break;                                                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           		case RECEIVING_ACK:                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0034cc   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\FIRST\ATLcode\WorkHere\camera.c
0034ce   0102     MOVLB     0x2                                                                                             
0034d0   5dc4     SUBWF     0xc4,0x0,0x1                                                                                    
0034d2   e106     BNZ       0x34e0                                                                                          
0034d4   0efe     MOVLW     0xfe                                                                                            
0034d6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0034d8   0843     SUBLW     0x43                                                                                            
0034da   e102     BNZ       0x34e0                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
0034dc   2bc4     INCF      0xc4,0x1,0x1   				packet_char_count++;                                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
0034de   d01a     BRA       0x3514         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\FIRST\ATLcode\WorkHere\camera.c
0034e0   0e03     MOVLW     0x3                                                                                             
0034e2   5dc4     SUBWF     0xc4,0x0,0x1                                                                                    
0034e4   e106     BNZ       0x34f2                                                                                          
0034e6   0efe     MOVLW     0xfe                                                                                            
0034e8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0034ea   084b     SUBLW     0x4b                                                                                            
0034ec   e102     BNZ       0x34f2                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
0034ee   2bc4     INCF      0xc4,0x1,0x1   				packet_char_count++;                                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
0034f0   d011     BRA       0x3514         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\FIRST\ATLcode\WorkHere\camera.c
0034f2   0e04     MOVLW     0x4                                                                                             
0034f4   5dc4     SUBWF     0xc4,0x0,0x1                                                                                    
0034f6   e10b     BNZ       0x350e                                                                                          
0034f8   0efe     MOVLW     0xfe                                                                                            
0034fa   50db     MOVF      0xdb,0x0,0x0                                                                                    
0034fc   080d     SUBLW     0xd                                                                                             
0034fe   e107     BNZ       0x350e                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003500   0103     MOVLB     0x3            				camera_acks++;                                                               C:\FIRST\ATLcode\WorkHere\camera.c
003502   2b29     INCF      0x29,0x1,0x1                                                                                    
003504   0e00     MOVLW     0x0                                                                                             
003506   232a     ADDWFC    0x2a,0x1,0x1                                                                                    
003508   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\FIRST\ATLcode\WorkHere\camera.c
00350a   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00350c   d003     BRA       0x3514         			else                                                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00350e   0103     MOVLB     0x3            				state = UNSYNCHRONIZED;                                                      C:\FIRST\ATLcode\WorkHere\camera.c
003510   0e01     MOVLW     0x1                                                                                             
003512   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003514   d025     BRA       0x3560         			break;                                                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           		case RECEIVING_NCK:                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003516   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\FIRST\ATLcode\WorkHere\camera.c
003518   0102     MOVLB     0x2                                                                                             
00351a   5dc4     SUBWF     0xc4,0x0,0x1                                                                                    
00351c   e106     BNZ       0x352a                                                                                          
00351e   0efe     MOVLW     0xfe                                                                                            
003520   50db     MOVF      0xdb,0x0,0x0                                                                                    
003522   0843     SUBLW     0x43                                                                                            
003524   e102     BNZ       0x352a                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003526   2bc4     INCF      0xc4,0x1,0x1   				packet_char_count++;                                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003528   d01a     BRA       0x355e         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\FIRST\ATLcode\WorkHere\camera.c
00352a   0e03     MOVLW     0x3                                                                                             
00352c   5dc4     SUBWF     0xc4,0x0,0x1                                                                                    
00352e   e106     BNZ       0x353c                                                                                          
003530   0efe     MOVLW     0xfe                                                                                            
003532   50db     MOVF      0xdb,0x0,0x0                                                                                    
003534   084b     SUBLW     0x4b                                                                                            
003536   e102     BNZ       0x353c                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003538   2bc4     INCF      0xc4,0x1,0x1   				packet_char_count++;                                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00353a   d011     BRA       0x355e         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\FIRST\ATLcode\WorkHere\camera.c
00353c   0e04     MOVLW     0x4                                                                                             
00353e   5dc4     SUBWF     0xc4,0x0,0x1                                                                                    
003540   e10b     BNZ       0x3558                                                                                          
003542   0efe     MOVLW     0xfe                                                                                            
003544   50db     MOVF      0xdb,0x0,0x0                                                                                    
003546   080d     SUBLW     0xd                                                                                             
003548   e107     BNZ       0x3558                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00354a   0103     MOVLB     0x3            				camera_ncks++;                                                               C:\FIRST\ATLcode\WorkHere\camera.c
00354c   2b2b     INCF      0x2b,0x1,0x1                                                                                    
00354e   0e00     MOVLW     0x0                                                                                             
003550   232c     ADDWFC    0x2c,0x1,0x1                                                                                    
003552   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\FIRST\ATLcode\WorkHere\camera.c
003554   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003556   d003     BRA       0x355e         			else                                                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003558   0103     MOVLB     0x3            				state = UNSYNCHRONIZED;                                                      C:\FIRST\ATLcode\WorkHere\camera.c
00355a   0e01     MOVLW     0x1                                                                                             
00355c   6f2d     MOVWF     0x2d,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\camera.c
00355e   d000     BRA       0x3560         			break;	                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
003560   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003562   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003564   ffd9                                                                                                               
003566   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Initialize_Camera()                                                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		This function is responsable for initializing the                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					camera.                                                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:	Camera_Handler(), below.                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		0: Initialization in progress.                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					1: Initialization has completed.                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					2-127: Camera returned a NCK and the returned value                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					indicates the state that caused the NCK.                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					128-255: Camera didn't return a ACK or NCK within                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					the time allowed. The returned value is the value                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					128 added to the state that failed. The amount of                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					time allowed is set by the MAX_ACK_LOOP_COUNT                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					parameter found in camera.h.					                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		Camera_acks and camera_ncks are incremented by the                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					function Camera_State_Machine() which is called by                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					Process_Camera_Data() to process data sent by the                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					camera.                                                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					                                                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
003568   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Initialize_Camera(void)                                            C:\FIRST\ATLcode\WorkHere\camera.c
00356a   ffe6                                                                                                               
00356c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00356e   ffd9                                                                                                               
003570   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char boot_initialization_flag = 1;                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char initialize_flag = 1;                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char state;                                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char wait_for_ack;                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned int loop_count;                                                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           	static unsigned char return_value;                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           	unsigned char returned_value;                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// stuff to do after the camera goes through a power-on reset                   C:\FIRST\ATLcode\WorkHere\camera.c
003572   0103     MOVLB     0x3            	if(boot_initialization_flag == 1)                                               C:\FIRST\ATLcode\WorkHere\camera.c
003574   052e     DECF      0x2e,0x0,0x1                                                                                    
003576   e107     BNZ       0x3586                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// get the camera's attention                                                  C:\FIRST\ATLcode\WorkHere\camera.c
003578   d98a     RCALL     0x388e         		Camera_Idle();                                                                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// set the command & packet transfer mode                                      C:\FIRST\ATLcode\WorkHere\camera.c
00357a   0e05     MOVLW     0x5            		Raw_Mode(5);                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
00357c   6ee6     MOVWF     0xe6,0x0                                                                                        
00357e   d993     RCALL     0x38a6                                                                                          
003580   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		// don't execute this code again until the next power on reset                 C:\FIRST\ATLcode\WorkHere\camera.c
003582   0103     MOVLB     0x3            		boot_initialization_flag = 0;                                                  C:\FIRST\ATLcode\WorkHere\camera.c
003584   6b2e     CLRF      0x2e,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// do we need to (re)initialize the state machine?                              C:\FIRST\ATLcode\WorkHere\camera.c
003586   052f     DECF      0x2f,0x0,0x1   	if(initialize_flag == 1)                                                        C:\FIRST\ATLcode\WorkHere\camera.c
003588   e10d     BNZ       0x35a4                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
00358a   6b2f     CLRF      0x2f,0x1       		initialize_flag = 0;                                                           C:\FIRST\ATLcode\WorkHere\camera.c
00358c   0102     MOVLB     0x2            		wait_for_ack = 0;                                                              C:\FIRST\ATLcode\WorkHere\camera.c
00358e   6bc6     CLRF      0xc6,0x1                                                                                        
003590   0e01     MOVLW     0x1            		state = STATE_ONE;                                                             C:\FIRST\ATLcode\WorkHere\camera.c
003592   6fc5     MOVWF     0xc5,0x1                                                                                        
003594   6bc7     CLRF      0xc7,0x1       		loop_count = 0;                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003596   6bc8     CLRF      0xc8,0x1                                                                                        
003598   6bc9     CLRF      0xc9,0x1       		return_value = 0;                                                              C:\FIRST\ATLcode\WorkHere\camera.c
00359a   0103     MOVLB     0x3            		camera_acks = 0;                                                               C:\FIRST\ATLcode\WorkHere\camera.c
00359c   6b29     CLRF      0x29,0x1                                                                                        
00359e   6b2a     CLRF      0x2a,0x1                                                                                        
0035a0   6b2b     CLRF      0x2b,0x1       		camera_ncks = 0;                                                               C:\FIRST\ATLcode\WorkHere\camera.c
0035a2   6b2c     CLRF      0x2c,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// do we need to wait for an ACK from the camera?                               C:\FIRST\ATLcode\WorkHere\camera.c
0035a4   0102     MOVLB     0x2            	if(wait_for_ack == 1)                                                           C:\FIRST\ATLcode\WorkHere\camera.c
0035a6   05c6     DECF      0xc6,0x0,0x1                                                                                    
0035a8   e129     BNZ       0x35fc                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
0035aa   0103     MOVLB     0x3            		if(camera_acks >= 1) // got ACK?                                               C:\FIRST\ATLcode\WorkHere\camera.c
0035ac   0e01     MOVLW     0x1                                                                                             
0035ae   5d29     SUBWF     0x29,0x0,0x1                                                                                    
0035b0   0e00     MOVLW     0x0                                                                                             
0035b2   592a     SUBWFB    0x2a,0x0,0x1                                                                                    
0035b4   e305     BNC       0x35c0                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// we're no longer waiting for an ACK                                         C:\FIRST\ATLcode\WorkHere\camera.c
0035b6   0102     MOVLB     0x2            			wait_for_ack = 0;                                                             C:\FIRST\ATLcode\WorkHere\camera.c
0035b8   6bc6     CLRF      0xc6,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// reset the loop counter                                                     C:\FIRST\ATLcode\WorkHere\camera.c
0035ba   6bc7     CLRF      0xc7,0x1       			loop_count = 0;                                                               C:\FIRST\ATLcode\WorkHere\camera.c
0035bc   6bc8     CLRF      0xc8,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
0035be   d01d     BRA       0x35fa         		else if(camera_ncks >= 1) // got NCK?                                          C:\FIRST\ATLcode\WorkHere\camera.c
0035c0   0e01     MOVLW     0x1                                                                                             
0035c2   5d2b     SUBWF     0x2b,0x0,0x1                                                                                    
0035c4   0e00     MOVLW     0x0                                                                                             
0035c6   592c     SUBWFB    0x2c,0x0,0x1                                                                                    
0035c8   e304     BNC       0x35d2                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// return with a value that signals an error happened                         C:\FIRST\ATLcode\WorkHere\camera.c
0035ca   0102     MOVLB     0x2            			return_value = state - 1;                                                     C:\FIRST\ATLcode\WorkHere\camera.c
0035cc   05c5     DECF      0xc5,0x0,0x1                                                                                    
0035ce   6fc9     MOVWF     0xc9,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
0035d0   d014     BRA       0x35fa         		else if(loop_count >= MAX_ACK_LOOP_COUNT) // have we waited too long?          C:\FIRST\ATLcode\WorkHere\camera.c
0035d2   0102     MOVLB     0x2                                                                                             
0035d4   0e0a     MOVLW     0xa                                                                                             
0035d6   5dc7     SUBWF     0xc7,0x0,0x1                                                                                    
0035d8   0e00     MOVLW     0x0                                                                                             
0035da   59c8     SUBWFB    0xc8,0x0,0x1                                                                                    
0035dc   e30b     BNC       0x35f4                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// return with a value that signals an error happened                         C:\FIRST\ATLcode\WorkHere\camera.c
0035de   0e80     MOVLW     0x80           			return_value = state + 128 - 1;                                               C:\FIRST\ATLcode\WorkHere\camera.c
0035e0   25c5     ADDWF     0xc5,0x0,0x1                                                                                    
0035e2   6e2b     MOVWF     0x2b,0x0                                                                                        
0035e4   6a2c     CLRF      0x2c,0x0                                                                                        
0035e6   0e00     MOVLW     0x0                                                                                             
0035e8   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
0035ea   062b     DECF      0x2b,0x1,0x0                                                                                    
0035ec   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
0035ee   c02b     MOVFF     0x2b,0x2c9                                                                                      
0035f0   f2c9                                                                                                               
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
0035f2   d003     BRA       0x35fa         		else                                                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// if we fall through to here it means that that we've sent a                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// command to the camera, and we're still waiting to receive                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// an ACK/NCK or time-out, so other than incrementing the loop                C:\FIRST\ATLcode\WorkHere\camera.c
                                           			// counter, we don't do anything and continue to wait...                      C:\FIRST\ATLcode\WorkHere\camera.c
0035f4   2bc7     INCF      0xc7,0x1,0x1   			loop_count++;                                                                 C:\FIRST\ATLcode\WorkHere\camera.c
0035f6   0e00     MOVLW     0x0                                                                                             
0035f8   23c8     ADDWFC    0xc8,0x1,0x1                                                                                    
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
0035fa   d109     BRA       0x380e         	else                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// if debugging mode is on, send camera initialization information             C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// to the terminal (the DEBUG() macro is defined in camera.h                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           		DEBUG(("Camera: Initialization state = %u\r\n", (unsigned int)state));         C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           		// reset the ACK/NCK counters                                                  C:\FIRST\ATLcode\WorkHere\camera.c
0035fc   0103     MOVLB     0x3            		camera_acks = 0;                                                               C:\FIRST\ATLcode\WorkHere\camera.c
0035fe   6b29     CLRF      0x29,0x1                                                                                        
003600   6b2a     CLRF      0x2a,0x1                                                                                        
003602   6b2b     CLRF      0x2b,0x1       		camera_ncks = 0;                                                               C:\FIRST\ATLcode\WorkHere\camera.c
003604   6b2c     CLRF      0x2c,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003606   0102     MOVLB     0x2            		switch(state)                                                                  C:\FIRST\ATLcode\WorkHere\camera.c
003608   51c5     MOVF      0xc5,0x0,0x1                                                                                    
00360a   0a12     XORLW     0x12                                                                                            
00360c   e101     BNZ       0x3610                                                                                          
00360e   d0fc     BRA       0x3808                                                                                          
003610   0a03     XORLW     0x3                                                                                             
003612   e101     BNZ       0x3616                                                                                          
003614   d0e2     BRA       0x37da                                                                                          
003616   0a01     XORLW     0x1                                                                                             
003618   e101     BNZ       0x361c                                                                                          
00361a   d0d6     BRA       0x37c8                                                                                          
00361c   0a1f     XORLW     0x1f                                                                                            
00361e   e101     BNZ       0x3622                                                                                          
003620   d0c6     BRA       0x37ae                                                                                          
003622   0a01     XORLW     0x1                                                                                             
003624   e101     BNZ       0x3628                                                                                          
003626   d0b6     BRA       0x3794                                                                                          
003628   0a03     XORLW     0x3                                                                                             
00362a   e101     BNZ       0x362e                                                                                          
00362c   d0a6     BRA       0x377a                                                                                          
00362e   0a01     XORLW     0x1                                                                                             
003630   e101     BNZ       0x3634                                                                                          
003632   d096     BRA       0x3760                                                                                          
003634   0a07     XORLW     0x7                                                                                             
003636   e101     BNZ       0x363a                                                                                          
003638   d086     BRA       0x3746                                                                                          
00363a   0a01     XORLW     0x1                                                                                             
00363c   e101     BNZ       0x3640                                                                                          
00363e   d078     BRA       0x3730                                                                                          
003640   0a03     XORLW     0x3                                                                                             
003642   e069     BZ        0x3716                                                                                          
003644   0a01     XORLW     0x1                                                                                             
003646   e05a     BZ        0x36fc                                                                                          
003648   0a0f     XORLW     0xf                                                                                             
00364a   e04b     BZ        0x36e2                                                                                          
00364c   0a01     XORLW     0x1                                                                                             
00364e   e03c     BZ        0x36c8                                                                                          
003650   0a03     XORLW     0x3                                                                                             
003652   e02d     BZ        0x36ae                                                                                          
003654   0a01     XORLW     0x1                                                                                             
003656   e01e     BZ        0x3694                                                                                          
003658   0a07     XORLW     0x7                                                                                             
00365a   e00f     BZ        0x367a                                                                                          
00365c   0a01     XORLW     0x1                                                                                             
00365e   e009     BZ        0x3672                                                                                          
003660   0a03     XORLW     0x3                                                                                             
003662   e001     BZ        0x3666                                                                                          
003664   d0d4     BRA       0x380e                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_ONE:                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// get the camera's attention                                                C:\FIRST\ATLcode\WorkHere\camera.c
003666   d913     RCALL     0x388e         				Camera_Idle();                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003668   0102     MOVLB     0x2            				state = STATE_TWO;                                                           C:\FIRST\ATLcode\WorkHere\camera.c
00366a   0e02     MOVLW     0x2                                                                                             
00366c   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\FIRST\ATLcode\WorkHere\camera.c
00366e   6bc6     CLRF      0xc6,0x1       				wait_for_ack = 0;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003670   d0ce     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_TWO:                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003672   0e03     MOVLW     0x3            				state = STATE_THREE;                                                         C:\FIRST\ATLcode\WorkHere\camera.c
003674   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\FIRST\ATLcode\WorkHere\camera.c
003676   6bc6     CLRF      0xc6,0x1       				wait_for_ack = 0;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003678   d0ca     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_THREE:                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Common Control I register                                  C:\FIRST\ATLcode\WorkHere\camera.c
00367a   0e80     MOVLW     0x80           				Write_Camera_Module_Register(COMI_ADDRESS, COMI_DEFAULT);                    C:\FIRST\ATLcode\WorkHere\camera.c
00367c   6ee6     MOVWF     0xe6,0x0                                                                                        
00367e   0e29     MOVLW     0x29                                                                                            
003680   6ee6     MOVWF     0xe6,0x0                                                                                        
003682   d948     RCALL     0x3914                                                                                          
003684   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003686   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003688   0102     MOVLB     0x2            				state = STATE_FOUR;                                                          C:\FIRST\ATLcode\WorkHere\camera.c
00368a   0e04     MOVLW     0x4                                                                                             
00368c   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
00368e   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003690   6fc6     MOVWF     0xc6,0x1                                                                                        
003692   d0bd     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_FOUR:                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Common Control B register                                  C:\FIRST\ATLcode\WorkHere\camera.c
003694   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMB_ADDRESS, COMB_DEFAULT);                    C:\FIRST\ATLcode\WorkHere\camera.c
003696   6ee6     MOVWF     0xe6,0x0                                                                                        
003698   0e13     MOVLW     0x13                                                                                            
00369a   6ee6     MOVWF     0xe6,0x0                                                                                        
00369c   d93b     RCALL     0x3914                                                                                          
00369e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0036a2   0102     MOVLB     0x2            				state = STATE_FIVE;                                                          C:\FIRST\ATLcode\WorkHere\camera.c
0036a4   0e05     MOVLW     0x5                                                                                             
0036a6   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
0036a8   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0036aa   6fc6     MOVWF     0xc6,0x1                                                                                        
0036ac   d0b0     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_FIVE:                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Common Control J register to power-on state                C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// to disable the banding filter, which must be done before                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// setting the Frame Rate Adjust register 2 (EHSL)                           C:\FIRST\ATLcode\WorkHere\camera.c
0036ae   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\FIRST\ATLcode\WorkHere\camera.c
0036b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0036b2   0e2d     MOVLW     0x2d                                                                                            
0036b4   6ee6     MOVWF     0xe6,0x0                                                                                        
0036b6   d92e     RCALL     0x3914                                                                                          
0036b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0036bc   0102     MOVLB     0x2            				state = STATE_SIX;                                                           C:\FIRST\ATLcode\WorkHere\camera.c
0036be   0e06     MOVLW     0x6                                                                                             
0036c0   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
0036c2   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0036c4   6fc6     MOVWF     0xc6,0x1                                                                                        
0036c6   d0a3     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_SIX:                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Frame Rate Adjust register 1                               C:\FIRST\ATLcode\WorkHere\camera.c
0036c8   0e80     MOVLW     0x80           				Write_Camera_Module_Register(EHSH_ADDRESS, EHSH_DEFAULT);                    C:\FIRST\ATLcode\WorkHere\camera.c
0036ca   6ee6     MOVWF     0xe6,0x0                                                                                        
0036cc   0e2a     MOVLW     0x2a                                                                                            
0036ce   6ee6     MOVWF     0xe6,0x0                                                                                        
0036d0   d921     RCALL     0x3914                                                                                          
0036d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0036d6   0102     MOVLB     0x2            				state = STATE_SEVEN;                                                         C:\FIRST\ATLcode\WorkHere\camera.c
0036d8   0e07     MOVLW     0x7                                                                                             
0036da   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
0036dc   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0036de   6fc6     MOVWF     0xc6,0x1                                                                                        
0036e0   d096     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_SEVEN:                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Frame Rate Adjust register 2                               C:\FIRST\ATLcode\WorkHere\camera.c
0036e2   0e20     MOVLW     0x20           				Write_Camera_Module_Register(EHSL_ADDRESS, EHSL_DEFAULT);                    C:\FIRST\ATLcode\WorkHere\camera.c
0036e4   6ee6     MOVWF     0xe6,0x0                                                                                        
0036e6   0e2b     MOVLW     0x2b                                                                                            
0036e8   6ee6     MOVWF     0xe6,0x0                                                                                        
0036ea   d914     RCALL     0x3914                                                                                          
0036ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0036f0   0102     MOVLB     0x2            				state = STATE_EIGHT;                                                         C:\FIRST\ATLcode\WorkHere\camera.c
0036f2   0e08     MOVLW     0x8                                                                                             
0036f4   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
0036f6   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0036f8   6fc6     MOVWF     0xc6,0x1                                                                                        
0036fa   d089     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_EIGHT:                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Common Control J register                                  C:\FIRST\ATLcode\WorkHere\camera.c
0036fc   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\FIRST\ATLcode\WorkHere\camera.c
0036fe   6ee6     MOVWF     0xe6,0x0                                                                                        
003700   0e2d     MOVLW     0x2d                                                                                            
003702   6ee6     MOVWF     0xe6,0x0                                                                                        
003704   d907     RCALL     0x3914                                                                                          
003706   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003708   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
00370a   0102     MOVLB     0x2            				state = STATE_NINE;                                                          C:\FIRST\ATLcode\WorkHere\camera.c
00370c   0e09     MOVLW     0x9                                                                                             
00370e   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
003710   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003712   6fc6     MOVWF     0xc6,0x1                                                                                        
003714   d07c     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_NINE:                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Common Control A register                                  C:\FIRST\ATLcode\WorkHere\camera.c
003716   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMA_ADDRESS, COMA_DEFAULT);                    C:\FIRST\ATLcode\WorkHere\camera.c
003718   6ee6     MOVWF     0xe6,0x0                                                                                        
00371a   0e12     MOVLW     0x12                                                                                            
00371c   6ee6     MOVWF     0xe6,0x0                                                                                        
00371e   d8fa     RCALL     0x3914                                                                                          
003720   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003722   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003724   0102     MOVLB     0x2            				state = STATE_TEN;                                                           C:\FIRST\ATLcode\WorkHere\camera.c
003726   0e0a     MOVLW     0xa                                                                                             
003728   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
00372a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
00372c   6fc6     MOVWF     0xc6,0x1                                                                                        
00372e   d06f     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_TEN:                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Automatic Gain Control register                            C:\FIRST\ATLcode\WorkHere\camera.c
003730   6ae6     CLRF      0xe6,0x0       				Write_Camera_Module_Register(AGC_ADDRESS, AGC_DEFAULT);                      C:\FIRST\ATLcode\WorkHere\camera.c
003732   6ae6     CLRF      0xe6,0x0                                                                                        
003734   d8ef     RCALL     0x3914                                                                                          
003736   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003738   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
00373a   0102     MOVLB     0x2            				state = STATE_ELEVEN;                                                        C:\FIRST\ATLcode\WorkHere\camera.c
00373c   0e0b     MOVLW     0xb                                                                                             
00373e   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
003740   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003742   6fc6     MOVWF     0xc6,0x1                                                                                        
003744   d064     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_ELEVEN:                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Blue Gain Control register                                 C:\FIRST\ATLcode\WorkHere\camera.c
003746   0e80     MOVLW     0x80           				Write_Camera_Module_Register(BLU_ADDRESS, BLU_DEFAULT);                      C:\FIRST\ATLcode\WorkHere\camera.c
003748   6ee6     MOVWF     0xe6,0x0                                                                                        
00374a   0e01     MOVLW     0x1                                                                                             
00374c   6ee6     MOVWF     0xe6,0x0                                                                                        
00374e   d8e2     RCALL     0x3914                                                                                          
003750   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003752   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003754   0102     MOVLB     0x2            				state = STATE_TWELVE;                                                        C:\FIRST\ATLcode\WorkHere\camera.c
003756   0e0c     MOVLW     0xc                                                                                             
003758   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
00375a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
00375c   6fc6     MOVWF     0xc6,0x1                                                                                        
00375e   d057     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_TWELVE:                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Red Gain Control register                                  C:\FIRST\ATLcode\WorkHere\camera.c
003760   0e80     MOVLW     0x80           				Write_Camera_Module_Register(RED_ADDRESS, RED_DEFAULT);                      C:\FIRST\ATLcode\WorkHere\camera.c
003762   6ee6     MOVWF     0xe6,0x0                                                                                        
003764   0e02     MOVLW     0x2                                                                                             
003766   6ee6     MOVWF     0xe6,0x0                                                                                        
003768   d8d5     RCALL     0x3914                                                                                          
00376a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00376c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
00376e   0102     MOVLB     0x2            				state = STATE_THIRTEEN;                                                      C:\FIRST\ATLcode\WorkHere\camera.c
003770   0e0d     MOVLW     0xd                                                                                             
003772   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
003774   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003776   6fc6     MOVWF     0xc6,0x1                                                                                        
003778   d04a     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_THIRTEEN:                                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Saturation Control register                                C:\FIRST\ATLcode\WorkHere\camera.c
00377a   0e80     MOVLW     0x80           				Write_Camera_Module_Register(SAT_ADDRESS, SAT_DEFAULT);                      C:\FIRST\ATLcode\WorkHere\camera.c
00377c   6ee6     MOVWF     0xe6,0x0                                                                                        
00377e   0e03     MOVLW     0x3                                                                                             
003780   6ee6     MOVWF     0xe6,0x0                                                                                        
003782   d8c8     RCALL     0x3914                                                                                          
003784   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003786   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003788   0102     MOVLB     0x2            				state = STATE_FOURTEEN;                                                      C:\FIRST\ATLcode\WorkHere\camera.c
00378a   0e0e     MOVLW     0xe                                                                                             
00378c   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
00378e   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003790   6fc6     MOVWF     0xc6,0x1                                                                                        
003792   d03d     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_FOURTEEN:                                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Brightness Control register                                C:\FIRST\ATLcode\WorkHere\camera.c
003794   0e01     MOVLW     0x1            				Write_Camera_Module_Register(BRT_ADDRESS, BRT_DEFAULT);                      C:\FIRST\ATLcode\WorkHere\camera.c
003796   6ee6     MOVWF     0xe6,0x0                                                                                        
003798   0e06     MOVLW     0x6                                                                                             
00379a   6ee6     MOVWF     0xe6,0x0                                                                                        
00379c   d8bb     RCALL     0x3914                                                                                          
00379e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0037a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0037a2   0102     MOVLB     0x2            				state = STATE_FIFTEEN;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
0037a4   0e0f     MOVLW     0xf                                                                                             
0037a6   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
0037a8   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0037aa   6fc6     MOVWF     0xc6,0x1                                                                                        
0037ac   d030     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_FIFTEEN:                                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Automatic Exposure Control register                        C:\FIRST\ATLcode\WorkHere\camera.c
0037ae   0e01     MOVLW     0x1            				Write_Camera_Module_Register(AEC_ADDRESS, AEC_DEFAULT);                      C:\FIRST\ATLcode\WorkHere\camera.c
0037b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0037b2   0e10     MOVLW     0x10                                                                                            
0037b4   6ee6     MOVWF     0xe6,0x0                                                                                        
0037b6   d8ae     RCALL     0x3914                                                                                          
0037b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0037ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0037bc   0102     MOVLB     0x2            				state = STATE_SIXTEEN;                                                       C:\FIRST\ATLcode\WorkHere\camera.c
0037be   0e10     MOVLW     0x10                                                                                            
0037c0   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
0037c2   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0037c4   6fc6     MOVWF     0xc6,0x1                                                                                        
0037c6   d023     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_SIXTEEN:                                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// initialize the Noise Filter value                                         C:\FIRST\ATLcode\WorkHere\camera.c
0037c8   6ae6     CLRF      0xe6,0x0       				Noise_Filter(NF_DEFAULT);                                                    C:\FIRST\ATLcode\WorkHere\camera.c
0037ca   d88b     RCALL     0x38e2                                                                                          
0037cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0037ce   0102     MOVLB     0x2            				state = STATE_SEVENTEEN;                                                     C:\FIRST\ATLcode\WorkHere\camera.c
0037d0   0e11     MOVLW     0x11                                                                                            
0037d2   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
0037d4   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
0037d6   6fc6     MOVWF     0xc6,0x1                                                                                        
0037d8   d01a     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_SEVENTEEN:                                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// send the TC or Track Color command                                        C:\FIRST\ATLcode\WorkHere\camera.c
0037ea   0e73     MOVLW     0x73           				Track_Color(R_MIN_DEFAULT, R_MAX_DEFAULT,                                    C:\FIRST\ATLcode\WorkHere\camera.c
0037ec   6ee6     MOVWF     0xe6,0x0                                                                                        
0037ee   0e55     MOVLW     0x55                                                                                            
0037f0   6ee6     MOVWF     0xe6,0x0                                                                                        
0037e2   0e11     MOVLW     0x11           							G_MIN_DEFAULT, G_MAX_DEFAULT,                                             C:\FIRST\ATLcode\WorkHere\camera.c
0037e4   6ee6     MOVWF     0xe6,0x0                                                                                        
0037e6   0e0f     MOVLW     0xf                                                                                             
0037e8   6ee6     MOVWF     0xe6,0x0                                                                                        
0037da   0e91     MOVLW     0x91           							B_MIN_DEFAULT, B_MAX_DEFAULT);                                            C:\FIRST\ATLcode\WorkHere\camera.c
0037dc   6ee6     MOVWF     0xe6,0x0                                                                                        
0037de   0e64     MOVLW     0x64                                                                                            
0037e0   6ee6     MOVWF     0xe6,0x0                                                                                        
0037f2   d81b     RCALL     0x382a                                                                                          
0037f4   6ef5     MOVWF     0xf5,0x0                                                                                        
0037f6   0e06     MOVLW     0x6                                                                                             
0037f8   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0037fa   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           				// next state                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0037fc   0102     MOVLB     0x2            				state = STATE_EIGHTEEN;                                                      C:\FIRST\ATLcode\WorkHere\camera.c
0037fe   0e12     MOVLW     0x12                                                                                            
003800   6fc5     MOVWF     0xc5,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\FIRST\ATLcode\WorkHere\camera.c
003802   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003804   6fc6     MOVWF     0xc6,0x1                                                                                        
003806   d003     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           			case STATE_EIGHTEEN:                                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           				// signal that we're done                                                    C:\FIRST\ATLcode\WorkHere\camera.c
003808   0e01     MOVLW     0x1            				return_value = 1;                                                            C:\FIRST\ATLcode\WorkHere\camera.c
00380a   6fc9     MOVWF     0xc9,0x1                                                                                        
00380c   d000     BRA       0x380e         				break;                                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// If we're returning from this function with a value greater                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// than zero, it means that configuration is complete or we've                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// generated an error. In either case we'll want to re-initialize               C:\FIRST\ATLcode\WorkHere\camera.c
                                           	// the state machine if this function is called again.                          C:\FIRST\ATLcode\WorkHere\camera.c
00380e   51c9     MOVF      0xc9,0x0,0x1   	if(return_value > 0)                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003810   0800     SUBLW     0x0                                                                                             
003812   e203     BC        0x381a                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
003814   0103     MOVLB     0x3            		initialize_flag = 1;                                                           C:\FIRST\ATLcode\WorkHere\camera.c
003816   0e01     MOVLW     0x1                                                                                             
003818   6f2f     MOVWF     0x2f,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
00381a   0102     MOVLB     0x2            	return(return_value);	                                                          C:\FIRST\ATLcode\WorkHere\camera.c
00381c   51c9     MOVF      0xc9,0x0,0x1                                                                                    
00381e   d000     BRA       0x3820                                                                                          
003820   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003822   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003824   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003826   ffd9                                                                                                               
003828   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Track_Color()                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Properly formats and sends a TC (Track Color) command                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					to the camera.		                                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		Minimum and maximum intensity values for the red, green           C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					and blue (or YCrCb) channels.                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
00382a   cfd9     MOVFF     0xfd9,0xfe6    void Track_Color(unsigned char Rmin, unsigned char Rmax,                         C:\FIRST\ATLcode\WorkHere\camera.c
00382c   ffe6                                                                                                               
00382e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003830   ffd9                                                                                                               
                                           				 unsigned char Gmin, unsigned char Gmax,                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           				 unsigned char Bmin, unsigned char Bmax)                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003832   0e54     MOVLW     0x54           	Write_Camera_Serial_Port('T');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
003834   6ee6     MOVWF     0xe6,0x0                                                                                        
003836   d894     RCALL     0x3960                                                                                          
003838   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00383a   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
00383c   6ee6     MOVWF     0xe6,0x0                                                                                        
00383e   d890     RCALL     0x3960                                                                                          
003840   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003842   0e06     MOVLW     0x6            	Write_Camera_Serial_Port(6);                                                    C:\FIRST\ATLcode\WorkHere\camera.c
003844   6ee6     MOVWF     0xe6,0x0                                                                                        
003846   d88c     RCALL     0x3960                                                                                          
003848   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00384a   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(Rmin);                                                 C:\FIRST\ATLcode\WorkHere\camera.c
00384c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00384e   ffe6                                                                                                               
003850   d887     RCALL     0x3960                                                                                          
003852   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003854   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(Rmax);                                                 C:\FIRST\ATLcode\WorkHere\camera.c
003856   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003858   ffe6                                                                                                               
00385a   d882     RCALL     0x3960                                                                                          
00385c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00385e   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(Gmin);                                                 C:\FIRST\ATLcode\WorkHere\camera.c
003860   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003862   ffe6                                                                                                               
003864   d87d     RCALL     0x3960                                                                                          
003866   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003868   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(Gmax);                                                 C:\FIRST\ATLcode\WorkHere\camera.c
00386a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00386c   ffe6                                                                                                               
00386e   d878     RCALL     0x3960                                                                                          
003870   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003872   0efa     MOVLW     0xfa           	Write_Camera_Serial_Port(Bmin);                                                 C:\FIRST\ATLcode\WorkHere\camera.c
003874   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003876   ffe6                                                                                                               
003878   d873     RCALL     0x3960                                                                                          
00387a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00387c   0ef9     MOVLW     0xf9           	Write_Camera_Serial_Port(Bmax);                                                 C:\FIRST\ATLcode\WorkHere\camera.c
00387e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003880   ffe6                                                                                                               
003882   d86e     RCALL     0x3960                                                                                          
003884   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003886   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003888   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00388a   ffd9                                                                                                               
00388c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Camera_Idle()                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		If the camera is currently streaming data, this command              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					will stop the streaming and prepare it to receive commands.                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
                                           void Camera_Idle(void)                                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
00388e   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\FIRST\ATLcode\WorkHere\camera.c
003890   6ee6     MOVWF     0xe6,0x0                                                                                        
003892   d866     RCALL     0x3960                                                                                          
003894   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003896   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Restart_Camera()                                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		This command will force a camera reinitialization		                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		none                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		nothing                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
                                           void Restart_Camera(void)                                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003898   0103     MOVLB     0x3            	camera_initialized = 0;                                                         C:\FIRST\ATLcode\WorkHere\camera.c
00389a   6b26     CLRF      0x26,0x1                                                                                        
00389c   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Get_Camera_State()                                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		                                                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		none                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		0: camera is initializing.                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					1: camera is initialized and sending T (Tracking) packets.                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned char Get_Camera_State(void)                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
00389e   0103     MOVLB     0x3            	return(camera_initialized);                                                     C:\FIRST\ATLcode\WorkHere\camera.c
0038a0   5126     MOVF      0x26,0x0,0x1                                                                                    
0038a2   d000     BRA       0x38a4                                                                                          
0038a4   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Raw_Mode()                                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera RM (Raw Mode) command            C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					to the camera. 		                                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		unsigned char                                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		nothing                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		This body of software assumes that raw serial communication         C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					mode five is invoked, meaning that camera input and output                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					is done in the raw binary format and that ACKs and NCKs                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					are not suppressed.                                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
0038a6   cfd9     MOVFF     0xfd9,0xfe6    void Raw_Mode(unsigned char mode)                                                C:\FIRST\ATLcode\WorkHere\camera.c
0038a8   ffe6                                                                                                               
0038aa   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0038ac   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0038ae   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
0038b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0038b2   d856     RCALL     0x3960                                                                                          
0038b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038b6   0e4d     MOVLW     0x4d           	Write_Camera_Serial_Port('M');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
0038b8   6ee6     MOVWF     0xe6,0x0                                                                                        
0038ba   d852     RCALL     0x3960                                                                                          
0038bc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038be   0e20     MOVLW     0x20           	Write_Camera_Serial_Port(' ');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
0038c0   6ee6     MOVWF     0xe6,0x0                                                                                        
0038c2   d84e     RCALL     0x3960                                                                                          
0038c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038c6   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(48 + mode);                                            C:\FIRST\ATLcode\WorkHere\camera.c
0038c8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0038ca   0f30     ADDLW     0x30                                                                                            
0038cc   6ee6     MOVWF     0xe6,0x0                                                                                        
0038ce   d848     RCALL     0x3960                                                                                          
0038d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038d2   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\FIRST\ATLcode\WorkHere\camera.c
0038d4   6ee6     MOVWF     0xe6,0x0                                                                                        
0038d6   d844     RCALL     0x3960                                                                                          
0038d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038da   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0038dc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0038de   ffd9                                                                                                               
0038e0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Noise_Filter()                                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera NF (Noise Filter)                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					command to the camera.                                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		Noise filter threshold value.                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
0038e2   cfd9     MOVFF     0xfd9,0xfe6    void Noise_Filter(unsigned char threshold)                                       C:\FIRST\ATLcode\WorkHere\camera.c
0038e4   ffe6                                                                                                               
0038e6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0038e8   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0038ea   0e4e     MOVLW     0x4e           	Write_Camera_Serial_Port('N');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
0038ec   6ee6     MOVWF     0xe6,0x0                                                                                        
0038ee   d838     RCALL     0x3960                                                                                          
0038f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038f2   0e46     MOVLW     0x46           	Write_Camera_Serial_Port('F');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
0038f4   6ee6     MOVWF     0xe6,0x0                                                                                        
0038f6   d834     RCALL     0x3960                                                                                          
0038f8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038fa   0e01     MOVLW     0x1            	Write_Camera_Serial_Port(1);                                                    C:\FIRST\ATLcode\WorkHere\camera.c
0038fc   6ee6     MOVWF     0xe6,0x0                                                                                        
0038fe   d830     RCALL     0x3960                                                                                          
003900   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003902   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(threshold);                                            C:\FIRST\ATLcode\WorkHere\camera.c
003904   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003906   ffe6                                                                                                               
003908   d82b     RCALL     0x3960                                                                                          
00390a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00390c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
00390e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003910   ffd9                                                                                                               
003912   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Write_Camera_Module_Register()                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Properly formats and sends a CR (Camera Register) command            C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					to the camera.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		Camera register number and new register value.                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
003914   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Module_Register(unsigned char reg, unsigned char value)        C:\FIRST\ATLcode\WorkHere\camera.c
003916   ffe6                                                                                                               
003918   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00391a   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
00391c   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
00391e   6ee6     MOVWF     0xe6,0x0                                                                                        
003920   d81f     RCALL     0x3960                                                                                          
003922   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003924   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\FIRST\ATLcode\WorkHere\camera.c
003926   6ee6     MOVWF     0xe6,0x0                                                                                        
003928   d81b     RCALL     0x3960                                                                                          
00392a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00392c   0e02     MOVLW     0x2            	Write_Camera_Serial_Port(2);                                                    C:\FIRST\ATLcode\WorkHere\camera.c
00392e   6ee6     MOVWF     0xe6,0x0                                                                                        
003930   d817     RCALL     0x3960                                                                                          
003932   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003934   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(reg);                                                  C:\FIRST\ATLcode\WorkHere\camera.c
003936   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003938   ffe6                                                                                                               
00393a   d812     RCALL     0x3960                                                                                          
00393c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00393e   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(value);                                                C:\FIRST\ATLcode\WorkHere\camera.c
003940   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003942   ffe6                                                                                                               
003944   d80d     RCALL     0x3960                                                                                          
003946   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003948   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
00394a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00394c   ffd9                                                                                                               
00394e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Camera_Serial_Port_Byte_Count()                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the camera serial port's              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					received data queue.		                                                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					properly set in camera.h.		                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned char Camera_Serial_Port_Byte_Count(void)                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           	return(Serial_Port_One_Byte_Count());                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           #else                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003950   ec70     CALL      0x48e0,0x0     	return(Serial_Port_Two_Byte_Count());                                           C:\FIRST\ATLcode\WorkHere\camera.c
003952   f024                                                                                                               
003954   d000     BRA       0x3956                                                                                          
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\camera.c
003956   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Read_Camera_Serial_Port()                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Reads a byte of data from the camera serial port.		                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		If data is present in the camera serial port's received              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					data is not present in the camera serial port's received                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					data queue, zero is returned.                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		Camera_Serial_Port_Byte_Count() should be called before             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					calling this function to make sure data is present.                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					properly set in camera.h.                                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned char Read_Camera_Serial_Port(void)                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           	return(Read_Serial_Port_One());                                                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           #else                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003958   eca6     CALL      0x494c,0x0     	return(Read_Serial_Port_Two());                                                 C:\FIRST\ATLcode\WorkHere\camera.c
00395a   f024                                                                                                               
00395c   d000     BRA       0x395e                                                                                          
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\camera.c
00395e   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Write_Camera_Serial_Port()                                          C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Sends a byte of data to the camera serial port.                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		Byte of data to send to the camera serial port.                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		nothing                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					properly set in camera.h.                                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
003960   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Serial_Port(unsigned char value)                               C:\FIRST\ATLcode\WorkHere\camera.c
003962   ffe6                                                                                                               
003964   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003966   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\FIRST\ATLcode\WorkHere\camera.c
                                           	Write_Serial_Port_One(value);                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           #else                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
003968   0efe     MOVLW     0xfe           	Write_Serial_Port_Two(value);                                                   C:\FIRST\ATLcode\WorkHere\camera.c
00396a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00396c   ffe6                                                                                                               
00396e   eced     CALL      0x49da,0x0                                                                                      
003970   f024                                                                                                               
003972   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\camera.c
003974   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
003976   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003978   ffd9                                                                                                               
00397a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Terminal_Serial_Port_Byte_Count()                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the terminal serial port's            C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					received data queue.                                                       C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		None.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					properly set in camera.h.                                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned char Terminal_Serial_Port_Byte_Count(void)                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\FIRST\ATLcode\WorkHere\camera.c
00397c   ec60     CALL      0x48c0,0x0     	return(Serial_Port_One_Byte_Count());                                           C:\FIRST\ATLcode\WorkHere\camera.c
00397e   f024                                                                                                               
003980   d000     BRA       0x3982                                                                                          
                                           #else                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	return(Serial_Port_Two_Byte_Count());                                           C:\FIRST\ATLcode\WorkHere\camera.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\camera.c
003982   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Read_Terminal_Serial_Port()                                         C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Reads a byte of data from the terminal serial port.                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		none                                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		If data is present in the terminal serial port's received            C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					data is not present in the terminal serial port's received                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					data queue, zero is returned.                                              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		Terminal_Serial_Port_Byte_Count() should be called before           C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					calling this function to make sure data is present.                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					properly set in camera.h.                                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
                                           unsigned char Read_Terminal_Serial_Port(void)                                    C:\FIRST\ATLcode\WorkHere\camera.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\FIRST\ATLcode\WorkHere\camera.c
003984   ec80     CALL      0x4900,0x0     	return(Read_Serial_Port_One());                                                 C:\FIRST\ATLcode\WorkHere\camera.c
003986   f024                                                                                                               
003988   d000     BRA       0x398a                                                                                          
                                           #else                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	return(Read_Serial_Port_Two());                                                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\camera.c
00398a   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	FUNCTION:		Write_Terminal_Serial_Port()                                        C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PURPOSE:		Sends a byte of data to the terminal serial port.		                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	PARAMETERS:		Byte of data to send to the terminal serial port.                 C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\FIRST\ATLcode\WorkHere\camera.c
                                           *					properly set in camera.h.                                                  C:\FIRST\ATLcode\WorkHere\camera.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\camera.c
00398c   cfd9     MOVFF     0xfd9,0xfe6    void Write_Terminal_Serial_Port(unsigned char value)                             C:\FIRST\ATLcode\WorkHere\camera.c
00398e   ffe6                                                                                                               
003990   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003992   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\FIRST\ATLcode\WorkHere\camera.c
003994   0efe     MOVLW     0xfe           	Write_Serial_Port_One(value);                                                   C:\FIRST\ATLcode\WorkHere\camera.c
003996   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003998   ffe6                                                                                                               
00399a   eccc     CALL      0x4998,0x0                                                                                      
00399c   f024                                                                                                               
00399e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\FIRST\ATLcode\WorkHere\camera.c
                                           	Write_Serial_Port_Two(value);                                                   C:\FIRST\ATLcode\WorkHere\camera.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\camera.c
0039a0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\camera.c
0039a2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0039a4   ffd9                                                                                                               
0039a6   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           * FILE NAME: ifi_startup.c                                                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           * DESCRIPTION:                                                                   C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           *  This file contains important startup code.                                    C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           * USAGE:                                                                         C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           *  This file should not be modified at all by the user.                          C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           *  DO NOT MODIFY THIS FILE!                                                      C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           extern void Clear_Memory (void);                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           extern void main (void);                                                         C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           void _entry (void);     /* prototype for the startup function */                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           void _startup (void);                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           void _do_cinit (void);  /* prototype for the initialized data setup */           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           extern volatile near unsigned long short TBLPTR;                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           extern near unsigned FSR0;                                                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           extern near char FPFLAGS;                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           #define RND 6                                                                    C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           #pragma code _entry_scn=RESET_VECTOR                                             C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           void _entry (void)                                                               C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
000800   ef7d     GOTO      0x5cfa         _asm goto _startup _endasm                                                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
000802   f02e                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
000804   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           #pragma code _startup_scn                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           void _startup (void)                                                             C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _asm                                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* Initialize the stack pointer */                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005cfa   ee1e     LFSR      0x1,0xe00          lfsr 1, _stack lfsr 2, _stack clrf TBLPTRU, 0 /* 1st silicon doesn't do this on POR */ C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005cfc   f000                                                                                                               
005cfe   ee2e     LFSR      0x2,0xe00                                                                                       
005d00   f000                                                                                                               
005d02   6af8     CLRF      0xf8,0x0                                                                                        
005d04   9c26     BCF       0x26,0x6,0x0       bcf  FPFLAGS,RND,0 /* Initialize rounding flag for floating point libs */    C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* initialize the flash memory access configuration. this is harmless */     C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* for non-flash devices, so we do it on all parts. */                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d06   8ea6     BSF       0xa6,0x7,0x0       bsf 0xa6, 7, 0                                                               C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d08   9ca6     BCF       0xa6,0x6,0x0       bcf 0xa6, 6, 0                                                               C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _endasm                                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           loop:                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d0a   ecb3     CALL      0x4166,0x0      	Clear_Memory();                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d0c   f020                                                                                                               
005d0e   ec62     CALL      0x56c4,0x0       _do_cinit ();                                                                  C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d10   f02b                                                                                                               
                                             /* Call the user's main routine */                                             C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d12   ec57     CALL      0x5cae,0x0       main ();                                                                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d14   f02e                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d16   d7f9     BRA       0x5d0a           goto loop;                                                                     C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005d18   0012     RETURN    0x0            }                               /* end _startup() */                             C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           /* MPLAB-C18 initialized data memory support */                                  C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           /* The linker will populate the _cinit table */                                  C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           extern far rom struct                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             unsigned short num_init;                                                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             struct _init_entry                                                             C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               unsigned long from;                                                          C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               unsigned long to;                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               unsigned long size;                                                          C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             entries[];                                                                     C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           _cinit;                                                                          C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           #pragma code _cinit_scn                                                          C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           void                                                                             C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           _do_cinit (void)                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             /* we'll make the assumption in the following code that these statics          C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                              * will be allocated into the same bank.                                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                              */                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             static short long prom;                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             static unsigned short curr_byte;                                               C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             static unsigned short curr_entry;                                              C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             static short long data_ptr;                                                    C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             /* Initialized data... */                                                      C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056c4   0e1e     MOVLW     0x1e             TBLPTR = (short long)&_cinit;                                                  C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056c6   6ef6     MOVWF     0xf6,0x0                                                                                        
0056c8   0e08     MOVLW     0x8                                                                                             
0056ca   6ef7     MOVWF     0xf7,0x0                                                                                        
0056cc   0e00     MOVLW     0x0                                                                                             
0056ce   6ef8     MOVWF     0xf8,0x0                                                                                        
                                             _asm                                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056d0   0103     MOVLB     0x3                movlb data_ptr                                                               C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056d2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056d4   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056d6   6f21     MOVWF     0x21,0x1           movwf curr_entry, 1                                                          C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056d8   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056da   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056dc   6f22     MOVWF     0x22,0x1           movwf curr_entry+1, 1                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _endasm                                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               test:                                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _asm                                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056de   e103     BNZ       0x56e6              bnz 3                                                                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056e0   6721     TSTFSZ    0x21,0x1           tstfsz curr_entry, 1                                                         C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056e2   d001     BRA       0x56e6             bra 1                                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _endasm                                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056e4   d03d     BRA       0x5760           goto done;                                                                     C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* Count down so we only have to look up the data in _cinit                  C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                * once.                                                                     C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                *                                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                * At this point we know that TBLPTR points to the top of the current        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                * entry in _cinit, so we can just start reading the from, to, and           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                * size values.                                                              C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                */                                                                          C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _asm                                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             /* read the source address */                                                  C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056e6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056e8   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056ea   6f1c     MOVWF     0x1c,0x1           movwf prom, 1                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056ec   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056ee   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056f0   6f1d     MOVWF     0x1d,0x1           movwf prom+1, 1                                                              C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056f2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056f4   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056f6   6f1e     MOVWF     0x1e,0x1           movwf prom+2, 1                                                              C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* skip a byte since it's stored as a 32bit int */                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056f8   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056fa   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056fc   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
0056fe   6ee9     MOVWF     0xe9,0x0           movwf FSR0L, 0                                                               C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005700   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005702   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005704   6eea     MOVWF     0xea,0x0           movwf FSR0H, 0                                                               C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005706   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005708   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00570a   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00570c   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00570e   6f1f     MOVWF     0x1f,0x1           movwf curr_byte, 1                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005710   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005712   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005714   6f20     MOVWF     0x20,0x1           movwf curr_byte+1, 1                                                         C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005716   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005718   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _endasm                                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             /* the table pointer now points to the next entry. Save it                     C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                              * off since we'll be using the table pointer to do the copying                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                              * for the entry.                                                              C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                              */                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00571a   cff6     MOVFF     0xff6,0x323      data_ptr = TBLPTR;                                                             C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00571c   f323                                                                                                               
00571e   cff7     MOVFF     0xff7,0x324                                                                                     
005720   f324                                                                                                               
005722   cff8     MOVFF     0xff8,0x325                                                                                     
005724   f325                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             /* now assign the source address to the table pointer */                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005726   c31c     MOVFF     0x31c,0xff6      TBLPTR = prom;                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005728   fff6                                                                                                               
00572a   c31d     MOVFF     0x31d,0xff7                                                                                     
00572c   fff7                                                                                                               
00572e   c31e     MOVFF     0x31e,0xff8                                                                                     
005730   fff8                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             /* do the copy loop */                                                         C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _asm                                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                     /* determine if we have any more bytes to copy */                      C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005732   0103     MOVLB     0x3                movlb curr_byte                                                              C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005734   531f     MOVF      0x1f,0x1,0x1       movf  curr_byte, 1, 1                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           copy_loop:                                                                       C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005736   e102     BNZ       0x573c             bnz 2 /* copy_one_byte */                                                    C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005738   5320     MOVF      0x20,0x1,0x1       movf  curr_byte + 1, 1, 1                                                    C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00573a   e007     BZ        0x574a             bz 7  /* done_copying */                                                     C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           copy_one_byte:                                                                   C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00573c   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00573e   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005740   6eee     MOVWF     0xee,0x0           movwf POSTINC0, 0                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                               /* decrement byte counter */                                                 C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005742   071f     DECF      0x1f,0x1,0x1       decf  curr_byte, 1, 1                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005744   e2f8     BC        0x5736             bc -8   /* copy_loop */                                                      C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005746   0720     DECF      0x20,0x1,0x1       decf  curr_byte + 1, 1, 1                                                    C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005748   d7f9     BRA       0x573c             bra -7  /* copy_one_byte */                                                  C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           done_copying:                                                                    C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                             _endasm                                                                        C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                                 /* restore the table pointer for the next entry */                         C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00574a   c323     MOVFF     0x323,0xff6      TBLPTR = data_ptr;                                                             C:\FIRST\ATLcode\WorkHere\ifi_startup.c
00574c   fff6                                                                                                               
00574e   c324     MOVFF     0x324,0xff7                                                                                     
005750   fff7                                                                                                               
005752   c325     MOVFF     0x325,0xff8                                                                                     
005754   fff8                                                                                                               
                                             /* next entry... */                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005756   0103     MOVLB     0x3              curr_entry--;                                                                  C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005758   0721     DECF      0x21,0x1,0x1                                                                                    
00575a   0e00     MOVLW     0x0                                                                                             
00575c   5b22     SUBWFB    0x22,0x1,0x1                                                                                    
00575e   d7bf     BRA       0x56de           goto test;                                                                     C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           done:                                                                            C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           ;                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
005760   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_startup.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FILE NAME: ifi_utilities.c                                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * DESCRIPTION:                                                                   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *  This file contains some useful functions that you can call in your program.   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * USAGE:                                                                         C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *  The user should NOT modify this file, so that if a new version is released    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *  by Innovation First then it can be easily replaced.                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *  The user should add their own functions to either user_routines.c or another  C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *  custom file.                                                                  C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include <usart.h>                                                               C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include <spi.h>                                                                 C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include <adc.h>                                                                 C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include <capture.h>                                                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include <timers.h>                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include <string.h>                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include <pwm.h>                                                                 C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include "delays.h"       /*defined locally*/                                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           int             ifi_packet_num1 = 0;                                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           int             ifi_last_packet1 = 0;                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           char            ifi_printfBufr[80];                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           unsigned char   *ptr;                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           unsigned char   ifi_count;                                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           unsigned char   ifi_analog_channels;                                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: Wait4TXEmpty                                                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       Wait for serial transmit buffer to be empty.                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /* Used when transmitting data serially.  It waits for each byte to finish.   */ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           void Wait4TXEmpty(void)                                                          C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #ifndef _SIMULATOR                                                               C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005094   b89e     BTFSC     0x9e,0x4,0x0     while (!TXINTF)                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005096   d002     BRA       0x509c                                                                                          
00509a   d7fc     BRA       0x5094                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005098   d7fd     BRA       0x5094             continue;                                                                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00509c   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: PrintByte                                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a byte of data to the serial port.        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     odata          unsigned char    I    byte of data to be transmitted        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00509e   cfd9     MOVFF     0xfd9,0xfe6    void PrintByte(unsigned char odata)                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050a0   ffe6                                                                                                               
0050a2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0050a4   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050a6   0efe     MOVLW     0xfe             Hex_output((unsigned char) odata);                                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050a8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0050aa   ffe6                                                                                                               
0050ac   ecc5     CALL      0x418a,0x0                                                                                      
0050ae   f020                                                                                                               
0050b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050b2   0e0d     MOVLW     0xd              TXREG = 13;  /* a carriage return */                                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050b4   6ead     MOVWF     0xad,0x0                                                                                        
0050b6   dfee     RCALL     0x5094           Wait4TXEmpty();                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050b8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050ba   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0050bc   ffd9                                                                                                               
0050be   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: PrintWord                                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a word of data to the serial port.        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     odata          unsigned int     I    word of data to be transmitted        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050c0   cfd9     MOVFF     0xfd9,0xfe6    void PrintWord(unsigned int odata)                                               C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050c2   ffe6                                                                                                               
0050c4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0050c6   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050c8   0102     MOVLB     0x2              ptr = (unsigned char *) &odata;                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050ca   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0050cc   0ffd     ADDLW     0xfd                                                                                            
0050ce   6f50     MOVWF     0x50,0x1                                                                                        
0050d0   0eff     MOVLW     0xff                                                                                            
0050d2   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0050d4   6f51     MOVWF     0x51,0x1                                                                                        
0050d6   0e01     MOVLW     0x1              Hex_output(ptr[1]);                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050d8   6aea     CLRF      0xea,0x0                                                                                        
0050da   2550     ADDWF     0x50,0x0,0x1                                                                                    
0050dc   6ee9     MOVWF     0xe9,0x0                                                                                        
0050de   5151     MOVF      0x51,0x0,0x1                                                                                    
0050e0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0050e2   50ef     MOVF      0xef,0x0,0x0                                                                                    
0050e4   6ee6     MOVWF     0xe6,0x0                                                                                        
0050e6   ecc5     CALL      0x418a,0x0                                                                                      
0050e8   f020                                                                                                               
0050ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050ec   c250     MOVFF     0x250,0xfe9      Hex_output(ptr[0]);                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0050ee   ffe9                                                                                                               
0050f0   c251     MOVFF     0x251,0xfea                                                                                     
0050f2   ffea                                                                                                               
0050f4   50ef     MOVF      0xef,0x0,0x0                                                                                    
0050f6   6ee6     MOVWF     0xe6,0x0                                                                                        
0050f8   ecc5     CALL      0x418a,0x0                                                                                      
0050fa   f020                                                                                                               
0050fc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050fe   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005100   6ead     MOVWF     0xad,0x0                                                                                        
005102   dfc8     RCALL     0x5094           Wait4TXEmpty();                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005104   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005106   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005108   ffd9                                                                                                               
00510a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: PrintString                                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       Prints a string to the serial port.                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     bufr           pointer          I    word of data to be transmitted        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00510c   cfd9     MOVFF     0xfd9,0xfe6    void PrintString(char *bufr)                                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00510e   ffe6                                                                                                               
005110   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005112   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                             static int len,I;                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005114   0efd     MOVLW     0xfd             strcpypgm2ram (ifi_printfBufr,(rom char *) bufr); /*Move from flash to ram*/   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005116   cfdb     MOVFF     0xfdb,0x2b                                                                                      
005118   f02b                                                                                                               
00511a   0efe     MOVLW     0xfe                                                                                            
00511c   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00511e   f02c                                                                                                               
005120   6a2d     CLRF      0x2d,0x0                                                                                        
005122   c02b     MOVFF     0x2b,0xfe6                                                                                      
005124   ffe6                                                                                                               
005126   c02c     MOVFF     0x2c,0xfe6                                                                                      
005128   ffe6                                                                                                               
00512a   c02d     MOVFF     0x2d,0xfe6                                                                                      
00512c   ffe6                                                                                                               
00512e   0e00     MOVLW     0x0                                                                                             
005130   6ee6     MOVWF     0xe6,0x0                                                                                        
005132   0e02     MOVLW     0x2                                                                                             
005134   6ee6     MOVWF     0xe6,0x0                                                                                        
005136   ecb1     CALL      0x5762,0x0                                                                                      
005138   f02b                                                                                                               
00513a   6ef5     MOVWF     0xf5,0x0                                                                                        
00513c   0e05     MOVLW     0x5                                                                                             
00513e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005140   50f5     MOVF      0xf5,0x0,0x0                                                                                    
005142   0e00     MOVLW     0x0              len = (int) strlen((const char *)ifi_printfBufr);                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005144   6ee6     MOVWF     0xe6,0x0                                                                                        
005146   0e02     MOVLW     0x2                                                                                             
005148   6ee6     MOVWF     0xe6,0x0                                                                                        
00514a   ecca     CALL      0x5794,0x0                                                                                      
00514c   f02b                                                                                                               
00514e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005150   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005152   cff3     MOVFF     0xff3,0x254                                                                                     
005154   f254                                                                                                               
005156   cff4     MOVFF     0xff4,0x255                                                                                     
005158   f255                                                                                                               
00515a   0102     MOVLB     0x2              if (len > 80) len = 80;                                                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00515c   3555     RLCF      0x55,0x0,0x1                                                                                    
00515e   e204     BC        0x5168                                                                                          
005160   5154     MOVF      0x54,0x0,0x1                                                                                    
005162   0850     SUBLW     0x50                                                                                            
005164   0e00     MOVLW     0x0                                                                                             
005166   5555     SUBFWB    0x55,0x0,0x1                                                                                    
005168   e203     BC        0x5170                                                                                          
00516a   0e50     MOVLW     0x50                                                                                            
00516c   6f54     MOVWF     0x54,0x1                                                                                        
00516e   6b55     CLRF      0x55,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005170   6b56     CLRF      0x56,0x1         for (I=0;I<len;I++)                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005172   6b57     CLRF      0x57,0x1                                                                                        
005174   5157     MOVF      0x57,0x0,0x1                                                                                    
005176   1955     XORWF     0x55,0x0,0x1                                                                                    
005178   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
00517a   d002     BRA       0x5180                                                                                          
00517c   3555     RLCF      0x55,0x0,0x1                                                                                    
00517e   d004     BRA       0x5188                                                                                          
005180   5154     MOVF      0x54,0x0,0x1                                                                                    
005182   5d56     SUBWF     0x56,0x0,0x1                                                                                    
005184   5155     MOVF      0x55,0x0,0x1                                                                                    
005186   5957     SUBWFB    0x57,0x0,0x1                                                                                    
005188   e20e     BC        0x51a6                                                                                          
00519c   0102     MOVLB     0x2                                                                                             
00519e   2b56     INCF      0x56,0x1,0x1                                                                                    
0051a0   0e00     MOVLW     0x0                                                                                             
0051a2   2357     ADDWFC    0x57,0x1,0x1                                                                                    
0051a4   d7e7     BRA       0x5174                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00518a   0e00     MOVLW     0x0                TXREG = ifi_printfBufr[I];                                                   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00518c   2556     ADDWF     0x56,0x0,0x1                                                                                    
00518e   6ee9     MOVWF     0xe9,0x0                                                                                        
005190   0e02     MOVLW     0x2                                                                                             
005192   2157     ADDWFC    0x57,0x0,0x1                                                                                    
005194   6eea     MOVWF     0xea,0x0                                                                                        
005196   50ef     MOVF      0xef,0x0,0x0                                                                                    
005198   6ead     MOVWF     0xad,0x0                                                                                        
00519a   df7c     RCALL     0x5094             Wait4TXEmpty();                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051a6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051a8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0051aa   ffd9                                                                                                               
0051ac   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: DisplayBufr                                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       Print the entire transmit or receive buffer over the serial     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *                port for viewing in a terminal program on your PC.              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     Argument       Type        IO   Description                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     --------       --------    --   -----------                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     *bufr          pointer     I    points to beginning of buffer to transmit  C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051ae   cfd9     MOVFF     0xfd9,0xfe6    void DisplayBufr(unsigned char *bufr)                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051b0   ffe6                                                                                                               
0051b2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0051b4   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051b6   0102     MOVLB     0x2              for (ifi_count=0;ifi_count<26;ifi_count++)                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051b8   6b52     CLRF      0x52,0x1                                                                                        
0051ba   0e1a     MOVLW     0x1a                                                                                            
0051bc   5d52     SUBWF     0x52,0x0,0x1                                                                                    
0051be   e211     BC        0x51e2                                                                                          
0051dc   0102     MOVLB     0x2                                                                                             
0051de   2b52     INCF      0x52,0x1,0x1                                                                                    
0051e0   d7ec     BRA       0x51ba                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051c0   0efd     MOVLW     0xfd               Hex_output((unsigned char) *bufr++);                                         C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051c2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0051c4   ffe9                                                                                                               
0051c6   2adb     INCF      0xdb,0x1,0x0                                                                                    
0051c8   0efe     MOVLW     0xfe                                                                                            
0051ca   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0051cc   ffea                                                                                                               
0051ce   e301     BNC       0x51d2                                                                                          
0051d0   2adb     INCF      0xdb,0x1,0x0                                                                                    
0051d2   50ef     MOVF      0xef,0x0,0x0                                                                                    
0051d4   6ee6     MOVWF     0xe6,0x0                                                                                        
0051d6   ecc5     CALL      0x418a,0x0                                                                                      
0051d8   f020                                                                                                               
0051da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051e2   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051e4   6ead     MOVWF     0xad,0x0                                                                                        
0051e6   df56     RCALL     0x5094           Wait4TXEmpty();                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051e8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051ea   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0051ec   ffd9                                                                                                               
0051ee   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: PacketNum_Check                                                 C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       Print the packet number over the serial port if a packet gets   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *                dropped.  Handy for seeing if you are dropping data.            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           void PacketNum_Check(void)                                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                             /*    to print only the 10th (packet num) byte*/                               C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051f0   0102     MOVLB     0x2              ptr = (unsigned char *) &rxdata.packet_num;                                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051f2   0e78     MOVLW     0x78                                                                                            
0051f4   6f50     MOVWF     0x50,0x1                                                                                        
0051f6   0e02     MOVLW     0x2                                                                                             
0051f8   6f51     MOVWF     0x51,0x1                                                                                        
0051fa   0102     MOVLB     0x2              ifi_packet_num1 = (int) rxdata.packet_num;                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0051fc   5178     MOVF      0x78,0x0,0x1                                                                                    
0051fe   0103     MOVLB     0x3                                                                                             
005200   6f46     MOVWF     0x46,0x1                                                                                        
005202   6b47     CLRF      0x47,0x1                                                                                        
005204   5148     MOVF      0x48,0x0,0x1     if (ifi_packet_num1 != ifi_last_packet1)                                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005206   1946     XORWF     0x46,0x0,0x1                                                                                    
005208   e102     BNZ       0x520e                                                                                          
00520a   5149     MOVF      0x49,0x0,0x1                                                                                    
00520c   1947     XORWF     0x47,0x0,0x1                                                                                    
00520e   e018     BZ        0x5240                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005210   0102     MOVLB     0x2                if (statusflag.FIRST_TIME == 1)                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005212   a598     BTFSS     0x98,0x2,0x1                                                                                    
005214   d002     BRA       0x521a                                                                                          
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005216   9598     BCF       0x98,0x2,0x1         statusflag.FIRST_TIME = 0;                                                 C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005218   d00f     BRA       0x5238             else                                                                         C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00521a   c348     MOVFF     0x348,0xfe6          Hex_output((unsigned char) ifi_last_packet1);                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00521c   ffe6                                                                                                               
00521e   ecc5     CALL      0x418a,0x0                                                                                      
005220   f020                                                                                                               
005222   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005224   c346     MOVFF     0x346,0xfe6          Hex_output((unsigned char) ifi_packet_num1);                               C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005226   ffe6                                                                                                               
005228   ecc5     CALL      0x418a,0x0                                                                                      
00522a   f020                                                                                                               
00522c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00522e   0e0d     MOVLW     0xd                  TXREG = 13;                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005230   6ead     MOVWF     0xad,0x0                                                                                        
005232   df30     RCALL     0x5094               Wait4TXEmpty();                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005234   0102     MOVLB     0x2                  statusflag.FIRST_TIME = 0;                                                 C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005236   9598     BCF       0x98,0x2,0x1                                                                                    
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005238   c346     MOVFF     0x346,0x348        ifi_last_packet1 = ifi_packet_num1;                                          C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00523a   f348                                                                                                               
00523c   c347     MOVFF     0x347,0x349                                                                                     
00523e   f349                                                                                                               
                                             }/*   if (ifi_packet_num1 != ifi_last_packet1)*/                               C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005240   0103     MOVLB     0x3              ifi_last_packet1++;                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005242   2b48     INCF      0x48,0x1,0x1                                                                                    
005244   0e00     MOVLW     0x0                                                                                             
005246   2349     ADDWFC    0x49,0x1,0x1                                                                                    
005248   3549     RLCF      0x49,0x0,0x1     if (ifi_last_packet1 > 255)                                                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00524a   e204     BC        0x5254                                                                                          
00524c   5148     MOVF      0x48,0x0,0x1                                                                                    
00524e   08ff     SUBLW     0xff                                                                                            
005250   0e00     MOVLW     0x0                                                                                             
005252   5549     SUBFWB    0x49,0x0,0x1                                                                                    
005254   e202     BC        0x525a                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005256   6b48     CLRF      0x48,0x1           ifi_last_packet1 = 0;                                                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005258   6b49     CLRF      0x49,0x1                                                                                        
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00525a   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: Initialize_Serial_Comms                                         C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       Opens the serial port 1 for communicating with your PC at       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *                115k baud, 8 bits, no parity, one stop bit, and no flow control. C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c                                                 C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           void Initialize_Serial_Comms (void)                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                             OpenUSART(USART_TX_INT_OFF &                                                   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                               USART_RX_INT_OFF &                                                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                               USART_ASYNCH_MODE &                                                          C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                               USART_EIGHT_BIT &                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                               USART_CONT_RX &                                                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005260   0e3c     MOVLW     0x3c               USART_BRGH_HIGH,                                                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005262   6ee6     MOVWF     0xe6,0x0                                                                                        
00525c   0e15     MOVLW     0x15               baud_115);                                                                   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00525e   6ee6     MOVWF     0xe6,0x0                                                                                        
005264   ec70     CALL      0x5ae0,0x0                                                                                      
005266   f02d                                                                                                               
005268   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00526a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00526c   0e32     MOVLW     0x32             Delay1KTCYx( 50 ); /* Settling time */                                         C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00526e   6ee6     MOVWF     0xe6,0x0                                                                                        
005270   ec8d     CALL      0x5d1a,0x0                                                                                      
005272   f02e                                                                                                               
005274   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005276   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: Set_Number_of_Analog_Channels                                   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       Sets the variable used in Get_Analog_Value routine (below)      C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *                to the number of analog channels desired by the user.           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c initialization, typically                       C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *      Argument            Type    IO   Description                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     -----------          -----   --   -----------                              C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     number_of_channels   alias   I    choose alias from ifi_aliases.h          C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005278   cfd9     MOVFF     0xfd9,0xfe6    void Set_Number_of_Analog_Channels (unsigned char number_of_channels)            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00527a   ffe6                                                                                                               
00527c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00527e   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005280   0efe     MOVLW     0xfe             ifi_analog_channels = number_of_channels;                                      C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005282   cfdb     MOVFF     0xfdb,0x253                                                                                     
005284   f253                                                                                                               
005286   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005288   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00528a   ffd9                                                                                                               
00528c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * FUNCTION NAME: Get_Analog_Value                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * PURPOSE:       Reads the analog voltage on an A/D port and returns the         C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *                10-bit value read stored in an unsigned int.                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c, typically                                      C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *      Argument         Type        IO   Description                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     -----------   -------------   --   -----------                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *     ADC_channel       alias       I    alias found in ifi_aliases.h            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           * RETURNS:       unsigned int                                                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00528e   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_Analog_Value (unsigned char ADC_channel)                        C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
005290   ffe6                                                                                                               
005292   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005294   ffd9                                                                                                               
005296   0e02     MOVLW     0x2                                                                                             
005298   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                             unsigned int result;                                                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #if defined(__18F8722)                                                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052aa   0ef1     MOVLW     0xf1             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ADC_0_TAD,                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052ac   6ee6     MOVWF     0xe6,0x0                                                                                        
00529a   0e0f     MOVLW     0xf                       ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS,15); C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00529c   6ee6     MOVWF     0xe6,0x0                                                                                        
00529e   0efe     MOVLW     0xfe                                                                                            
0052a0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0052a2   0b7f     ANDLW     0x7f                                                                                            
0052a4   0bfe     ANDLW     0xfe                                                                                            
0052a6   0bfd     ANDLW     0xfd                                                                                            
0052a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0052ae   ec09     CALL      0x5a12,0x0                                                                                      
0052b0   f02d                                                                                                               
0052b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0052b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0052b6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ifi_analog_channels,                   C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                     ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS );    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052b8   0e0a     MOVLW     0xa              Delay10TCYx( 10 );                                                             C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052ba   6ee6     MOVWF     0xe6,0x0                                                                                        
0052bc   ecab     CALL      0x5d56,0x0                                                                                      
0052be   f02e                                                                                                               
0052c0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0052c2   ecc2     CALL      0x5d84,0x0       ConvertADC();                                                                  C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052c4   f02e                                                                                                               
0052c6   ec07     CALL      0x80e,0x0        while( BusyADC() );                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052c8   f004                                                                                                               
0052ca   0900     IORLW     0x0                                                                                             
0052cc   e001     BZ        0x52d0                                                                                          
0052ce   d7fb     BRA       0x52c6                                                                                          
0052d0   ec22     CALL      0x5c44,0x0       ReadADC();                                                                     C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052d2   f02e                                                                                                               
0052d4   ecbf     CALL      0x5d7e,0x0       CloseADC();                                                                    C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052d6   f02e                                                                                                               
0052d8   50c4     MOVF      0xc4,0x0,0x0     result = (int) ADRESH << 8 | ADRESL;                                           C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052da   6e2d     MOVWF     0x2d,0x0                                                                                        
0052dc   c02d     MOVFF     0x2d,0x2e                                                                                       
0052de   f02e                                                                                                               
0052e0   6a2d     CLRF      0x2d,0x0                                                                                        
0052e2   50c3     MOVF      0xc3,0x0,0x0                                                                                    
0052e4   0100     MOVLB     0x0                                                                                             
0052e6   102d     IORWF     0x2d,0x0,0x0                                                                                    
0052e8   6e2b     MOVWF     0x2b,0x0                                                                                        
0052ea   c02e     MOVFF     0x2e,0x2c                                                                                       
0052ec   f02c                                                                                                               
0052ee   c02b     MOVFF     0x2b,0xfde                                                                                      
0052f0   ffde                                                                                                               
0052f2   c02c     MOVFF     0x2c,0xfdd                                                                                      
0052f4   ffdd                                                                                                               
0052f6   cfde     MOVFF     0xfde,0x2b       return result;                                                                 C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
0052f8   f02b                                                                                                               
0052fa   cfdd     MOVFF     0xfdd,0x2c                                                                                      
0052fc   f02c                                                                                                               
0052fe   c02b     MOVFF     0x2b,0xff3                                                                                      
005300   fff3                                                                                                               
005302   c02c     MOVFF     0x2c,0xff4                                                                                      
005304   fff4                                                                                                               
005306   d000     BRA       0x5308                                                                                          
005308   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
00530a   ffe1                                                                                                               
00530c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00530e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005310   ffd9                                                                                                               
005312   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\ifi_utilities.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\main.c
                                           * FILE NAME: main.c <FRC VERSION>                                                C:\FIRST\ATLcode\WorkHere\main.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\main.c
                                           * DESCRIPTION:                                                                   C:\FIRST\ATLcode\WorkHere\main.c
                                           *  This file contains the main program loop.                                     C:\FIRST\ATLcode\WorkHere\main.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\main.c
                                           * USAGE:                                                                         C:\FIRST\ATLcode\WorkHere\main.c
                                           *  You should not need to modify this file.                                      C:\FIRST\ATLcode\WorkHere\main.c
                                           *  Note the different loop speed for the two routines:                           C:\FIRST\ATLcode\WorkHere\main.c
                                           *     Process_Data_From_Master_uP                                                C:\FIRST\ATLcode\WorkHere\main.c
                                           *     Process_Data_From_Local_IO                                                 C:\FIRST\ATLcode\WorkHere\main.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\main.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\main.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\main.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\main.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\main.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
                                           tx_data_record txdata;          /* DO NOT CHANGE! */                             C:\FIRST\ATLcode\WorkHere\main.c
                                           rx_data_record rxdata;          /* DO NOT CHANGE! */                             C:\FIRST\ATLcode\WorkHere\main.c
                                           packed_struct statusflag;       /* DO NOT CHANGE! */                             C:\FIRST\ATLcode\WorkHere\main.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\main.c
                                           * FUNCTION NAME: main                                                            C:\FIRST\ATLcode\WorkHere\main.c
                                           * PURPOSE:       Main program function.                                          C:\FIRST\ATLcode\WorkHere\main.c
                                           * CALLED FROM:   ifi_startup.c                                                   C:\FIRST\ATLcode\WorkHere\main.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\main.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\main.c
                                           * DO NOT DELETE THIS FUNCTION                                                    C:\FIRST\ATLcode\WorkHere\main.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\main.c
                                           void main (void)                                                                 C:\FIRST\ATLcode\WorkHere\main.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\main.c
                                           #ifdef UNCHANGEABLE_DEFINITION_AREA                                              C:\FIRST\ATLcode\WorkHere\main.c
005cae   ec87     CALL      0x2d0e,0x0       IFI_Initialization ();        /* DO NOT CHANGE! */                             C:\FIRST\ATLcode\WorkHere\main.c
005cb0   f016                                                                                                               
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\main.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
005cb2   ec4a     CALL      0x2294,0x0       User_Initialization();        /* You edit this in user_routines.c */           C:\FIRST\ATLcode\WorkHere\main.c
005cb4   f011                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
005cb6   0102     MOVLB     0x2              statusflag.NEW_SPI_DATA = 0;  /* DO NOT CHANGE! */                             C:\FIRST\ATLcode\WorkHere\main.c
005cb8   9198     BCF       0x98,0x0,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
005cd2   d7f3     BRA       0x5cba           while (1)   /* This loop will repeat indefinitely. */                          C:\FIRST\ATLcode\WorkHere\main.c
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\main.c
                                           #ifdef _SIMULATOR                                                                C:\FIRST\ATLcode\WorkHere\main.c
                                               statusflag.NEW_SPI_DATA = 1;                                                 C:\FIRST\ATLcode\WorkHere\main.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\main.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
005cba   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FIRST\ATLcode\WorkHere\main.c
005cbc   a198     BTFSS     0x98,0x0,0x1                                                                                    
005cbe   d007     BRA       0x5cce                                                                                          
                                               {                                 /* I'm slow!  I only execute every 26.2ms because */ C:\FIRST\ATLcode\WorkHere\main.c
                                                                                 /* that's how fast the Master uP gives me data. */ C:\FIRST\ATLcode\WorkHere\main.c
005cc0   ecc1     CALL      0x2382,0x0           Process_Data_From_Master_uP();  /* You edit this in user_routines.c */     C:\FIRST\ATLcode\WorkHere\main.c
005cc2   f011                                                                                                               
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\main.c
005cc4   0102     MOVLB     0x2                  if (autonomous_mode)            /* DO NOT CHANGE! */                       C:\FIRST\ATLcode\WorkHere\main.c
005cc6   ad79     BTFSS     0x79,0x6,0x1                                                                                    
005cc8   d002     BRA       0x5cce                                                                                          
                                                 {                                                                          C:\FIRST\ATLcode\WorkHere\main.c
005cca   ec9f     CALL      0x4f3e,0x0             User_Autonomous_Code();        /* You edit this in user_routines_fast.c */ C:\FIRST\ATLcode\WorkHere\main.c
005ccc   f027                                                                                                               
                                                 }                                                                          C:\FIRST\ATLcode\WorkHere\main.c
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\main.c
005cce   ec39     CALL      0x5072,0x0         Process_Data_From_Local_IO();     /* You edit this in user_routines_fast.c */ C:\FIRST\ATLcode\WorkHere\main.c
005cd0   f028                                                                                                               
                                                                                 /* I'm fast!  I execute during every loop.*/ C:\FIRST\ATLcode\WorkHere\main.c
                                             } /* while (1) */                                                              C:\FIRST\ATLcode\WorkHere\main.c
005cd4   0012     RETURN    0x0            }  /* END of Main */                                                             C:\FIRST\ATLcode\WorkHere\main.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\main.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\main.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\main.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\main.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	TITLE:		serial_ports.c                                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	DATE:		05-Jan-2006                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:	The source code in this file implements a fully buffered,            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				interrupt-driven serial port driver that can be used with                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				either or both on-board serial ports.                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				This source code will work with the Robovation (A/K/A EDU-RC)               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				robot controller and the FIRST Robotics robot controller.                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				By default, serial port one will operate at 115200 baud, which              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				is compatible with InnovationFIRST's terminal program, and                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				serial port two will operate at 9600 baud. These values can be              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				easily changed by modifying the	serial port initialization                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				functions mentioned below.                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *               This file is best viewed with tabs set to four characters.       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				Nine things must be done before this software will work                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				correctly:                                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  1a) FRC-RC: As this software is intended to replace IFI's                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  serial port driver, the call to Serial_Driver_Initialize()                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  "user_Serialdrv.c" and "user_Serialdrv.h" must be removed                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  from the project and all project source files.                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  1b) EDU-RC: As this software is intended to replace IFI's                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  serial port driver, the call to Initialize_Serial_Comms()                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  "printf_lib.c" and "printf_lib.h" must be removed from                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  the project and all project source files.                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  2) You must add the serial_ports.c/.h source files to                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  your MPLAB project.                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  3) A #include statement for the serial_ports.h header                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  file must be included at the beginning of each source                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  file that uses the serial ports. The statement should                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  look like this: #include "serial_ports.h".                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  4) If you intend to use the C18 output stream functions,                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  A #include statement for the stdio.h header file must be                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  included at the beginning of each source file that calls                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  any of these functions. The statement should look like                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  this: #include <serial_ports.h>.                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  5) Init_Serial_Port_One() and/or Init_Serial_Port_Two()                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  must be called from the User_Initialization() function                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  located in the user_routines.c source file.                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  6) The interrupt handler(s) must be installed in the                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  InterruptHandlerLow() function located in the                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  user_routines_fast.c source file. See the accompanying                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  copy of user_routines_fast.c to see how this is done.                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  7) Decide what functionality you need and comment out the                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_xxx_yy entries in serial_ports.h               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  as necessary. As an example, if you only need to send data                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  using serial port one and would like to reclaim the resources             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  used by serial port two and serial port one's receiver                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  source code, the top of the serial_ports.h file would look                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  like this:                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // receive functionality                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_ONE_RX                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // transmit functionality                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_ONE_TX                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // receive functionality                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_RX                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // transmit functionality                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_TX                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  By default, both serial ports and their respective receive                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  and transmit sections are enabled.                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  8) As the default output device for C18's output stream                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  functions is the null device, you'll presumably want to                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  change the value of stdout_serial_port to "SERIAL_PORT_ONE"               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  or "SERIAL_PORT_TWO" if you want to see printf()'s output.                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  User_Initialization() is a good place to do this.                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  9) To support terminal emulation software, \r\n should                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  be used instead of just \n in the printf() format string.                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				This serial port driver can send output stream data to either               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				of the serial ports by setting the value of the global variable             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				stdout_serial_port before calling output stream	functions like              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				printf(). Setting the value	to "SERIAL_PORT_ONE" will send the              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				output to serial port one. Likewise, setting the value to                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				"SERIAL_PORT_TWO" will send the output to serial port two.                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				Setting the value to "NUL" will send the output to the null                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				device, meaning that the output is sent	nowhere. These values               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				are #define'd in serial_ports.h. As an example,                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_ONE;                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  printf("Kernighan");                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  stdout_serial_port = NUL;                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  printf("and");                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_TWO;                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				  printf("Ritchie");                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				will send the text "Kernighan" to the peripheral device attached            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				to serial port one, the text "Ritchie" to the device attached to            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				serial port two and the text "and" won't be sent anywhere.                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				By default, output is sent to the null device, which is the only            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				output device guaranteed to be present.                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				You are free to use this source code for any non-commercial                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				use. Please do not make copies of this source code, modified                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				or un-modified, publicly available on the internet or                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				elsewhere without permission. Thanks.                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *				Copyright ©2004-2006 R. Kevin Watson. All rights are reserved.              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *		                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           ******************************************************************************** C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CHANGE LOG:                                                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	22-Dec-2004  0.1  RKW - Original code.                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	28-Dec-2004  0.2  RKW - Using preprocessor directives, added the ability       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	                  to enable/disable individual serial port receive and         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	                  transmit code. Updated documentation.                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	05-Feb-2005  0.3  RKW - Added _user_putc() interface to C18's new output       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	                  stream capabilities. Updated documentation.                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	05-Jan-2006  0.4  RKW - Partial port to 18F8722. Updated documentation.        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #include <p18f8722.h>                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #include "serial_ports.h"                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           // by default stdout stream output is sent to the null device,                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           // which is the only device guaranteed to be present.                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           unsigned char stdout_serial_port = NUL;                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           // Serial Port 1 Receive Variables:                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Rx_1_Queue[RX_1_QUEUE_SIZE];	// serial port 1's receive circular queue C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// accept any more data                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           unsigned char Rx_1_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// data present in serial port 1's receive                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           unsigned char Rx_1_Queue_Read_Index = 0;			// read index into serial port 1's receive C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Write_Index = 0;	// write index into serial port 1's receive C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's receive C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char RX_1_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// the last reset                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char RX_1_Framing_Errors = 0;		// number of framing errors that have occurred C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// the last reset                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           // Serial Port 1 Transmit Variables:                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_1_Queue[TX_1_QUEUE_SIZE];	// serial port 1's transmit circular queue C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// accept any more data                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// data to send in serial port 1's transmit                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Read_Index = 0;	// read index into serial port 1's transmit C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           unsigned char Tx_1_Queue_Write_Index = 0;			// write index into serial port 1's transmit C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's transmit C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           // Serial Port 2 Receive Variables:                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Rx_2_Queue[RX_2_QUEUE_SIZE];	// serial port 2's receive circular queue C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// accept any more data                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           unsigned char Rx_2_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// data present in serial port 2's receive                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           unsigned char Rx_2_Queue_Read_Index = 0;			// read index into serial port 2's receive C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Write_Index = 0;	// write index into serial port 2's receive C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's receive C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char RX_2_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// the last reset                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char RX_2_Framing_Errors = 0;		// number of framing errors that have occurred C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// the last reset                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           // Serial Port 2 Transmit Variables:                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_2_Queue[TX_2_QUEUE_SIZE];	// serial port 2's transmit circular queue C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// accept any more data                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// data to send in serial port 2's transmit                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Read_Index = 0;	// read index into serial port 2's transmit C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           unsigned char Tx_2_Queue_Write_Index = 0;			// write index into serial port 2's transmit C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's transmit C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           													// circular queue                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_One()                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Initializes serial port one for asynchronous operation               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					port one.                                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					By default, this serial port is set to 115200 baud with                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					the transmitter and receiver enabled. This is the rate                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					IFI's terminal program expects.                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					a value into the SPBRG1 register and possibly changing                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX or ENABLE_SERIAL_PORT_ONE_TX                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           void Init_Serial_Port_One(void)                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
00485c   0e15     MOVLW     0x15           	SPBRG1 = BAUD_115200;	// baud rate generator register [251]                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
00485e   6eaf     MOVWF     0xaf,0x0                                                                                        
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004860   84ac     BSF       0xac,0x2,0x0   	TXSTA1bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: low speed                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: high speed                                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004862   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;		// receive interrupt enable bit [127]                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004864   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;		// transmit interrupt enable bit [127]                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004866   98ac     BCF       0xac,0x4,0x0   	TXSTA1bits.SYNC = 0;	// USART mode select bit [248]                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004868   9eac     BCF       0xac,0x7,0x0   	TXSTA1bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// software build, include code that is specific to                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// initializing the receiver                                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_RX                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
00486a   8e94     BSF       0x94,0x7,0x0   	TRISCbits.TRISC7 = 1;	// make sure the RC7/RX1/DT1 pin is configured as an input [140] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
00486c   9cab     BCF       0xab,0x6,0x0   	RCSTA1bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
00486e   96ab     BCF       0xab,0x3,0x0   	RCSTA1bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables address detection                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables address detection                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004870   8aab     BSF       0xab,0x5,0x0   	RCSTA1bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004872   88ab     BSF       0xab,0x4,0x0   	RCSTA1bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							// asynchronous mode:                                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables receiver                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enable receiver                                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							// synchronous mode:                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004874   9a9f     BCF       0x9f,0x5,0x0   	IPR1bits.RC1IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [130] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: low-priority                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: high-priority                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004876   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;		// receive interrupt enable bit [127]                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#endif					//                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// software build, include code that is specific to                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004878   0103     MOVLB     0x3            	stdout = _H_USER;		// use this driver for output stream functions               C:\FIRST\ATLcode\WorkHere\serial_ports.c
00487a   694a     SETF      0x4a,0x1                                                                                        
00487c   694b     SETF      0x4b,0x1                                                                                        
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
00487e   9c94     BCF       0x94,0x6,0x0   	TRISCbits.TRISC6 = 0;	// make sure the RC6/TX1/CK1 pin is configured as an output [140] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004880   9cac     BCF       0xac,0x6,0x0   	TXSTA1bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004882   96ac     BCF       0xac,0x3,0x0   	TXSTA1bits.SENDB = 0;	// send break character bit [248]                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004884   989f     BCF       0x9f,0x4,0x0   	IPR1bits.TX1IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [130] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: low-priority                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: high-priority                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004886   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;		// transmit interrupt enable bit [127]                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004888   8aac     BSF       0xac,0x5,0x0   	TXSTA1bits.TXEN = 1;  	// Enable transmitter [248]                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#endif					//                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
00488a   8eab     BSF       0xab,0x7,0x0   	RCSTA1bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
00488c   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_Two()                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Initializes serial port two for asynchronous operation               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					port two.                                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					By default, this serial port is set to 9600 baud with                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					the transmitter and receiver enabled.                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					a value into the SPBRG2 register and possibly changing                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX or ENABLE_SERIAL_PORT_TWO_TX                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           void Init_Serial_Port_Two(void)                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
00488e   0e15     MOVLW     0x15           	SPBRG2 = BAUD_115200;	// baud rate generator register [251]                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
004890   6e6f     MOVWF     0x6f,0x0                                                                                        
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004892   846c     BSF       0x6c,0x2,0x0   	TXSTA2bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: low speed                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: high speed                                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004894   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;		// receive interrupt enable bit [129]                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004896   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;		// transmit interrupt enable bit [129]                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004898   986c     BCF       0x6c,0x4,0x0   	TXSTA2bits.SYNC = 0;	// USART mode select bit [248]                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
00489a   9e6c     BCF       0x6c,0x7,0x0   	TXSTA2bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// software build, include code that is specific to                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// initializing the receiver                                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_RX                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
00489c   8498     BSF       0x98,0x2,0x0   	TRISGbits.TRISG2 = 1;	// make sure the RG2/RX2/DT2 pin is configured as an input [151] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
00489e   9c6b     BCF       0x6b,0x6,0x0   	RCSTA2bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048a0   966b     BCF       0x6b,0x3,0x0   	RCSTA2bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables address detection                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables address detection                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048a2   8a6b     BSF       0x6b,0x5,0x0   	RCSTA2bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048a4   886b     BSF       0x6b,0x4,0x0   	RCSTA2bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							// asynchronous mode:                                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables receiver                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enable receiver                                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							// synchronous mode:                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048a6   9aa5     BCF       0xa5,0x5,0x0   	IPR3bits.RC2IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [132] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: low-priority                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: high-priority                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048a8   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;		// receive interrupt enable bit [129]                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#endif					//                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// software build, include code that is specific to                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048aa   0103     MOVLB     0x3            	stdout = _H_USER;		// use this driver for output stream functions               C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048ac   694a     SETF      0x4a,0x1                                                                                        
0048ae   694b     SETF      0x4b,0x1                                                                                        
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048b0   9298     BCF       0x98,0x1,0x0   	TRISGbits.TRISG1 = 0;	// make sure the RG1/TX2/CK2 pin is configured as an output [151] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048b2   9c6c     BCF       0x6c,0x6,0x0   	TXSTA2bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048b4   966c     BCF       0x6c,0x3,0x0   	TXSTA2bits.SENDB = 0;	// send break character bit [248]                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048b6   98a5     BCF       0xa5,0x4,0x0   	IPR3bits.TX2IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [132] C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: low-priority                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: high-priority                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048b8   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;		// transmit interrupt enable bit [129]                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//                                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048ba   8a6c     BSF       0x6c,0x5,0x0   	TXSTA2bits.TXEN = 1;  	// Enable transmitter [248]                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#endif					//                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048bc   8e6b     BSF       0x6b,0x7,0x0   	RCSTA2bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048be   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Serial_Port_One_Byte_Count()                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ones's received data queue.		                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					if any, is present in serial port one's received data                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					a call to Read_Serial_Port_One() can be made to retrieve                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					the next byte.                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048c0   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_One_Byte_Count(void)                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048c2   ffe6                                                                                                               
0048c4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0048c6   ffd9                                                                                                               
0048c8   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	unsigned char temp;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// using it.                                                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048ca   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048cc   c2cf     MOVFF     0x2cf,0xfdf    	temp = Rx_1_Queue_Byte_Count;                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048ce   ffdf                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048d0   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// return the byte count                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048d2   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048d4   d000     BRA       0x48d6                                                                                          
0048d6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0048da   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0048dc   ffd9                                                                                                               
0048de   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Serial_Port_Two_Byte_Count()                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					two's received data queue.		                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					if any, is present in serial port two's received data                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					a call to Read_Serial_Port_Two() can be made to retrieve                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					the next byte.                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048e0   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_Two_Byte_Count(void)                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048e2   ffe6                                                                                                               
0048e4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0048e6   ffd9                                                                                                               
0048e8   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	unsigned char temp;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// using it.                                                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048ea   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048ec   c2db     MOVFF     0x2db,0xfdf    	temp = Rx_2_Queue_Byte_Count;                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048ee   ffdf                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048f0   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// return the byte count                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048f2   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048f4   d000     BRA       0x48f6                                                                                          
0048f6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
0048f8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0048fa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0048fc   ffd9                                                                                                               
0048fe   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_One()                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h 		                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
004900   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_One(void)                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
004902   ffe6                                                                                                               
004904   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004906   ffd9                                                                                                               
004908   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	unsigned char byte;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
00490a   0102     MOVLB     0x2            	if(Rx_1_Queue_Empty)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
00490c   51cc     MOVF      0xcc,0x0,0x1                                                                                    
00490e   e003     BZ        0x4916                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// error: no data to read                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
004910   0e00     MOVLW     0x0            		return(0);                                                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
004912   d017     BRA       0x4942                                                                                          
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004914   d016     BRA       0x4942         	else                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
004916   51cd     MOVF      0xcd,0x0,0x1   		byte = Rx_1_Queue[Rx_1_Queue_Read_Index];                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
004918   6aea     CLRF      0xea,0x0                                                                                        
00491a   0f00     ADDLW     0x0                                                                                             
00491c   6ee9     MOVWF     0xe9,0x0                                                                                        
00491e   0e01     MOVLW     0x1                                                                                             
004920   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004922   cfef     MOVFF     0xfef,0xfdf                                                                                     
004924   ffdf                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// decrement the queue byte count                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004926   07cf     DECF      0xcf,0x1,0x1   		Rx_1_Queue_Byte_Count--;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// increment the read pointer                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004928   2bcd     INCF      0xcd,0x1,0x1   		Rx_1_Queue_Read_Index++;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FIRST\ATLcode\WorkHere\serial_ports.c
00492a   0e1f     MOVLW     0x1f           		Rx_1_Queue_Read_Index &= RX_1_QUEUE_INDEX_MASK;                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
00492c   17cd     ANDWF     0xcd,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// since we're about to use the Rx_1_Queue_Write_Index variable, which can     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_1_Queue_Write_Index doesn't  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// get altered while we're using it.                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
00492e   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004930   51ce     MOVF      0xce,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004932   5dcd     SUBWF     0xcd,0x0,0x1                                                                                    
004934   e102     BNZ       0x493a                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004936   0e01     MOVLW     0x1            			Rx_1_Queue_Empty = TRUE;                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
004938   6fcc     MOVWF     0xcc,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// okay, we're done using Rx_1_Queue_Write_Index, so turn the serial port      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// interrupt back on.                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
00493a   8a9d     BSF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 1;                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FIRST\ATLcode\WorkHere\serial_ports.c
00493c   6bcb     CLRF      0xcb,0x1       		Rx_1_Queue_Full = FALSE;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// return the data                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
00493e   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004940   d000     BRA       0x4942                                                                                          
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004942   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004944   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004946   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004948   ffd9                                                                                                               
00494a   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_Two()                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
00494c   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_Two(void)                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
00494e   ffe6                                                                                                               
004950   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004952   ffd9                                                                                                               
004954   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	unsigned char byte;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004956   0102     MOVLB     0x2            	if(Rx_2_Queue_Empty)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004958   51d8     MOVF      0xd8,0x0,0x1                                                                                    
00495a   e003     BZ        0x4962                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// error: no data to read                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
00495c   0e00     MOVLW     0x0            		return(0);                                                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
00495e   d017     BRA       0x498e                                                                                          
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004960   d016     BRA       0x498e         	else                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
004962   51d9     MOVF      0xd9,0x0,0x1   		byte = Rx_2_Queue[Rx_2_Queue_Read_Index];                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
004964   6aea     CLRF      0xea,0x0                                                                                        
004966   0f40     ADDLW     0x40                                                                                            
004968   6ee9     MOVWF     0xe9,0x0                                                                                        
00496a   0e01     MOVLW     0x1                                                                                             
00496c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00496e   cfef     MOVFF     0xfef,0xfdf                                                                                     
004970   ffdf                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// decrement the queue byte count                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004972   07db     DECF      0xdb,0x1,0x1   		Rx_2_Queue_Byte_Count--;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// increment the read pointer                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004974   2bd9     INCF      0xd9,0x1,0x1   		Rx_2_Queue_Read_Index++;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004976   0e1f     MOVLW     0x1f           		Rx_2_Queue_Read_Index &= RX_2_QUEUE_INDEX_MASK;                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004978   17d9     ANDWF     0xd9,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// since we're about to use the Rx_2_Queue_Write_Index variable, which can     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_2_Queue_Write_Index doesn't  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// get altered while we're using it.                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
00497a   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
00497c   51da     MOVF      0xda,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
00497e   5dd9     SUBWF     0xd9,0x0,0x1                                                                                    
004980   e102     BNZ       0x4986                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004982   0e01     MOVLW     0x1            			Rx_2_Queue_Empty = TRUE;                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
004984   6fd8     MOVWF     0xd8,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// okay, we're done using Rx_2_Queue_Write_Index, so turn the serial port      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// interrupt back on.                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
004986   8aa3     BSF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 1;                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004988   6bd7     CLRF      0xd7,0x1       		Rx_2_Queue_Full = FALSE;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// return the data                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
00498a   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
00498c   d000     BRA       0x498e                                                                                          
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
00498e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004990   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004992   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004994   ffd9                                                                                                               
004996   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_One()                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port one.                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
004998   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_One(unsigned char byte)                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
00499a   ffe6                                                                                                               
00499c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00499e   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049a0   0102     MOVLB     0x2            	while(Tx_1_Queue_Full);                                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049a2   51d2     MOVF      0xd2,0x0,0x1                                                                                    
0049a4   e001     BZ        0x49a8                                                                                          
0049a6   d7fc     BRA       0x49a0                                                                                          
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049a8   51d5     MOVF      0xd5,0x0,0x1   	Tx_1_Queue[Tx_1_Queue_Write_Index] = byte;                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049aa   6aea     CLRF      0xea,0x0                                                                                        
0049ac   0f20     ADDLW     0x20                                                                                            
0049ae   6ee9     MOVWF     0xe9,0x0                                                                                        
0049b0   0e01     MOVLW     0x1                                                                                             
0049b2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0049b4   0efe     MOVLW     0xfe                                                                                            
0049b6   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0049b8   ffef                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// increment the queue byte count                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049ba   2bd6     INCF      0xd6,0x1,0x1   	Tx_1_Queue_Byte_Count++;                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// increment the write pointer                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049bc   2bd5     INCF      0xd5,0x1,0x1   	Tx_1_Queue_Write_Index++;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049be   0e1f     MOVLW     0x1f           	Tx_1_Queue_Write_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049c0   17d5     ANDWF     0xd5,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// since we're about to use the Tx_1_Queue_Write_Index variable, which can      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_1_Queue_Write_Index doesn't   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// get altered while we're using it.                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049c2   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// is the circular queue now full?                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049c4   51d5     MOVF      0xd5,0x0,0x1   	if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049c6   5dd4     SUBWF     0xd4,0x0,0x1                                                                                    
0049c8   e102     BNZ       0x49ce                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049ca   0e01     MOVLW     0x1            		Tx_1_Queue_Full = TRUE;                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049cc   6fd2     MOVWF     0xd2,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// okay, we're done using Tx_Queue_Write_Index, so turn the serial port         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// interrupt back on.                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049ce   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049d0   6bd3     CLRF      0xd3,0x1       	Tx_1_Queue_Empty = FALSE;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049d2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049d4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0049d6   ffd9                                                                                                               
0049d8   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_Two()                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port two.                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049da   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_Two(unsigned char byte)                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049dc   ffe6                                                                                                               
0049de   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0049e0   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049e2   0102     MOVLB     0x2            	while(Tx_2_Queue_Full);                                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049e4   51de     MOVF      0xde,0x0,0x1                                                                                    
0049e6   e001     BZ        0x49ea                                                                                          
0049e8   d7fc     BRA       0x49e2                                                                                          
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049ea   51e1     MOVF      0xe1,0x0,0x1   	Tx_2_Queue[Tx_2_Queue_Write_Index] = byte;                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049ec   6aea     CLRF      0xea,0x0                                                                                        
0049ee   0f60     ADDLW     0x60                                                                                            
0049f0   6ee9     MOVWF     0xe9,0x0                                                                                        
0049f2   0e01     MOVLW     0x1                                                                                             
0049f4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0049f6   0efe     MOVLW     0xfe                                                                                            
0049f8   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0049fa   ffef                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// increment the queue byte count                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049fc   2be2     INCF      0xe2,0x1,0x1   	Tx_2_Queue_Byte_Count++;                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// increment the write pointer                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
0049fe   2be1     INCF      0xe1,0x1,0x1   	Tx_2_Queue_Write_Index++;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a00   0e1f     MOVLW     0x1f           	Tx_2_Queue_Write_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a02   17e1     ANDWF     0xe1,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// since we're about to use the Tx_2_Queue_Write_Index variable, which can      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_2_Queue_Write_Index doesn't   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// get altered while we're using it.                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a04   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// is the circular queue now full?                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a06   51e1     MOVF      0xe1,0x0,0x1   	if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a08   5de0     SUBWF     0xe0,0x0,0x1                                                                                    
004a0a   e102     BNZ       0x4a10                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a0c   0e01     MOVLW     0x1            		Tx_2_Queue_Full = TRUE;                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a0e   6fde     MOVWF     0xde,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// okay, we're done using Tx_2_Queue_Write_Index, so turn the serial port       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// interrupt back on.                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a10   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a12   6bdf     CLRF      0xdf,0x1       	Tx_2_Queue_Empty = FALSE;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a14   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a16   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004a18   ffd9                                                                                                               
004a1a   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Rx_1_Int_Handler()                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Serial port one new data interrupt handler.                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					is received by serial port one.                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h		                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           void Rx_1_Int_Handler(void)                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a1c   0102     MOVLB     0x2            	if(Rx_1_Queue_Full)                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a1e   51cb     MOVF      0xcb,0x0,0x1                                                                                    
004a20   e002     BZ        0x4a26                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// more data is read.                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a22   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a24   d019     BRA       0x4a58         	else                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a26   51ce     MOVF      0xce,0x0,0x1   		Rx_1_Queue[Rx_1_Queue_Write_Index] = RCREG1;                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a28   6aea     CLRF      0xea,0x0                                                                                        
004a2a   0f00     ADDLW     0x0                                                                                             
004a2c   6ee9     MOVWF     0xe9,0x0                                                                                        
004a2e   0e01     MOVLW     0x1                                                                                             
004a30   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004a32   cfae     MOVFF     0xfae,0xfef                                                                                     
004a34   ffef                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// to get data flowing again.                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a36   a2ab     BTFSS     0xab,0x1,0x0   		if(RCSTA1bits.OERR)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a38   d003     BRA       0x4a40                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a3a   98ab     BCF       0xab,0x4,0x0   			RCSTA1bits.CREN = 0;                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           			                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           			// ...turn it back on                                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a3c   88ab     BSF       0xab,0x4,0x0   			RCSTA1bits.CREN = 1;                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           			// indicate that we've had an error                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a3e   2bd0     INCF      0xd0,0x1,0x1   			RX_1_Overrun_Errors++;                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a40   b4ab     BTFSC     0xab,0x2,0x0   		if(RCSTA1bits.FERR)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a42   2bd1     INCF      0xd1,0x1,0x1   			RX_1_Framing_Errors++;                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// increment the queue byte count                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a44   2bcf     INCF      0xcf,0x1,0x1   		Rx_1_Queue_Byte_Count++;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// increment the write pointer                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a46   2bce     INCF      0xce,0x1,0x1   		Rx_1_Queue_Write_Index++;                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a48   0e1f     MOVLW     0x1f           		Rx_1_Queue_Write_Index &= RX_1_QUEUE_INDEX_MASK;                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a4a   17ce     ANDWF     0xce,0x1,0x1                                                                                    
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// is the circular queue now full?                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a4c   51ce     MOVF      0xce,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a4e   5dcd     SUBWF     0xcd,0x0,0x1                                                                                    
004a50   e102     BNZ       0x4a56                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a52   0e01     MOVLW     0x1            			Rx_1_Queue_Full = TRUE;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a54   6fcb     MOVWF     0xcb,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a56   6bcc     CLRF      0xcc,0x1       		Rx_1_Queue_Empty = FALSE;                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a58   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Rx_2_Int_Handler()                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Serial port two new data interrupt handler.		                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					is received by serial port two.                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           void Rx_2_Int_Handler(void)                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a5a   0102     MOVLB     0x2            	if(Rx_2_Queue_Full)                                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a5c   51d7     MOVF      0xd7,0x0,0x1                                                                                    
004a5e   e002     BZ        0x4a64                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// more data is read.                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a60   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a62   d019     BRA       0x4a96         	else                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a64   51da     MOVF      0xda,0x0,0x1   		Rx_2_Queue[Rx_2_Queue_Write_Index] = RCREG2;                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a66   6aea     CLRF      0xea,0x0                                                                                        
004a68   0f40     ADDLW     0x40                                                                                            
004a6a   6ee9     MOVWF     0xe9,0x0                                                                                        
004a6c   0e01     MOVLW     0x1                                                                                             
004a6e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004a70   cf6e     MOVFF     0xf6e,0xfef                                                                                     
004a72   ffef                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// to get data flowing again.                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a74   a26b     BTFSS     0x6b,0x1,0x0   		if(RCSTA2bits.OERR)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a76   d003     BRA       0x4a7e                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a78   986b     BCF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 0;                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           			                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           			// ...turn it back on                                                         C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a7a   886b     BSF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 1;                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           			// indicate that we've had an error                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a7c   2bdc     INCF      0xdc,0x1,0x1   			RX_2_Overrun_Errors++;                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a7e   b46b     BTFSC     0x6b,0x2,0x0   		if(RCSTA2bits.FERR)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a80   2bdd     INCF      0xdd,0x1,0x1   			RX_2_Framing_Errors++;                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// increment the queue byte count                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a82   2bdb     INCF      0xdb,0x1,0x1   		Rx_2_Queue_Byte_Count++;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// increment the write pointer                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a84   2bda     INCF      0xda,0x1,0x1   		Rx_2_Queue_Write_Index++;                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a86   0e1f     MOVLW     0x1f           		Rx_2_Queue_Write_Index &= RX_2_QUEUE_INDEX_MASK;                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a88   17da     ANDWF     0xda,0x1,0x1                                                                                    
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// is the circular queue now full?                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a8a   51da     MOVF      0xda,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a8c   5dd9     SUBWF     0xd9,0x0,0x1                                                                                    
004a8e   e102     BNZ       0x4a94                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a90   0e01     MOVLW     0x1            			Rx_2_Queue_Full = TRUE;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a92   6fd7     MOVWF     0xd7,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a94   6bd8     CLRF      0xd8,0x1       		Rx_2_Queue_Empty = FALSE;                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a96   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Tx_1_Int_Handler()                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Serial port one empty transmit buffer interrupt handler.             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					function will be called every time serial port one is                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h 		                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           void Tx_1_Int_Handler(void)                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a98   0102     MOVLB     0x2            	if(Tx_1_Queue_Empty)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a9a   51d3     MOVF      0xd3,0x0,0x1                                                                                    
004a9c   e002     BZ        0x4aa2                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// more data is sent.                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
004a9e   989d     BCF       0x9d,0x4,0x0   		PIE1bits.TX1IE = 0;                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004aa0   d012     BRA       0x4ac6         	else                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
004aa2   51d4     MOVF      0xd4,0x0,0x1   		TXREG1 = Tx_1_Queue[Tx_1_Queue_Read_Index];                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
004aa4   6aea     CLRF      0xea,0x0                                                                                        
004aa6   0f20     ADDLW     0x20                                                                                            
004aa8   6ee9     MOVWF     0xe9,0x0                                                                                        
004aaa   0e01     MOVLW     0x1                                                                                             
004aac   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004aae   50ef     MOVF      0xef,0x0,0x0                                                                                    
004ab0   6ead     MOVWF     0xad,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// decrement the queue byte count                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ab2   07d6     DECF      0xd6,0x1,0x1   		Tx_1_Queue_Byte_Count--;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// increment the read pointer                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ab4   2bd4     INCF      0xd4,0x1,0x1   		Tx_1_Queue_Read_Index++;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ab6   0e1f     MOVLW     0x1f           		Tx_1_Queue_Read_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ab8   17d4     ANDWF     0xd4,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004aba   51d5     MOVF      0xd5,0x0,0x1   		if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004abc   5dd4     SUBWF     0xd4,0x0,0x1                                                                                    
004abe   e102     BNZ       0x4ac4                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ac0   0e01     MOVLW     0x1            			Tx_1_Queue_Empty = TRUE;                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ac2   6fd3     MOVWF     0xd3,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ac4   6bd2     CLRF      0xd2,0x1       		Tx_1_Queue_Full = FALSE;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ac6   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		Tx_2_Int_Handler()                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		Serial port two empty transmit buffer interrupt handler.		           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					function will be called every time serial port two is                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h 			               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           void Tx_2_Int_Handler(void)                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ac8   0102     MOVLB     0x2            	if(Tx_2_Queue_Empty)                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004aca   51df     MOVF      0xdf,0x0,0x1                                                                                    
004acc   e002     BZ        0x4ad2                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// more data is sent.                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ace   98a3     BCF       0xa3,0x4,0x0   		PIE3bits.TX2IE = 0;                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ad0   d012     BRA       0x4af6         	else                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ad2   51e0     MOVF      0xe0,0x0,0x1   		TXREG2 = Tx_2_Queue[Tx_2_Queue_Read_Index];                                    C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ad4   6aea     CLRF      0xea,0x0                                                                                        
004ad6   0f60     ADDLW     0x60                                                                                            
004ad8   6ee9     MOVWF     0xe9,0x0                                                                                        
004ada   0e01     MOVLW     0x1                                                                                             
004adc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004ade   50ef     MOVF      0xef,0x0,0x0                                                                                    
004ae0   6e6d     MOVWF     0x6d,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// decrement the queue byte count                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ae2   07e2     DECF      0xe2,0x1,0x1   		Tx_2_Queue_Byte_Count--;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// increment the read pointer                                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ae4   2be0     INCF      0xe0,0x1,0x1   		Tx_2_Queue_Read_Index++;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ae6   0e1f     MOVLW     0x1f           		Tx_2_Queue_Read_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004ae8   17e0     ANDWF     0xe0,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004aea   51e1     MOVF      0xe1,0x0,0x1   		if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004aec   5de0     SUBWF     0xe0,0x0,0x1                                                                                    
004aee   e102     BNZ       0x4af4                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004af0   0e01     MOVLW     0x1            			Tx_2_Queue_Empty = TRUE;                                                      C:\FIRST\ATLcode\WorkHere\serial_ports.c
004af2   6fdf     MOVWF     0xdf,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004af4   6bde     CLRF      0xde,0x1       		Tx_2_Queue_Full = FALSE;                                                       C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
004af6   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	FUNCTION:		_user_putc()                                                        C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PURPOSE:		putc() interface to C18 2.4 output stream functions		                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *	COMMENTS:			                                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\serial_ports.c
004af8   cfd9     MOVFF     0xfd9,0xfe6    void _user_putc(unsigned char byte)                                              C:\FIRST\ATLcode\WorkHere\serial_ports.c
004afa   ffe6                                                                                                               
004afc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004afe   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b00   0102     MOVLB     0x2            	if(stdout_serial_port == NUL)                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b02   51ca     MOVF      0xca,0x0,0x1                                                                                    
004b04   e101     BNZ       0x4b08                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// send the data to the bit bucket                                             C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b06   d010     BRA       0x4b28         	else if(stdout_serial_port == SERIAL_PORT_ONE)                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b08   05ca     DECF      0xca,0x0,0x1                                                                                    
004b0a   e106     BNZ       0x4b18                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// send the data to serial port one                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b0c   0efe     MOVLW     0xfe           		Write_Serial_Port_One(byte);                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b0e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004b10   ffe6                                                                                                               
004b12   df42     RCALL     0x4998                                                                                          
004b14   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#endif                                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b16   d008     BRA       0x4b28         	else if(stdout_serial_port == SERIAL_PORT_TWO)                                  C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b18   0e02     MOVLW     0x2                                                                                             
004b1a   5dca     SUBWF     0xca,0x0,0x1                                                                                    
004b1c   e105     BNZ       0x4b28                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           		// send the data to serial port two                                            C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b1e   0efe     MOVLW     0xfe           		Write_Serial_Port_Two(byte);                                                   C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b20   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004b22   ffe6                                                                                                               
004b24   df5a     RCALL     0x49da                                                                                          
004b26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\serial_ports.c
                                           	#endif                                                                          C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b28   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\serial_ports.c
004b2a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004b2c   ffd9                                                                                                               
004b2e   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * FILE NAME: user_routines.c <FRC VERSION>                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * DESCRIPTION:                                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *  This file contains the default mappings of inputs                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *  (like switches, joysticks, and buttons) to outputs on the RC.                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * USAGE:                                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *  project and replace it with a modified copy.                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "serial_ports.h"                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "camera.h"                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "chopshop.h"                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "eeprom.h"                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "gyro.h"                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #include "adc.h"                                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /* EXAMPLES: (see MPLAB C18 User's Guide, p.9 for all types)                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           unsigned char wheel_revolutions = 0; (can vary from 0 to 255)                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           unsigned int  delay_count = 7;       (can vary from 0 to 65,535)                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           int           angle_deviation = 142; (can vary from -32,768 to 32,767)           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           unsigned long very_big_counter = 0;  (can vary from 0 to 4,294,967,295)          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           extern T_Packet_Data_Type T_Packet_Data;					//This is a local verision of the camera C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           															//information that we can work with                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           unsigned char which_drive;		//setting for the drive function                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           long temp_gyro_angle;                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           typedef enum{PREP,                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			 FINE_ADJ}flywheel_stat;                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           flywheel_stat flywheel_adj_flag;	                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           unsigned char prev_prepared = 0;                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           unsigned char auto_aim_override = 1;			//if this is set to 1, then the automatic aiming function returns 1							 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * FUNCTION NAME: User_Initialization                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * PURPOSE:       This routine is called first (and only once) in the Main function.   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *                You may modify and add to this function.                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           void User_Initialization (void)                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             //Set_Number_of_Analog_Channels(SIXTEEN_ANALOG);    /* DO NOT CHANGE! */       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /* FIRST: Set up the I/O pins you want to use as digital INPUTS. */              C:\FIRST\ATLcode\WorkHere\user_routines.c
002294   8a93     BSF       0x93,0x5,0x0     digital_io_01 = digital_io_02 = digital_io_03 = digital_io_04 = INPUT;         C:\FIRST\ATLcode\WorkHere\user_routines.c
002296   8893     BSF       0x93,0x4,0x0                                                                                    
002298   8693     BSF       0x93,0x3,0x0                                                                                    
00229a   8493     BSF       0x93,0x2,0x0                                                                                    
00229c   8299     BSF       0x99,0x1,0x0     digital_io_05 = digital_io_06 = digital_io_07 = digital_io_08 = INPUT;         C:\FIRST\ATLcode\WorkHere\user_routines.c
00229e   8099     BSF       0x99,0x0,0x0                                                                                    
0022a0   8e93     BSF       0x93,0x7,0x0                                                                                    
0022a2   8c93     BSF       0x93,0x6,0x0                                                                                    
0022a4   849a     BSF       0x9a,0x2,0x0     digital_io_09 = digital_io_10 = digital_io_11 = digital_io_12 = INPUT;         C:\FIRST\ATLcode\WorkHere\user_routines.c
0022a6   829a     BSF       0x9a,0x1,0x0                                                                                    
0022a8   8699     BSF       0x99,0x3,0x0                                                                                    
0022aa   8499     BSF       0x99,0x2,0x0                                                                                    
0022ac   8a9a     BSF       0x9a,0x5,0x0     digital_io_13 = digital_io_14 = digital_io_15 = digital_io_16 = INPUT;         C:\FIRST\ATLcode\WorkHere\user_routines.c
0022ae   889a     BSF       0x9a,0x4,0x0                                                                                    
0022b0   8094     BSF       0x94,0x0,0x0                                                                                    
0022b2   869a     BSF       0x9a,0x3,0x0                                                                                    
0022b4   8e9a     BSF       0x9a,0x7,0x0     digital_io_18 = INPUT;  /* Used for pneumatic pressure switch. */              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                               /*                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                Note: digital_io_01 = digital_io_02 = ... digital_io_04 = INPUT;            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                      is the same as the following:                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                      digital_io_01 = INPUT;                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                      digital_io_02 = INPUT;                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                      ...                                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                      digital_io_04 = INPUT;                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                               */                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /* SECOND: Set up the I/O pins you want to use as digital OUTPUTS. */            C:\FIRST\ATLcode\WorkHere\user_routines.c
0022b6   9c9a     BCF       0x9a,0x6,0x0     digital_io_17 = OUTPUT;    /* Example - Not used in Default Code. */           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /* THIRD: Initialize the values on the digital outputs. */                       C:\FIRST\ATLcode\WorkHere\user_routines.c
0022b8   9c91     BCF       0x91,0x6,0x0     rc_dig_out17 = 0;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /* FOURTH: Set your initial PWM values.  Neutral is 127. */                      C:\FIRST\ATLcode\WorkHere\user_routines.c
0022ba   0102     MOVLB     0x2              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\FIRST\ATLcode\WorkHere\user_routines.c
0022bc   0e7f     MOVLW     0x7f                                                                                            
0022be   6f63     MOVWF     0x63,0x1                                                                                        
0022c0   c263     MOVFF     0x263,0x262                                                                                     
0022c2   f262                                                                                                               
0022c4   c263     MOVFF     0x263,0x261                                                                                     
0022c6   f261                                                                                                               
0022c8   c263     MOVFF     0x263,0x260                                                                                     
0022ca   f260                                                                                                               
0022cc   c263     MOVFF     0x263,0x25f                                                                                     
0022ce   f25f                                                                                                               
0022d0   c263     MOVFF     0x263,0x25e                                                                                     
0022d2   f25e                                                                                                               
0022d4   c263     MOVFF     0x263,0x25d                                                                                     
0022d6   f25d                                                                                                               
0022d8   c263     MOVFF     0x263,0x25c                                                                                     
0022da   f25c                                                                                                               
0022dc   6f6b     MOVWF     0x6b,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\FIRST\ATLcode\WorkHere\user_routines.c
0022de   c26b     MOVFF     0x26b,0x26a                                                                                     
0022e0   f26a                                                                                                               
0022e2   c26b     MOVFF     0x26b,0x269                                                                                     
0022e4   f269                                                                                                               
0022e6   c26b     MOVFF     0x26b,0x268                                                                                     
0022e8   f268                                                                                                               
0022ea   c26b     MOVFF     0x26b,0x267                                                                                     
0022ec   f267                                                                                                               
0022ee   c26b     MOVFF     0x26b,0x266                                                                                     
0022f0   f266                                                                                                               
0022f2   c26b     MOVFF     0x26b,0x265                                                                                     
0022f4   f265                                                                                                               
0022f6   c26b     MOVFF     0x26b,0x264                                                                                     
0022f8   f264                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /* FIFTH: Set your PWM output types for PWM OUTPUTS 13-16.                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             /*   Choose from these parameters for PWM 13-16 respectively:               */ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             /*     IFI_PWM  - Standard IFI PWM output generated with Generate_Pwms(...) */ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             /*     USER_CCP - User can use PWM pin as digital I/O or CCP pin.           */ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0022fa   0e00     MOVLW     0x0              Setup_PWM_Output_Type(IFI_PWM,IFI_PWM,IFI_PWM,IFI_PWM);                        C:\FIRST\ATLcode\WorkHere\user_routines.c
0022fc   6ee6     MOVWF     0xe6,0x0                                                                                        
0022fe   6ae6     CLRF      0xe6,0x0                                                                                        
002300   6ee6     MOVWF     0xe6,0x0                                                                                        
002302   6ae6     CLRF      0xe6,0x0                                                                                        
002304   6ee6     MOVWF     0xe6,0x0                                                                                        
002306   6ae6     CLRF      0xe6,0x0                                                                                        
002308   6ee6     MOVWF     0xe6,0x0                                                                                        
00230a   6ae6     CLRF      0xe6,0x0                                                                                        
00230c   ec8b     CALL      0x2f16,0x0                                                                                      
00230e   f017                                                                                                               
002310   6ef5     MOVWF     0xf5,0x0                                                                                        
002312   0e08     MOVLW     0x8                                                                                             
002314   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002316   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             /*                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                Example: The following would generate a 40KHz PWM with a 50% duty cycle on the CCP2 pin: C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                    CCP2CON = 0x3C;                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                    PR2 = 0xF9;                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                    CCPR2L = 0x7F;                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                    T2CON = 0;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                    T2CONbits.TMR2ON = 1;                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                    Setup_PWM_Output_Type(USER_CCP,IFI_PWM,IFI_PWM,IFI_PWM);                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             */                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             /* Add any other initialization code here. */                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002318   ec2e     CALL      0x485c,0x0       Init_Serial_Port_One();                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
00231a   f024                                                                                                               
00231c   ec47     CALL      0x488e,0x0       Init_Serial_Port_Two();                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
00231e   f024                                                                                                               
002320   ecd4     CALL      0x39a8,0x0       Initialize_ADC();                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002322   f01c                                                                                                               
002324   ec7e     CALL      0x44fc,0x0       Initialize_Gyro();                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002326   f022                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************************Drive setting read********************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
002328   0e09     MOVLW     0x9               which_drive = EEPROM_read(9);					//read from EEPROM the value for which_drive C:\FIRST\ATLcode\WorkHere\user_routines.c
00232a   6ee6     MOVWF     0xe6,0x0                                                                                        
00232c   6ae6     CLRF      0xe6,0x0                                                                                        
00232e   ec8a     CALL      0x5314,0x0                                                                                      
002330   f029                                                                                                               
002332   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002334   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002336   0103     MOVLB     0x3                                                                                             
002338   6f39     MOVWF     0x39,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00233a   0539     DECF      0x39,0x0,0x1      if (which_drive == 1 || which_drive == 2)		//is the value one of the two accepted values? C:\FIRST\ATLcode\WorkHere\user_routines.c
00233c   e003     BZ        0x2344                                                                                          
00233e   0e02     MOVLW     0x2                                                                                             
002340   5d39     SUBWF     0x39,0x0,0x1                                                                                    
002342   e101     BNZ       0x2346                                                                                          
                                              {												//do nothing                                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                              }                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002344   d00c     BRA       0x235e            else												//else                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                              {                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002346   0e02     MOVLW     0x2            	   which_drive = DEFAULT_DRIVE;					//set the value to the default              C:\FIRST\ATLcode\WorkHere\user_routines.c
002348   6f39     MOVWF     0x39,0x1                                                                                        
00234a   c339     MOVFF     0x339,0xfe6    	   EEPROM_prep((unsigned int)9, which_drive);	//write the setting to EEPROM     C:\FIRST\ATLcode\WorkHere\user_routines.c
00234c   ffe6                                                                                                               
00234e   0e09     MOVLW     0x9                                                                                             
002350   6ee6     MOVWF     0xe6,0x0                                                                                        
002352   6ae6     CLRF      0xe6,0x0                                                                                        
002354   eca4     CALL      0x5348,0x0                                                                                      
002356   f029                                                                                                               
002358   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00235a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00235c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                              }                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***************************************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00235e   88f0     BSF       0xf0,0x4,0x0     INTCON3bits.INT2IE = 1;		//dig i/o 1 interrupt                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
002360   ecd3     CALL      0x13a6,0x0       initialize_timer1();                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002362   f009                                                                                                               
002364   ecdd     CALL      0x13ba,0x0       initialize_timer3();                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002366   f009                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
002368   0102     MOVLB     0x2              stdout_serial_port = SERIAL_PORT_ONE;                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
00236a   0e01     MOVLW     0x1                                                                                             
00236c   6fca     MOVWF     0xca,0x1                                                                                        
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_2                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             stdout_serial_port = SERIAL_PORT_TWO;                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00236e   0e58     MOVLW     0x58             Putdata(&txdata);             /* DO NOT CHANGE! */                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002370   6ee6     MOVWF     0xe6,0x0                                                                                        
002372   0e02     MOVLW     0x2                                                                                             
002374   6ee6     MOVWF     0xe6,0x0                                                                                        
002376   ec49     CALL      0x2e92,0x0                                                                                      
002378   f017                                                                                                               
00237a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00237c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00237e   efd0     GOTO      0x2da0           User_Proc_Is_Ready();         /* DO NOT CHANGE! - last line of User_Initialization */ C:\FIRST\ATLcode\WorkHere\user_routines.c
002380   f016                                                                                                               
                                           }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * FUNCTION NAME: Process_Data_From_Master_uP                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * PURPOSE:       Executes every 26.2ms when it gets new data from the master     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *                microprocessor.                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
002382   cfd9     MOVFF     0xfd9,0xfe6    void Process_Data_From_Master_uP(void)                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002384   ffe6                                                                                                               
002386   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002388   ffd9                                                                                                               
00238a   0e04     MOVLW     0x4                                                                                             
00238c   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static unsigned int i = 0;                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static unsigned int j = 0;                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char gyro_cal = 0;                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           int temp_gyro_rate;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           int temp_gyro_bias;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00238e   0e78     MOVLW     0x78           	Getdata(&rxdata);   /* Get fresh data from the master microprocessor. */        C:\FIRST\ATLcode\WorkHere\user_routines.c
002390   6ee6     MOVWF     0xe6,0x0                                                                                        
002392   0e02     MOVLW     0x2                                                                                             
002394   6ee6     MOVWF     0xe6,0x0                                                                                        
002396   ec30     CALL      0x2e60,0x0                                                                                      
002398   f017                                                                                                               
00239a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00239c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00239e   0101     MOVLB     0x1            	i++;                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0023a0   2bdf     INCF      0xdf,0x1,0x1                                                                                    
0023a2   0e00     MOVLW     0x0                                                                                             
0023a4   23e0     ADDWFC    0xe0,0x1,0x1                                                                                    
0023a6   2be1     INCF      0xe1,0x1,0x1   	j++; 				// this will rollover every ~1000 seconds                              C:\FIRST\ATLcode\WorkHere\user_routines.c
0023a8   23e2     ADDWFC    0xe2,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
0023aa   51e3     MOVF      0xe3,0x0,0x1   	if(!gyro_cal)                                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
0023ac   e13b     BNZ       0x2424                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
0023ae   0e0a     MOVLW     0xa            		if(j == 10)                                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
0023b0   19e1     XORWF     0xe1,0x0,0x1                                                                                    
0023b2   e101     BNZ       0x23b6                                                                                          
0023b4   51e2     MOVF      0xe2,0x0,0x1                                                                                    
0023b6   e110     BNZ       0x23d8                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
0023b8   0e69     MOVLW     0x69           			printf("\rCalculating Gyro Bias...");                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
0023ba   6e2b     MOVWF     0x2b,0x0                                                                                        
0023bc   0e55     MOVLW     0x55                                                                                            
0023be   6e2c     MOVWF     0x2c,0x0                                                                                        
0023c0   6a2d     CLRF      0x2d,0x0                                                                                        
0023c2   c02b     MOVFF     0x2b,0xfe6                                                                                      
0023c4   ffe6                                                                                                               
0023c6   c02c     MOVFF     0x2c,0xfe6                                                                                      
0023c8   ffe6                                                                                                               
0023ca   c02d     MOVFF     0x2d,0xfe6                                                                                      
0023cc   ffe6                                                                                                               
0023ce   ecfd     CALL      0x57fa,0x0                                                                                      
0023d0   f02b                                                                                                               
0023d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023d6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0023d8   0101     MOVLB     0x1            		if(j == 60)                                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
0023da   0e3c     MOVLW     0x3c                                                                                            
0023dc   19e1     XORWF     0xe1,0x0,0x1                                                                                    
0023de   e101     BNZ       0x23e2                                                                                          
0023e0   51e2     MOVF      0xe2,0x0,0x1                                                                                    
0023e2   e102     BNZ       0x23e8                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			// start a gyro bias calculation                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
0023e4   ec80     CALL      0x4700,0x0     			Start_Gyro_Bias_Calc();                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
0023e6   f023                                                                                                               
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0023e8   0e2c     MOVLW     0x2c           		if(j == 300)                                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
0023ea   0101     MOVLB     0x1                                                                                             
0023ec   19e1     XORWF     0xe1,0x0,0x1                                                                                    
0023ee   e102     BNZ       0x23f4                                                                                          
0023f0   0e01     MOVLW     0x1                                                                                             
0023f2   19e2     XORWF     0xe2,0x0,0x1                                                                                    
0023f4   e117     BNZ       0x2424                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			// terminate the gyro bias calculation                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
0023f6   ec8c     CALL      0x4718,0x0     			Stop_Gyro_Bias_Calc();                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
0023f8   f023                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			// reset the gyro heading angle                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
0023fa   ecc2     CALL      0x4784,0x0     			Reset_Gyro_Angle();                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
0023fc   f023                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0023fe   0e63     MOVLW     0x63           			printf("Done\r");                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002400   6e2b     MOVWF     0x2b,0x0                                                                                        
002402   0e55     MOVLW     0x55                                                                                            
002404   6e2c     MOVWF     0x2c,0x0                                                                                        
002406   6a2d     CLRF      0x2d,0x0                                                                                        
002408   c02b     MOVFF     0x2b,0xfe6                                                                                      
00240a   ffe6                                                                                                               
00240c   c02c     MOVFF     0x2c,0xfe6                                                                                      
00240e   ffe6                                                                                                               
002410   c02d     MOVFF     0x2d,0xfe6                                                                                      
002412   ffe6                                                                                                               
002414   ecfd     CALL      0x57fa,0x0                                                                                      
002416   f02b                                                                                                               
002418   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00241a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00241c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00241e   0101     MOVLB     0x1            			gyro_cal = 1;                                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
002420   0e01     MOVLW     0x1                                                                                             
002422   6fe3     MOVWF     0xe3,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002424   0e1e     MOVLW     0x1e           	if(i >= 30 && j >= 300)                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
002426   5ddf     SUBWF     0xdf,0x0,0x1                                                                                    
002428   0e00     MOVLW     0x0                                                                                             
00242a   59e0     SUBWFB    0xe0,0x0,0x1                                                                                    
00242c   e320     BNC       0x246e                                                                                          
00242e   0e2c     MOVLW     0x2c                                                                                            
002430   5de1     SUBWF     0xe1,0x0,0x1                                                                                    
002432   0e01     MOVLW     0x1                                                                                             
002434   59e2     SUBWFB    0xe2,0x0,0x1                                                                                    
002436   e31b     BNC       0x246e                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002438   ecae     CALL      0x475c,0x0     		temp_gyro_bias = Get_Gyro_Bias();                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
00243a   f023                                                                                                               
00243c   0e02     MOVLW     0x2                                                                                             
00243e   cff3     MOVFF     0xff3,0xfdb                                                                                     
002440   ffdb                                                                                                               
002442   0e03     MOVLW     0x3                                                                                             
002444   cff4     MOVFF     0xff4,0xfdb                                                                                     
002446   ffdb                                                                                                               
002448   ec85     CALL      0x450a,0x0     		temp_gyro_rate = Get_Gyro_Rate();                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
00244a   f022                                                                                                               
00244c   cff3     MOVFF     0xff3,0xfde                                                                                     
00244e   ffde                                                                                                               
002450   cff4     MOVFF     0xff4,0xfdd                                                                                     
002452   ffdd                                                                                                               
002454   ecdb     CALL      0x45b6,0x0     		temp_gyro_angle = Get_Gyro_Angle();                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002456   f022                                                                                                               
002458   c01b     MOVFF     0x1b,0x33a                                                                                      
00245a   f33a                                                                                                               
00245c   c01c     MOVFF     0x1c,0x33b                                                                                      
00245e   f33b                                                                                                               
002460   c01d     MOVFF     0x1d,0x33c                                                                                      
002462   f33c                                                                                                               
002464   c01e     MOVFF     0x1e,0x33d                                                                                      
002466   f33d                                                                                                               
                                           		//printf(" Gyro Bias=%d\r\n", temp_gyro_bias);                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//printf(" Gyro Rate=%d\r\n", temp_gyro_rate);                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//printf(" Gyro Angle=%li\r\n\r\n", temp_gyro_angle);                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002468   0101     MOVLB     0x1            	i = 0;                                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
00246a   6bdf     CLRF      0xdf,0x1                                                                                        
00246c   6be0     CLRF      0xe0,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	// This function is responsable for camera initialization                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	// and camera serial data interpretation. Once the camera                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	// is initialized and starts sending tracking data, this                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	// function will continuously update the global T_Packet_Data                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	// structure with the received tracking information.                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00246e   ecba     CALL      0x3374,0x0     	Camera_Handler();                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002470   f019                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002472   ecda     CALL      0x53b4,0x0     	EEPROM_write();					//if there is data in the queue, write to the data EEPROM   C:\FIRST\ATLcode\WorkHere\user_routines.c
002474   f029                                                                                                               
002476   d81c     RCALL     0x24b0             Default_Routine();  /* Optional.  See below. */                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002478   c26b     MOVFF     0x26b,0xfe6        Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
00247a   ffe6                                                                                                               
00247c   c26a     MOVFF     0x26a,0xfe6                                                                                     
00247e   ffe6                                                                                                               
002480   c269     MOVFF     0x269,0xfe6                                                                                     
002482   ffe6                                                                                                               
002484   c268     MOVFF     0x268,0xfe6                                                                                     
002486   ffe6                                                                                                               
002488   ec02     CALL      0x4404,0x0                                                                                      
00248a   f022                                                                                                               
00248c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00248e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002490   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002492   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002494   0e58     MOVLW     0x58               Putdata(&txdata);             /* DO NOT CHANGE! */                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002496   6ee6     MOVWF     0xe6,0x0                                                                                        
002498   0e02     MOVLW     0x2                                                                                             
00249a   6ee6     MOVWF     0xe6,0x0                                                                                        
00249c   ec49     CALL      0x2e92,0x0                                                                                      
00249e   f017                                                                                                               
0024a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0024a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0024a4   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
0024a6   ffe1                                                                                                               
0024a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0024aa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0024ac   ffd9                                                                                                               
0024ae   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * FUNCTION NAME: Default_Routine                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * PURPOSE:       Performs the default mappings of inputs to outputs for the      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *                Robot Controller.                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * CALLED FROM:   this file, Process_Data_From_Master_uP routine                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           void Default_Routine(void)                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char is_it_still_being_held_drive = 0;															//debounce for the drive selection C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static int counter2 = 0;                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static int last_time_value = 0;                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static unsigned char last_rps_calculation = 0;                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char last_val_left = 0;                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char counter_L = 0;                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static int counter = 0;                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char last_val = 0;                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char last_val_right = 0;                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static int counter_R = 0;                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //printf("\rinput is %d or %d", rc_dig_in05, rc_dig_in06);                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0024b0   5081     MOVF      0x81,0x0,0x0   if(L_encoder != last_val_left)		//has the value of the encoder changed?		        C:\FIRST\ATLcode\WorkHere\user_routines.c
0024b2   0b40     ANDLW     0x40                                                                                            
0024b4   e001     BZ        0x24b8                                                                                          
0024b6   0e01     MOVLW     0x1                                                                                             
0024b8   0101     MOVLB     0x1                                                                                             
0024ba   5dea     SUBWF     0xea,0x0,0x1                                                                                    
0024bc   e020     BZ        0x24fe                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
0024be   2beb     INCF      0xeb,0x1,0x1   			counter_L++;					//if so, add one to counter                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
0024c0   5081     MOVF      0x81,0x0,0x0   			last_val_left = L_encoder;		//save the value                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
0024c2   0b40     ANDLW     0x40                                                                                            
0024c4   e001     BZ        0x24c8                                                                                          
0024c6   0e01     MOVLW     0x1                                                                                             
0024c8   6fea     MOVWF     0xea,0x1                                                                                        
0024ca   c1eb     MOVFF     0x1eb,0x2b     			printf("\rThe counter on left is %d", counter_L);                             C:\FIRST\ATLcode\WorkHere\user_routines.c
0024cc   f02b                                                                                                               
0024ce   6a2c     CLRF      0x2c,0x0                                                                                        
0024d0   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
0024d2   682c     SETF      0x2c,0x0                                                                                        
0024d4   c02b     MOVFF     0x2b,0xfe6                                                                                      
0024d6   ffe6                                                                                                               
0024d8   c02c     MOVFF     0x2c,0xfe6                                                                                      
0024da   ffe6                                                                                                               
0024dc   0e48     MOVLW     0x48                                                                                            
0024de   6e2d     MOVWF     0x2d,0x0                                                                                        
0024e0   0e55     MOVLW     0x55                                                                                            
0024e2   6e2e     MOVWF     0x2e,0x0                                                                                        
0024e4   6a2f     CLRF      0x2f,0x0                                                                                        
0024e6   c02d     MOVFF     0x2d,0xfe6                                                                                      
0024e8   ffe6                                                                                                               
0024ea   c02e     MOVFF     0x2e,0xfe6                                                                                      
0024ec   ffe6                                                                                                               
0024ee   c02f     MOVFF     0x2f,0xfe6                                                                                      
0024f0   ffe6                                                                                                               
0024f2   ecfd     CALL      0x57fa,0x0                                                                                      
0024f4   f02b                                                                                                               
0024f6   6ef5     MOVWF     0xf5,0x0                                                                                        
0024f8   0e05     MOVLW     0x5                                                                                             
0024fa   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0024fc   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0024fe   5081     MOVF      0x81,0x0,0x0   if(R_encoder != last_val_right)		//has the value of the encoder changed?		       C:\FIRST\ATLcode\WorkHere\user_routines.c
002500   0b80     ANDLW     0x80                                                                                            
002502   e001     BZ        0x2506                                                                                          
002504   0e01     MOVLW     0x1                                                                                             
002506   0101     MOVLB     0x1                                                                                             
002508   5def     SUBWF     0xef,0x0,0x1                                                                                    
00250a   e01d     BZ        0x2546                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
00250c   2bf0     INCF      0xf0,0x1,0x1   			counter_R++;					//if so, add one to counter                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
00250e   0e00     MOVLW     0x0                                                                                             
002510   23f1     ADDWFC    0xf1,0x1,0x1                                                                                    
002512   5081     MOVF      0x81,0x0,0x0   			last_val_right = R_encoder;		//save the value                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
002514   0b80     ANDLW     0x80                                                                                            
002516   e001     BZ        0x251a                                                                                          
002518   0e01     MOVLW     0x1                                                                                             
00251a   6fef     MOVWF     0xef,0x1                                                                                        
00251c   c1f0     MOVFF     0x1f0,0xfe6    			printf("\rThe counter on right is %d", counter_R);                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00251e   ffe6                                                                                                               
002520   c1f1     MOVFF     0x1f1,0xfe6                                                                                     
002522   ffe6                                                                                                               
002524   0e2c     MOVLW     0x2c                                                                                            
002526   6e2b     MOVWF     0x2b,0x0                                                                                        
002528   0e55     MOVLW     0x55                                                                                            
00252a   6e2c     MOVWF     0x2c,0x0                                                                                        
00252c   6a2d     CLRF      0x2d,0x0                                                                                        
00252e   c02b     MOVFF     0x2b,0xfe6                                                                                      
002530   ffe6                                                                                                               
002532   c02c     MOVFF     0x2c,0xfe6                                                                                      
002534   ffe6                                                                                                               
002536   c02d     MOVFF     0x2d,0xfe6                                                                                      
002538   ffe6                                                                                                               
00253a   ecfd     CALL      0x57fa,0x0                                                                                      
00253c   f02b                                                                                                               
00253e   6ef5     MOVWF     0xf5,0x0                                                                                        
002540   0e05     MOVLW     0x5                                                                                             
002542   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002544   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 1                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002546   0102     MOVLB     0x2            if(p1_sw_top && p2_sw_top)                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
002548   517a     MOVF      0x7a,0x0,0x1                                                                                    
00254a   0b02     ANDLW     0x2                                                                                             
00254c   e101     BNZ       0x2550                                                                                          
00254e   d081     BRA       0x2652                                                                                          
002550   517b     MOVF      0x7b,0x0,0x1                                                                                    
002552   0b02     ANDLW     0x2                                                                                             
002554   e101     BNZ       0x2558                                                                                          
002556   d07d     BRA       0x2652                                                                                          
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002558   0101     MOVLB     0x1            counter++;                                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
00255a   2bec     INCF      0xec,0x1,0x1                                                                                    
00255c   0e00     MOVLW     0x0                                                                                             
00255e   23ed     ADDWFC    0xed,0x1,0x1                                                                                    
002560   c1ec     MOVFF     0x1ec,0x2b     	if(counter % 32 == 0)                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002562   f02b                                                                                                               
002564   c1ed     MOVFF     0x1ed,0x2c                                                                                      
002566   f02c                                                                                                               
002568   0e20     MOVLW     0x20                                                                                            
00256a   6e22     MOVWF     0x22,0x0                                                                                        
00256c   6a23     CLRF      0x23,0x0                                                                                        
00256e   c02b     MOVFF     0x2b,0x1d                                                                                       
002570   f01d                                                                                                               
002572   c02c     MOVFF     0x2c,0x1e                                                                                       
002574   f01e                                                                                                               
002576   ecad     CALL      0x4b5a,0x0                                                                                      
002578   f025                                                                                                               
00257a   c019     MOVFF     0x19,0x2b                                                                                       
00257c   f02b                                                                                                               
00257e   c01a     MOVFF     0x1a,0x2c                                                                                       
002580   f02c                                                                                                               
002582   502b     MOVF      0x2b,0x0,0x0                                                                                    
002584   102c     IORWF     0x2c,0x0,0x0                                                                                    
002586   e116     BNZ       0x25b4                                                                                          
                                           			{	                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002588   0e01     MOVLW     0x1            				shoot(1);                                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
00258a   6ee6     MOVWF     0xe6,0x0                                                                                        
00258c   dae1     RCALL     0x2b50                                                                                          
00258e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002590   0e13     MOVLW     0x13           				printf("\rNow opening for a shoot");                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
002592   6e2b     MOVWF     0x2b,0x0                                                                                        
002594   0e55     MOVLW     0x55                                                                                            
002596   6e2c     MOVWF     0x2c,0x0                                                                                        
002598   6a2d     CLRF      0x2d,0x0                                                                                        
00259a   c02b     MOVFF     0x2b,0xfe6                                                                                      
00259c   ffe6                                                                                                               
00259e   c02c     MOVFF     0x2c,0xfe6                                                                                      
0025a0   ffe6                                                                                                               
0025a2   c02d     MOVFF     0x2d,0xfe6                                                                                      
0025a4   ffe6                                                                                                               
0025a6   ecfd     CALL      0x57fa,0x0                                                                                      
0025a8   f02b                                                                                                               
0025aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0025ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0025ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0025b0   c1ec     MOVFF     0x1ec,0x1ee    				last_val = counter;                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
0025b2   f1ee                                                                                                               
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
0025b4   0e0a     MOVLW     0xa            			 if(!(counter % (10 + last_val)))                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
0025b6   0101     MOVLB     0x1                                                                                             
0025b8   25ee     ADDWF     0xee,0x0,0x1                                                                                    
0025ba   6e2d     MOVWF     0x2d,0x0                                                                                        
0025bc   6a2e     CLRF      0x2e,0x0                                                                                        
0025be   be2d     BTFSC     0x2d,0x7,0x0                                                                                    
0025c0   682e     SETF      0x2e,0x0                                                                                        
0025c2   c1ec     MOVFF     0x1ec,0x1d                                                                                      
0025c4   f01d                                                                                                               
0025c6   c1ed     MOVFF     0x1ed,0x1e                                                                                      
0025c8   f01e                                                                                                               
0025ca   c02d     MOVFF     0x2d,0x22                                                                                       
0025cc   f022                                                                                                               
0025ce   c02e     MOVFF     0x2e,0x23                                                                                       
0025d0   f023                                                                                                               
0025d2   ecad     CALL      0x4b5a,0x0                                                                                      
0025d4   f025                                                                                                               
0025d6   ae2e     BTFSS     0x2e,0x7,0x0                                                                                    
0025d8   d004     BRA       0x25e2                                                                                          
0025da   6c19     NEGF      0x19,0x0                                                                                        
0025dc   1e1a     COMF      0x1a,0x1,0x0                                                                                    
0025de   0e00     MOVLW     0x0                                                                                             
0025e0   221a     ADDWFC    0x1a,0x1,0x0                                                                                    
0025e2   c019     MOVFF     0x19,0x2b                                                                                       
0025e4   f02b                                                                                                               
0025e6   c01a     MOVFF     0x1a,0x2c                                                                                       
0025e8   f02c                                                                                                               
0025ea   502b     MOVF      0x2b,0x0,0x0                                                                                    
0025ec   102c     IORWF     0x2c,0x0,0x0                                                                                    
0025ee   e116     BNZ       0x261c                                                                                          
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0025f0   6ae6     CLRF      0xe6,0x0       					shoot(0);                                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
0025f2   daae     RCALL     0x2b50                                                                                          
0025f4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0025f6   0e02     MOVLW     0x2            					last_val += 2;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
0025f8   0101     MOVLB     0x1                                                                                             
0025fa   27ee     ADDWF     0xee,0x1,0x1                                                                                    
0025fc   0efa     MOVLW     0xfa           					printf("\rNow closing for a shoot");                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
0025fe   6e2b     MOVWF     0x2b,0x0                                                                                        
002600   0e54     MOVLW     0x54                                                                                            
002602   6e2c     MOVWF     0x2c,0x0                                                                                        
002604   6a2d     CLRF      0x2d,0x0                                                                                        
002606   c02b     MOVFF     0x2b,0xfe6                                                                                      
002608   ffe6                                                                                                               
00260a   c02c     MOVFF     0x2c,0xfe6                                                                                      
00260c   ffe6                                                                                                               
00260e   c02d     MOVFF     0x2d,0xfe6                                                                                      
002610   ffe6                                                                                                               
002612   ecfd     CALL      0x57fa,0x0                                                                                      
002614   f02b                                                                                                               
002616   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002618   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00261a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00261c   0101     MOVLB     0x1            			if(counter > 200)                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
00261e   35ed     RLCF      0xed,0x0,0x1                                                                                    
002620   e204     BC        0x262a                                                                                          
002622   51ec     MOVF      0xec,0x0,0x1                                                                                    
002624   08c8     SUBLW     0xc8                                                                                            
002626   0e00     MOVLW     0x0                                                                                             
002628   55ed     SUBFWB    0xed,0x0,0x1                                                                                    
00262a   e213     BC        0x2652                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
00262c   6ae6     CLRF      0xe6,0x0       				shoot(0);                                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
00262e   da90     RCALL     0x2b50                                                                                          
002630   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002632   0ed5     MOVLW     0xd5           				printf("\rDONE DONE DONE!!! FOR THE HORDE!!!!");                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002634   6e2b     MOVWF     0x2b,0x0                                                                                        
002636   0e54     MOVLW     0x54                                                                                            
002638   6e2c     MOVWF     0x2c,0x0                                                                                        
00263a   6a2d     CLRF      0x2d,0x0                                                                                        
00263c   c02b     MOVFF     0x2b,0xfe6                                                                                      
00263e   ffe6                                                                                                               
002640   c02c     MOVFF     0x2c,0xfe6                                                                                      
002642   ffe6                                                                                                               
002644   c02d     MOVFF     0x2d,0xfe6                                                                                      
002646   ffe6                                                                                                               
002648   ecfd     CALL      0x57fa,0x0                                                                                      
00264a   f02b                                                                                                               
00264c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00264e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002650   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif	                                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*this is the tested values for the sensor*/                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           if(timer_data(1,1) != last_time_value)					//do this only every quater for sample rate C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				last_time_value = timer_data(1,1);                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				INTCON3bits.INT2IE = 0;						//turns sensor interrupt off to prevent more data from coming in C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				last_rps_calculation = rps(1);				//determine what the rps of the wheel is from the rps function C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				User_Byte3 = last_rps_calculation;			//assign value of user byte             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				rps(2);										//reset the counter in the rps function                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				timer_data(1,2);							//reset the timer                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				INTCON3bits.INT2IE = 1;                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           printf("\rrps %d", last_rps_calculation);                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002652   0101     MOVLB     0x1            if(counter2 == 20)                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002654   0e14     MOVLW     0x14                                                                                            
002656   19e5     XORWF     0xe5,0x0,0x1                                                                                    
002658   e101     BNZ       0x265c                                                                                          
00265a   51e6     MOVF      0xe6,0x0,0x1                                                                                    
00265c   e102     BNZ       0x2662                                                                                          
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //printf("\rdone is %d: interrupt is %d:", done, INTCON3bits.INT2IE);            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //printf("\rx %d, y %d", T_Packet_Data.mx, T_Packet_Data.my);	//used to determine  C:\FIRST\ATLcode\WorkHere\user_routines.c
00265e   6be5     CLRF      0xe5,0x1       counter2 = 0;                                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
002660   6be6     CLRF      0xe6,0x1                                                                                        
                                           }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002662   2be5     INCF      0xe5,0x1,0x1   counter2++;                                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
002664   0e00     MOVLW     0x0                                                                                             
002666   23e6     ADDWFC    0xe6,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //printf("\rl_encouder %d flywheel_ sensor %d", L_encoder, rc_dig_in01);         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*********************************Setting code***********************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
002668   0102     MOVLB     0x2            	if(p4_sw_trig)																				//is p4_sw_trig pressed down?                 C:\FIRST\ATLcode\WorkHere\user_routines.c
00266a   a97b     BTFSS     0x7b,0x4,0x1                                                                                    
00266c   d03e     BRA       0x26ea                                                                                          
                                           	{																							//                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
00266e   517b     MOVF      0x7b,0x0,0x1   		if(p4_sw_top == 1 && which_drive == 1 && is_it_still_being_held_drive == 0)				//is p4_sw_top compressed and drive setting is 1? C:\FIRST\ATLcode\WorkHere\user_routines.c
002670   0b20     ANDLW     0x20                                                                                            
002672   e017     BZ        0x26a2                                                                                          
002674   0103     MOVLB     0x3                                                                                             
002676   0539     DECF      0x39,0x0,0x1                                                                                    
002678   e114     BNZ       0x26a2                                                                                          
00267a   0101     MOVLB     0x1                                                                                             
00267c   51e4     MOVF      0xe4,0x0,0x1                                                                                    
00267e   e111     BNZ       0x26a2                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002680   0103     MOVLB     0x3            			which_drive = 2;																	//change the drive setting to two stick drive 	 C:\FIRST\ATLcode\WorkHere\user_routines.c
002682   0e02     MOVLW     0x2                                                                                             
002684   6f39     MOVWF     0x39,0x1                                                                                        
002686   c339     MOVFF     0x339,0xfe6    `			EEPROM_prep((unsigned int)9, which_drive);											//write the new value to the EEPROM C:\FIRST\ATLcode\WorkHere\user_routines.c
002688   ffe6                                                                                                               
00268a   0e09     MOVLW     0x9                                                                                             
00268c   6ee6     MOVWF     0xe6,0x0                                                                                        
00268e   6ae6     CLRF      0xe6,0x0                                                                                        
002690   eca4     CALL      0x5348,0x0                                                                                      
002692   f029                                                                                                               
002694   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002696   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002698   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00269a   0101     MOVLB     0x1            			is_it_still_being_held_drive = 1;													//the button is being held now  C:\FIRST\ATLcode\WorkHere\user_routines.c
00269c   0e01     MOVLW     0x1                                                                                             
00269e   6fe4     MOVWF     0xe4,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
0026a0   d024     BRA       0x26ea         		else if(p4_sw_top == 1 && which_drive == 2 && is_it_still_being_held_drive == 0)		//else, is the top switch pressed and which_drive = 2  C:\FIRST\ATLcode\WorkHere\user_routines.c
0026a2   0102     MOVLB     0x2                                                                                             
0026a4   517b     MOVF      0x7b,0x0,0x1                                                                                    
0026a6   0b20     ANDLW     0x20                                                                                            
0026a8   e018     BZ        0x26da                                                                                          
0026aa   0e02     MOVLW     0x2                                                                                             
0026ac   0103     MOVLB     0x3                                                                                             
0026ae   5d39     SUBWF     0x39,0x0,0x1                                                                                    
0026b0   e114     BNZ       0x26da                                                                                          
0026b2   0101     MOVLB     0x1                                                                                             
0026b4   51e4     MOVF      0xe4,0x0,0x1                                                                                    
0026b6   e111     BNZ       0x26da                                                                                          
                                           			 {                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0026b8   0103     MOVLB     0x3            				which_drive = 1;																//change which drive to 1                    C:\FIRST\ATLcode\WorkHere\user_routines.c
0026ba   0e01     MOVLW     0x1                                                                                             
0026bc   6f39     MOVWF     0x39,0x1                                                                                        
0026be   c339     MOVFF     0x339,0xfe6    				EEPROM_prep((unsigned int)9, which_drive);										//write the new value to EEPROM C:\FIRST\ATLcode\WorkHere\user_routines.c
0026c0   ffe6                                                                                                               
0026c2   0e09     MOVLW     0x9                                                                                             
0026c4   6ee6     MOVWF     0xe6,0x0                                                                                        
0026c6   6ae6     CLRF      0xe6,0x0                                                                                        
0026c8   eca4     CALL      0x5348,0x0                                                                                      
0026ca   f029                                                                                                               
0026cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0026ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0026d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0026d2   0101     MOVLB     0x1            				is_it_still_being_held_drive = 1;												//the button is being held now  C:\FIRST\ATLcode\WorkHere\user_routines.c
0026d4   0e01     MOVLW     0x1                                                                                             
0026d6   6fe4     MOVWF     0xe4,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
0026d8   d008     BRA       0x26ea             		else if(p4_sw_top == 0 && is_it_still_being_held_drive == 1)						//is the bottom not pressed and the debounce is 1				 C:\FIRST\ATLcode\WorkHere\user_routines.c
0026da   0102     MOVLB     0x2                                                                                             
0026dc   517b     MOVF      0x7b,0x0,0x1                                                                                    
0026de   0b20     ANDLW     0x20                                                                                            
0026e0   e104     BNZ       0x26ea                                                                                          
0026e2   0101     MOVLB     0x1                                                                                             
0026e4   05e4     DECF      0xe4,0x0,0x1                                                                                    
0026e6   e101     BNZ       0x26ea                                                                                          
                                           				 {                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
0026e8   6be4     CLRF      0xe4,0x1       					is_it_still_being_held_drive = 0;											//reset the debounce to 0       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				 }                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************************Drive code**************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*Using the global which_drive variable, we decide which type of drive should be used*/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
0026ea   0103     MOVLB     0x3            	if(which_drive == 1)                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
0026ec   0539     DECF      0x39,0x0,0x1                                                                                    
0026ee   e111     BNZ       0x2712                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
0026f0   0e64     MOVLW     0x64           		Squishy_Drive_1stickdrive(&pwm01, &pwm02, 100);										//one stick drive     C:\FIRST\ATLcode\WorkHere\user_routines.c
0026f2   6ee6     MOVWF     0xe6,0x0                                                                                        
0026f4   0e5d     MOVLW     0x5d                                                                                            
0026f6   6ee6     MOVWF     0xe6,0x0                                                                                        
0026f8   0e02     MOVLW     0x2                                                                                             
0026fa   6ee6     MOVWF     0xe6,0x0                                                                                        
0026fc   0e5c     MOVLW     0x5c                                                                                            
0026fe   6ee6     MOVWF     0xe6,0x0                                                                                        
002700   0e02     MOVLW     0x2                                                                                             
002702   6ee6     MOVWF     0xe6,0x0                                                                                        
002704   ecf7     CALL      0xdee,0x0                                                                                       
002706   f006                                                                                                               
002708   6ef5     MOVWF     0xf5,0x0                                                                                        
00270a   0e05     MOVLW     0x5                                                                                             
00270c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00270e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		printf("drive:   p1_y = %d,  p1_x = %d\r pwm01 = %d,  pwm02 = %d\r\r", p1_y, p1_x, pwm01, pwm02);	 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002710   d017     BRA       0x2740         	else if(which_drive == 2)                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
002712   0e02     MOVLW     0x2                                                                                             
002714   5d39     SUBWF     0x39,0x0,0x1                                                                                    
002716   e114     BNZ       0x2740                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002718   0e64     MOVLW     0x64           			two_stick_drive(p1_y , p2_y, &pwm01, &pwm02, 100);								//two stick drive   C:\FIRST\ATLcode\WorkHere\user_routines.c
00271a   6ee6     MOVWF     0xe6,0x0                                                                                        
00271c   0e5d     MOVLW     0x5d                                                                                            
00271e   6ee6     MOVWF     0xe6,0x0                                                                                        
002720   0e02     MOVLW     0x2                                                                                             
002722   6ee6     MOVWF     0xe6,0x0                                                                                        
002724   0e5c     MOVLW     0x5c                                                                                            
002726   6ee6     MOVWF     0xe6,0x0                                                                                        
002728   0e02     MOVLW     0x2                                                                                             
00272a   6ee6     MOVWF     0xe6,0x0                                                                                        
00272c   c27f     MOVFF     0x27f,0xfe6                                                                                     
00272e   ffe6                                                                                                               
002730   c27e     MOVFF     0x27e,0xfe6                                                                                     
002732   ffe6                                                                                                               
002734   ec58     CALL      0x8b0,0x0                                                                                       
002736   f004                                                                                                               
002738   6ef5     MOVWF     0xf5,0x0                                                                                        
00273a   0e07     MOVLW     0x7                                                                                             
00273c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00273e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			printf("drive:   p1_y = %d,  p2_y = %d\r pwm01 = %d,  pwm02 = %d\r\r", p1_y, p2_y, pwm01, pwm02); C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /**********************************End drive code**********************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*********************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*************************gear switching function******************/             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //();			//this has been changed to be called from the user_byte call												 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*************************feetContol function*************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //feetControl();		//this has been chagned to be called rom the user_byte call    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /************************pressure control function*****************/             C:\FIRST\ATLcode\WorkHere\user_routines.c
002740   5081     MOVF      0x81,0x0,0x0   pressure_control(PRESSURE_SENSOR);                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002742   0b10     ANDLW     0x10                                                                                            
002744   e001     BZ        0x2748                                                                                          
002746   0e01     MOVLW     0x1                                                                                             
002748   6ee6     MOVWF     0xe6,0x0                                                                                        
00274a   ec5e     CALL      0x14bc,0x0                                                                                      
00274c   f00a                                                                                                               
00274e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           /******************************************************************/             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************Gatherer function***************************/            C:\FIRST\ATLcode\WorkHere\user_routines.c
002750   da4d     RCALL     0x2bec         Six_Lines_of_Gatherer_Code();                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*******************************************************************/            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*************************USER BYTE ASSIGNING************************            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           These are bytes that are sent back to the operator controler. By using a drain program, C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           you are able to pull these numbers out of the radio packets and use excel to graph them.  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           It also gives you the ability to look at data recorded during a match at a later date so  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           that having the robot can be unnecessary. The below code will assign the values to the user bytes.  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Line by line comments should be unnecessary                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *********************************************************************/	          C:\FIRST\ATLcode\WorkHere\user_routines.c
002752   c299     MOVFF     0x299,0x25a         User_Byte1 = T_Packet_Data.mx;                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002754   f25a                                                                                                               
002756   c29a     MOVFF     0x29a,0x25b         User_Byte2 = T_Packet_Data.my;;                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002758   f25b                                                                                                               
00275a   0102     MOVLB     0x2            	 User_Byte4 = 0;	//clear all flags                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
00275c   6b71     CLRF      0x71,0x1                                                                                        
00275e   d820     RCALL     0x27a0         	 if (gearSwitch())                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002760   0900     IORLW     0x0                                                                                             
002762   e002     BZ        0x2768                                                                                          
002764   0102     MOVLB     0x2            		 User_Byte4 |= 1; /*indicate we're in high gear, or whatever gear out is */    C:\FIRST\ATLcode\WorkHere\user_routines.c
002766   8171     BSF       0x71,0x0,0x1                                                                                    
002768   a881     BTFSS     0x81,0x4,0x0   	 if (PRESSURE_SENSOR)                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
00276a   d002     BRA       0x2770                                                                                          
00276c   0102     MOVLB     0x2            		User_Byte4 |= 2; /*the compressor is on*/                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
00276e   8371     BSF       0x71,0x1,0x1                                                                                    
002770   0102     MOVLB     0x2            	 if (p3_sw_trig)                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002772   a97a     BTFSS     0x7a,0x4,0x1                                                                                    
002774   d002     BRA       0x277a                                                                                          
002776   0102     MOVLB     0x2            		User_Byte4 |= 4; /*Indicate ball trigger depressed*/                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002778   8571     BSF       0x71,0x2,0x1                                                                                    
00277a   0102     MOVLB     0x2            	 if (p4_sw_aux1)                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
00277c   ad7b     BTFSS     0x7b,0x6,0x1                                                                                    
00277e   d002     BRA       0x2784                                                                                          
002780   0102     MOVLB     0x2            		User_Byte4 |= 8; /*Indicate fire button depressed */                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002782   8771     BSF       0x71,0x3,0x1                                                                                    
002784   0102     MOVLB     0x2            	 User_Byte5 = rc_ana_in05; //slide pot on warp drive                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002786   0ea7     MOVLW     0xa7                                                                                            
002788   6f72     MOVWF     0x72,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	printf("Userbytes1 %d\r 2: %d\r 4: %d\r 5: %d\r", User_Byte1, User_Byte2, User_Byte4, User_Byte5); C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //warp_pulse();                                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /******************************************End user byte assigning**********************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00278a   0102     MOVLB     0x2            	if(PREPARE_TO_FIRE)						//are we prepared to just firing?                      C:\FIRST\ATLcode\WorkHere\user_routines.c
00278c   ad7b     BTFSS     0x7b,0x6,0x1                                                                                    
00278e   d002     BRA       0x2794                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002790   d851     RCALL     0x2834         		aimed_shot();						//get rdy!                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002792   d005     BRA       0x279e         	else                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002794   0102     MOVLB     0x2                    flywheel = 127;						//else turn the flywheel                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002796   0e7f     MOVLW     0x7f                                                                                            
002798   6f5f     MOVWF     0x5f,0x1                                                                                        
00279a   0103     MOVLB     0x3            		flywheel_adj_flag = PREP;                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
00279c   6b3e     CLRF      0x3e,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00279e   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /********************************End Default Routines******************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Created by: 	Eric Finn - General coding and debugging                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				Steven Shidlovsky - Assistance with code                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				Per - Mentor                                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Date modified:  1-15-2006                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				2-16-2006 (Sarah) function now returns whether we are in high or low gear    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Function name:  gearSwitch                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Parameters:     none                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Returns: 		relay1_fwd  = Switch to high gear                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		    	relay2_fwd  = Switch to low gear                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				gear_state  = what gear we're in                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Purpose: This function changes the gear of the robot.                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Notes:	 None                                                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           char gearSwitch(void)                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char whichout = 0;								//tells the program which output to use        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char hold = 0; 									//tells the program if the trigger is being held C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char gear_state;										//return value.  Tells program if we are in high gear or low gear C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           															//1 = out, 0 = in, 2 = no change                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if a trigger is pressed and output 0 is supposed to be on...                  C:\FIRST\ATLcode\WorkHere\user_routines.c
0027a0   0102     MOVLB     0x2            	if(p2_sw_trig && whichout == 0 && hold == 0 || p1_sw_trig && whichout == 0 && hold == 0) C:\FIRST\ATLcode\WorkHere\user_routines.c
0027a2   517b     MOVF      0x7b,0x0,0x1                                                                                    
0027a4   0b01     ANDLW     0x1                                                                                             
0027a6   e005     BZ        0x27b2                                                                                          
0027a8   0101     MOVLB     0x1                                                                                             
0027aa   51f2     MOVF      0xf2,0x0,0x1                                                                                    
0027ac   e102     BNZ       0x27b2                                                                                          
0027ae   51f3     MOVF      0xf3,0x0,0x1                                                                                    
0027b0   e009     BZ        0x27c4                                                                                          
0027b2   0102     MOVLB     0x2                                                                                             
0027b4   517a     MOVF      0x7a,0x0,0x1                                                                                    
0027b6   0b01     ANDLW     0x1                                                                                             
0027b8   e00d     BZ        0x27d4                                                                                          
0027ba   0101     MOVLB     0x1                                                                                             
0027bc   51f2     MOVF      0xf2,0x0,0x1                                                                                    
0027be   e10a     BNZ       0x27d4                                                                                          
0027c0   51f3     MOVF      0xf3,0x0,0x1                                                                                    
0027c2   e108     BNZ       0x27d4                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
0027c4   808d     BSF       0x8d,0x0,0x0   		gear_out = 1;	 									//turn it on...                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
0027c6   9091     BCF       0x91,0x0,0x0   		gear_in = 0; 										//turn output 2 off.                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
0027c8   0e01     MOVLW     0x1            		whichout = 1; 										//say that output 1 should be turned on next...        C:\FIRST\ATLcode\WorkHere\user_routines.c
0027ca   6ff2     MOVWF     0xf2,0x1                                                                                        
0027cc   6ff3     MOVWF     0xf3,0x1       		hold = 1; 											//tell program trigger is being held...                   C:\FIRST\ATLcode\WorkHere\user_routines.c
0027ce   0103     MOVLB     0x3            		gear_state = 1;										//tell program that gear is out                       C:\FIRST\ATLcode\WorkHere\user_routines.c
0027d0   6f3f     MOVWF     0x3f,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if a trigger is pressed and output 1 is supposed to be on...                  C:\FIRST\ATLcode\WorkHere\user_routines.c
0027d2   d02c     BRA       0x282c         	else if(p2_sw_trig && whichout == 1 && hold == 0 || p1_sw_trig && whichout == 1 && hold == 0) C:\FIRST\ATLcode\WorkHere\user_routines.c
0027d4   0102     MOVLB     0x2                                                                                             
0027d6   517b     MOVF      0x7b,0x0,0x1                                                                                    
0027d8   0b01     ANDLW     0x1                                                                                             
0027da   e005     BZ        0x27e6                                                                                          
0027dc   0101     MOVLB     0x1                                                                                             
0027de   05f2     DECF      0xf2,0x0,0x1                                                                                    
0027e0   e102     BNZ       0x27e6                                                                                          
0027e2   51f3     MOVF      0xf3,0x0,0x1                                                                                    
0027e4   e009     BZ        0x27f8                                                                                          
0027e6   0102     MOVLB     0x2                                                                                             
0027e8   517a     MOVF      0x7a,0x0,0x1                                                                                    
0027ea   0b01     ANDLW     0x1                                                                                             
0027ec   e00d     BZ        0x2808                                                                                          
0027ee   0101     MOVLB     0x1                                                                                             
0027f0   05f2     DECF      0xf2,0x0,0x1                                                                                    
0027f2   e10a     BNZ       0x2808                                                                                          
0027f4   51f3     MOVF      0xf3,0x0,0x1                                                                                    
0027f6   e108     BNZ       0x2808                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
0027f8   8091     BSF       0x91,0x0,0x0   		gear_in = 1; 										//turn output 1 on...                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
0027fa   908d     BCF       0x8d,0x0,0x0   		gear_out = 0; 										//turn output 0 off                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
0027fc   6bf2     CLRF      0xf2,0x1       		whichout = 0; 										//tell program that output 0 is supposed to be on...   C:\FIRST\ATLcode\WorkHere\user_routines.c
0027fe   0e01     MOVLW     0x1            		hold = 1; 											//tell program that trigger is held                       C:\FIRST\ATLcode\WorkHere\user_routines.c
002800   6ff3     MOVWF     0xf3,0x1                                                                                        
002802   0103     MOVLB     0x3            		gear_state = 0;										//tell program that gear is in                        C:\FIRST\ATLcode\WorkHere\user_routines.c
002804   6b3f     CLRF      0x3f,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if an output is on...                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
002806   d012     BRA       0x282c         	else if(gear_in == 1 || gear_out == 1)                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
002808   5091     MOVF      0x91,0x0,0x0                                                                                    
00280a   0b01     ANDLW     0x1                                                                                             
00280c   e103     BNZ       0x2814                                                                                          
00280e   508d     MOVF      0x8d,0x0,0x0                                                                                    
002810   0b01     ANDLW     0x1                                                                                             
002812   e003     BZ        0x281a                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//Turn both of the relays off                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
002814   9091     BCF       0x91,0x0,0x0   		gear_in = 0;                                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
002816   908d     BCF       0x8d,0x0,0x0   		gear_out = 0;                                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if the triggers are not held, and program thinks it is being held...          C:\FIRST\ATLcode\WorkHere\user_routines.c
002818   d009     BRA       0x282c         	else if(!p2_sw_trig && !p1_sw_trig)                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
00281a   0102     MOVLB     0x2                                                                                             
00281c   517b     MOVF      0x7b,0x0,0x1                                                                                    
00281e   0b01     ANDLW     0x1                                                                                             
002820   e105     BNZ       0x282c                                                                                          
002822   517a     MOVF      0x7a,0x0,0x1                                                                                    
002824   0b01     ANDLW     0x1                                                                                             
002826   e102     BNZ       0x282c                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//if both trigger buttons aren't being held, tell program it's not being held  C:\FIRST\ATLcode\WorkHere\user_routines.c
002828   0101     MOVLB     0x1            		hold = 0;										                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
00282a   6bf3     CLRF      0xf3,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	printf("Gear_state: %d\r", gear_state);                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
00282c   0103     MOVLB     0x3                return gear_state;                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
00282e   513f     MOVF      0x3f,0x0,0x1                                                                                    
002830   d000     BRA       0x2832                                                                                          
002832   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Created by: 	Steven Shidlovsky - General coding and debugging                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Date modified:                                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Function name:  aimed_shot                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Parameters:     none                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Returns: 		none                                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Purpose: To control horizontal aiming and flywheel speed,                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Notes:	 None                                                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\user_routines.c
002834   cfd9     MOVFF     0xfd9,0xfe6    void aimed_shot(void)                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002836   ffe6                                                                                                               
002838   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00283a   ffd9                                                                                                               
00283c   0e03     MOVLW     0x3                                                                                             
00283e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002840   0e1f     MOVLW     0x1f           unsigned char known_rps = 31;                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
002842   6edf     MOVWF     0xdf,0x0                                                                                        
                                           static unsigned char last_rps_calculation = 0;                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static unsigned char last_time_value = 0;                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char counter = 0;                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           int hold;                                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char firing = 0;                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static char counter2 = 0;                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*This is full fire mode*/                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
002844   0102     MOVLB     0x2            if(FIRE_MODE > 200)                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002846   5181     MOVF      0x81,0x0,0x1                                                                                    
002848   6e2b     MOVWF     0x2b,0x0                                                                                        
00284a   6a2c     CLRF      0x2c,0x0                                                                                        
00284c   342c     RLCF      0x2c,0x0,0x0                                                                                    
00284e   e204     BC        0x2858                                                                                          
002850   502b     MOVF      0x2b,0x0,0x0                                                                                    
002852   08c8     SUBLW     0xc8                                                                                            
002854   0e00     MOVLW     0x0                                                                                             
002856   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
002858   e20e     BC        0x2876                                                                                          
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
00285a   a97a     BTFSS     0x7a,0x4,0x1   	if(p3_sw_trig)		//if they are pressing the trigger                              C:\FIRST\ATLcode\WorkHere\user_routines.c
00285c   d005     BRA       0x2868                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
00285e   0e01     MOVLW     0x1            		shoot(1);		//keep the piston in                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002860   6ee6     MOVWF     0xe6,0x0                                                                                        
002862   d976     RCALL     0x2b50                                                                                          
002864   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002866   d003     BRA       0x286e         	else				//else                                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002868   6ae6     CLRF      0xe6,0x0       		shoot(0);		//u need to push the piston back out                                C:\FIRST\ATLcode\WorkHere\user_routines.c
00286a   d972     RCALL     0x2b50                                                                                          
00286c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
00286e   0102     MOVLB     0x2            	flywheel = BASE_FIRE_SPEED;	//the flywheel is at base fire speed                C:\FIRST\ATLcode\WorkHere\user_routines.c
002870   0ed7     MOVLW     0xd7                                                                                            
002872   6f5f     MOVWF     0x5f,0x1                                                                                        
                                           }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002874   d12b     BRA       0x2acc         else if(FIRE_MODE < 50)			//semiauto without sensor                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002876   0e32     MOVLW     0x32                                                                                            
002878   5d81     SUBWF     0x81,0x0,0x1                                                                                    
00287a   e23e     BC        0x28f8                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
00287c   0102     MOVLB     0x2            		flywheel = BASE_FIRE_SPEED;                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
00287e   0ed7     MOVLW     0xd7                                                                                            
002880   6f5f     MOVWF     0x5f,0x1                                                                                        
002882   0102     MOVLB     0x2            		if(p3_sw_trig && !firing)						//is the fire trigger pulled?                   C:\FIRST\ATLcode\WorkHere\user_routines.c
002884   517a     MOVF      0x7a,0x0,0x1                                                                                    
002886   0b10     ANDLW     0x10                                                                                            
002888   e005     BZ        0x2894                                                                                          
00288a   0101     MOVLB     0x1                                                                                             
00288c   51f7     MOVF      0xf7,0x0,0x1                                                                                    
00288e   e102     BNZ       0x2894                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002890   0e01     MOVLW     0x1            			firing = 1;									//start firing                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002892   6ff7     MOVWF     0xf7,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002894   0101     MOVLB     0x1            		if(firing)										//are we firing?                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002896   51f7     MOVF      0xf7,0x0,0x1                                                                                    
002898   e02e     BZ        0x28f6                                                                                          
                                           		{	                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
00289a   2bf8     INCF      0xf8,0x1,0x1   			counter2++;									//add one to the counter                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
00289c   0e28     MOVLW     0x28           			if(counter2 < 40)							//if the counter is less than 40                      C:\FIRST\ATLcode\WorkHere\user_routines.c
00289e   6ee7     MOVWF     0xe7,0x0                                                                                        
0028a0   19f8     XORWF     0xf8,0x0,0x1                                                                                    
0028a2   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0028a4   d002     BRA       0x28aa                                                                                          
0028a6   34e7     RLCF      0xe7,0x0,0x0                                                                                    
0028a8   d002     BRA       0x28ae                                                                                          
0028aa   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0028ac   5df8     SUBWF     0xf8,0x0,0x1                                                                                    
0028ae   e205     BC        0x28ba                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
0028b0   0e01     MOVLW     0x1            				shoot(1);						//let balls through                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
0028b2   6ee6     MOVWF     0xe6,0x0                                                                                        
0028b4   d94d     RCALL     0x2b50                                                                                          
0028b6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
0028b8   d01e     BRA       0x28f6         			else if (counter2 < 80)                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
0028ba   0e50     MOVLW     0x50                                                                                            
0028bc   6ee7     MOVWF     0xe7,0x0                                                                                        
0028be   19f8     XORWF     0xf8,0x0,0x1                                                                                    
0028c0   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0028c2   d002     BRA       0x28c8                                                                                          
0028c4   34e7     RLCF      0xe7,0x0,0x0                                                                                    
0028c6   d002     BRA       0x28cc                                                                                          
0028c8   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0028ca   5df8     SUBWF     0xf8,0x0,0x1                                                                                    
0028cc   e207     BC        0x28dc                                                                                          
                                           				 {                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
0028ce   6ae6     CLRF      0xe6,0x0       						shoot(0);				//close off the flow of balls                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
0028d0   d93f     RCALL     0x2b50                                                                                          
0028d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0028d4   0102     MOVLB     0x2            						flywheel = BASE_FIRE_SPEED; //speed up the flywheel                        C:\FIRST\ATLcode\WorkHere\user_routines.c
0028d6   0ed7     MOVLW     0xd7                                                                                            
0028d8   6f5f     MOVWF     0x5f,0x1                                                                                        
                                           				 }                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
0028da   d00d     BRA       0x28f6         				else if(counter2 > 80)                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
0028dc   0e50     MOVLW     0x50                                                                                            
0028de   6ee7     MOVWF     0xe7,0x0                                                                                        
0028e0   19f8     XORWF     0xf8,0x0,0x1                                                                                    
0028e2   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0028e4   d002     BRA       0x28ea                                                                                          
0028e6   35f8     RLCF      0xf8,0x0,0x1                                                                                    
0028e8   d003     BRA       0x28f0                                                                                          
0028ea   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0028ec   80d8     BSF       0xd8,0x0,0x0                                                                                    
0028ee   55f8     SUBFWB    0xf8,0x0,0x1                                                                                    
0028f0   e202     BC        0x28f6                                                                                          
                                           					{                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
0028f2   6bf8     CLRF      0xf8,0x1       						counter2 = 0;					//reset counter                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
0028f4   6bf7     CLRF      0xf7,0x1       						firing = 0;						//we are done firing                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           					}                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 1 //if 1 then the flywheel sensor works, if 0 it is broken                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*this is an experimental mode in the event that we have time to make it work*/  C:\FIRST\ATLcode\WorkHere\user_routines.c
0028f6   d0ea     BRA       0x2acc         else if(FIRE_MODE < 200 && FIRE_MODE > 50)                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
0028f8   5181     MOVF      0x81,0x0,0x1                                                                                    
0028fa   6e2b     MOVWF     0x2b,0x0                                                                                        
0028fc   6a2c     CLRF      0x2c,0x0                                                                                        
0028fe   90d8     BCF       0xd8,0x0,0x0                                                                                    
002900   502c     MOVF      0x2c,0x0,0x0                                                                                    
002902   e604     BN        0x290c                                                                                          
002904   0ec8     MOVLW     0xc8                                                                                            
002906   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
002908   0e00     MOVLW     0x0                                                                                             
00290a   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
00290c   e301     BNC       0x2910                                                                                          
00290e   d0de     BRA       0x2acc                                                                                          
002910   5181     MOVF      0x81,0x0,0x1                                                                                    
002912   0832     SUBLW     0x32                                                                                            
002914   e301     BNC       0x2918                                                                                          
002916   d0da     BRA       0x2acc                                                                                          
                                           {	                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             /*Will use full auto but can be changed easily if necessary to semiauto*/      C:\FIRST\ATLcode\WorkHere\user_routines.c
002918   a97a     BTFSS     0x7a,0x4,0x1   	if(p3_sw_trig)                                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
00291a   d005     BRA       0x2926                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
00291c   0e01     MOVLW     0x1            		shoot(1);                                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
00291e   6ee6     MOVWF     0xe6,0x0                                                                                        
002920   d917     RCALL     0x2b50                                                                                          
002922   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002924   d005     BRA       0x2930         	else                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002926   6ae6     CLRF      0xe6,0x0       		shoot(0);                                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
002928   d913     RCALL     0x2b50                                                                                          
00292a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00292c   0103     MOVLB     0x3            		flywheel_adj_flag = PREP;                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
00292e   6b3e     CLRF      0x3e,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002930   0e01     MOVLW     0x1            		if(timer_data(1,1) != last_time_value)					//do this only every second for sample rate C:\FIRST\ATLcode\WorkHere\user_routines.c
002932   6ee6     MOVWF     0xe6,0x0                                                                                        
002934   6ee6     MOVWF     0xe6,0x0                                                                                        
002936   ece8     CALL      0x13d0,0x0                                                                                      
002938   f009                                                                                                               
00293a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00293c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00293e   cff3     MOVFF     0xff3,0x2b                                                                                      
002940   f02b                                                                                                               
002942   cff4     MOVFF     0xff4,0x2c                                                                                      
002944   f02c                                                                                                               
002946   0101     MOVLB     0x1                                                                                             
002948   51f5     MOVF      0xf5,0x0,0x1                                                                                    
00294a   6e2d     MOVWF     0x2d,0x0                                                                                        
00294c   6a2e     CLRF      0x2e,0x0                                                                                        
00294e   502d     MOVF      0x2d,0x0,0x0                                                                                    
002950   182b     XORWF     0x2b,0x0,0x0                                                                                    
002952   e102     BNZ       0x2958                                                                                          
002954   502e     MOVF      0x2e,0x0,0x0                                                                                    
002956   182c     XORWF     0x2c,0x0,0x0                                                                                    
002958   e101     BNZ       0x295c                                                                                          
00295a   d0b7     BRA       0x2aca                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
00295c   0e01     MOVLW     0x1            				last_time_value = timer_data(1,1);                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
00295e   6ee6     MOVWF     0xe6,0x0                                                                                        
002960   6ee6     MOVWF     0xe6,0x0                                                                                        
002962   ece8     CALL      0x13d0,0x0                                                                                      
002964   f009                                                                                                               
002966   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002968   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00296a   cff3     MOVFF     0xff3,0x1f5                                                                                     
00296c   f1f5                                                                                                               
00296e   98f0     BCF       0xf0,0x4,0x0   				INTCON3bits.INT2IE = 0;						//turns sensor interrupt off to prevent more data from coming in C:\FIRST\ATLcode\WorkHere\user_routines.c
002970   0e01     MOVLW     0x1            				last_rps_calculation = rps(1);				//determine what the rps of the wheel is from the rps function C:\FIRST\ATLcode\WorkHere\user_routines.c
002972   6ee6     MOVWF     0xe6,0x0                                                                                        
002974   d8b1     RCALL     0x2ad8                                                                                          
002976   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002978   c01b     MOVFF     0x1b,0x2b                                                                                       
00297a   f02b                                                                                                               
00297c   c01c     MOVFF     0x1c,0x2c                                                                                       
00297e   f02c                                                                                                               
002980   c01d     MOVFF     0x1d,0x2d                                                                                       
002982   f02d                                                                                                               
002984   c01e     MOVFF     0x1e,0x2e                                                                                       
002986   f02e                                                                                                               
002988   c02b     MOVFF     0x2b,0x1c                                                                                       
00298a   f01c                                                                                                               
00298c   c02c     MOVFF     0x2c,0x1d                                                                                       
00298e   f01d                                                                                                               
002990   c02d     MOVFF     0x2d,0x1e                                                                                       
002992   f01e                                                                                                               
002994   c02e     MOVFF     0x2e,0x1f                                                                                       
002996   f01f                                                                                                               
002998   ec52     CALL      0x4ca4,0x0                                                                                      
00299a   f026                                                                                                               
00299c   c01e     MOVFF     0x1e,0x1f4                                                                                      
00299e   f1f4                                                                                                               
0029a0   c1f4     MOVFF     0x1f4,0x270    				User_Byte3 = last_rps_calculation;			//assign value of user byte             C:\FIRST\ATLcode\WorkHere\user_routines.c
0029a2   f270                                                                                                               
0029a4   0e02     MOVLW     0x2            				rps(2);										//reset the counter in the rps function                     C:\FIRST\ATLcode\WorkHere\user_routines.c
0029a6   6ee6     MOVWF     0xe6,0x0                                                                                        
0029a8   d897     RCALL     0x2ad8                                                                                          
0029aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0029ac   0e02     MOVLW     0x2            				timer_data(1,2);							//reset the timer                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
0029ae   6ee6     MOVWF     0xe6,0x0                                                                                        
0029b0   0e01     MOVLW     0x1                                                                                             
0029b2   6ee6     MOVWF     0xe6,0x0                                                                                        
0029b4   ece8     CALL      0x13d0,0x0                                                                                      
0029b6   f009                                                                                                               
0029b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0029ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0029bc   c33e     MOVFF     0x33e,0x2b     				printf("\rrps is %d flywheel %d case %d", last_rps_calculation, flywheel, flywheel_adj_flag); C:\FIRST\ATLcode\WorkHere\user_routines.c
0029be   f02b                                                                                                               
0029c0   6a2c     CLRF      0x2c,0x0                                                                                        
0029c2   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
0029c4   682c     SETF      0x2c,0x0                                                                                        
0029c6   c02b     MOVFF     0x2b,0xfe6                                                                                      
0029c8   ffe6                                                                                                               
0029ca   c02c     MOVFF     0x2c,0xfe6                                                                                      
0029cc   ffe6                                                                                                               
0029ce   0102     MOVLB     0x2                                                                                             
0029d0   515f     MOVF      0x5f,0x0,0x1                                                                                    
0029d2   6ee6     MOVWF     0xe6,0x0                                                                                        
0029d4   6ae6     CLRF      0xe6,0x0                                                                                        
0029d6   0101     MOVLB     0x1                                                                                             
0029d8   51f4     MOVF      0xf4,0x0,0x1                                                                                    
0029da   6ee6     MOVWF     0xe6,0x0                                                                                        
0029dc   6ae6     CLRF      0xe6,0x0                                                                                        
0029de   0eb6     MOVLW     0xb6                                                                                            
0029e0   6e2d     MOVWF     0x2d,0x0                                                                                        
0029e2   0e54     MOVLW     0x54                                                                                            
0029e4   6e2e     MOVWF     0x2e,0x0                                                                                        
0029e6   6a2f     CLRF      0x2f,0x0                                                                                        
0029e8   c02d     MOVFF     0x2d,0xfe6                                                                                      
0029ea   ffe6                                                                                                               
0029ec   c02e     MOVFF     0x2e,0xfe6                                                                                      
0029ee   ffe6                                                                                                               
0029f0   c02f     MOVFF     0x2f,0xfe6                                                                                      
0029f2   ffe6                                                                                                               
0029f4   ecfd     CALL      0x57fa,0x0                                                                                      
0029f6   f02b                                                                                                               
0029f8   6ef5     MOVWF     0xf5,0x0                                                                                        
0029fa   0e09     MOVLW     0x9                                                                                             
0029fc   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0029fe   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002a00   0103     MOVLB     0x3            				switch(flywheel_adj_flag)					//switch this flag                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002a02   513e     MOVF      0x3e,0x0,0x1                                                                                    
002a04   0a01     XORLW     0x1                                                                                             
002a06   e019     BZ        0x2a3a                                                                                          
002a08   0a01     XORLW     0x1                                                                                             
002a0a   e001     BZ        0x2a0e                                                                                          
002a0c   d05d     BRA       0x2ac8                                                                                          
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				case PREP:									//case PREP                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002a0e   0102     MOVLB     0x2            					flywheel = BASE_FIRE_SPEED;				//set the flywheel to BASE_FIRE_SPEED        C:\FIRST\ATLcode\WorkHere\user_routines.c
002a10   0ed7     MOVLW     0xd7                                                                                            
002a12   6f5f     MOVWF     0x5f,0x1                                                                                        
002a14   0e0c     MOVLW     0xc            					if(counter > 12)							//wiat for half a second                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002a16   0101     MOVLB     0x1                                                                                             
002a18   6ee7     MOVWF     0xe7,0x0                                                                                        
002a1a   19f6     XORWF     0xf6,0x0,0x1                                                                                    
002a1c   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
002a1e   d002     BRA       0x2a24                                                                                          
002a20   35f6     RLCF      0xf6,0x0,0x1                                                                                    
002a22   d003     BRA       0x2a2a                                                                                          
002a24   50e7     MOVF      0xe7,0x0,0x0                                                                                    
002a26   80d8     BSF       0xd8,0x0,0x0                                                                                    
002a28   55f6     SUBFWB    0xf6,0x0,0x1                                                                                    
002a2a   e205     BC        0x2a36                                                                                          
                                           					{                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002a2c   0103     MOVLB     0x3            						flywheel_adj_flag = FINE_ADJ;		//move to fine adj                          C:\FIRST\ATLcode\WorkHere\user_routines.c
002a2e   0e01     MOVLW     0x1                                                                                             
002a30   6f3e     MOVWF     0x3e,0x1                                                                                        
002a32   0101     MOVLB     0x1            						counter = 0;						//reset counter                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
002a34   6bf6     CLRF      0xf6,0x1                                                                                        
                                           					}                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002a36   2bf6     INCF      0xf6,0x1,0x1   					counter++;								//add one to counter                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
002a38   d047     BRA       0x2ac8         				break;										//add one to counter                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				case FINE_ADJ:                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002a3a   0101     MOVLB     0x1            					if(last_rps_calculation == 0)			//if the interrupt has broken               C:\FIRST\ATLcode\WorkHere\user_routines.c
002a3c   51f4     MOVF      0xf4,0x0,0x1                                                                                    
002a3e   e114     BNZ       0x2a68                                                                                          
                                           					{                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002a40   0ea4     MOVLW     0xa4           						printf("\rERROR! NO INPUT!");		//error has occureed                        C:\FIRST\ATLcode\WorkHere\user_routines.c
002a42   6e2b     MOVWF     0x2b,0x0                                                                                        
002a44   0e54     MOVLW     0x54                                                                                            
002a46   6e2c     MOVWF     0x2c,0x0                                                                                        
002a48   6a2d     CLRF      0x2d,0x0                                                                                        
002a4a   c02b     MOVFF     0x2b,0xfe6                                                                                      
002a4c   ffe6                                                                                                               
002a4e   c02c     MOVFF     0x2c,0xfe6                                                                                      
002a50   ffe6                                                                                                               
002a52   c02d     MOVFF     0x2d,0xfe6                                                                                      
002a54   ffe6                                                                                                               
002a56   ecfd     CALL      0x57fa,0x0                                                                                      
002a58   f02b                                                                                                               
002a5a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002a5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002a5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002a60   0102     MOVLB     0x2            						flywheel = BASE_FIRE_SPEED;                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002a62   0ed7     MOVLW     0xd7                                                                                            
002a64   6f5f     MOVWF     0x5f,0x1                                                                                        
                                           					}                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002a66   d022     BRA       0x2aac         					else                                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           					{                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002a68   51f4     MOVF      0xf4,0x0,0x1   						if((known_rps - last_rps_calculation) > ALLOWED_Y_ERROR)                   C:\FIRST\ATLcode\WorkHere\user_routines.c
002a6a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a6c   0802     SUBLW     0x2                                                                                             
002a6e   e21e     BC        0x2aac                                                                                          
                                           						{                                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
002a70   51f4     MOVF      0xf4,0x0,0x1   							hold = (known_rps - last_rps_calculation);	//add a small amount for fine adjustment				 C:\FIRST\ATLcode\WorkHere\user_routines.c
002a72   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002a74   6ee6     MOVWF     0xe6,0x0                                                                                        
002a76   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002a78   0f01     ADDLW     0x1                                                                                             
002a7a   6ee9     MOVWF     0xe9,0x0                                                                                        
002a7c   cfda     MOVFF     0xfda,0xfea                                                                                     
002a7e   ffea                                                                                                               
002a80   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002a82   50e7     MOVF      0xe7,0x0,0x0                                                                                    
002a84   6eee     MOVWF     0xee,0x0                                                                                        
002a86   6aed     CLRF      0xed,0x0                                                                                        
002a88   0e01     MOVLW     0x1            							if(hold < 5)                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002a8a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002a8c   f02b                                                                                                               
002a8e   0e02     MOVLW     0x2                                                                                             
002a90   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002a92   f02c                                                                                                               
002a94   90d8     BCF       0xd8,0x0,0x0                                                                                    
002a96   502c     MOVF      0x2c,0x0,0x0                                                                                    
002a98   e604     BN        0x2aa2                                                                                          
002a9a   0e05     MOVLW     0x5                                                                                             
002a9c   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
002a9e   0e00     MOVLW     0x0                                                                                             
002aa0   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
002aa2   e204     BC        0x2aac                                                                                          
                                           							{                                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
002aa4   0e01     MOVLW     0x1            								flywheel += hold;                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
002aa6   50db     MOVF      0xdb,0x0,0x0                                                                                    
002aa8   0102     MOVLB     0x2                                                                                             
002aaa   275f     ADDWF     0x5f,0x1,0x1                                                                                    
                                           							}                                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           							                                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           						}                                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           					}                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002aac   0102     MOVLB     0x2            					if(flywheel > 255)                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
002aae   515f     MOVF      0x5f,0x0,0x1                                                                                    
002ab0   6e2b     MOVWF     0x2b,0x0                                                                                        
002ab2   6a2c     CLRF      0x2c,0x0                                                                                        
002ab4   342c     RLCF      0x2c,0x0,0x0                                                                                    
002ab6   e204     BC        0x2ac0                                                                                          
002ab8   502b     MOVF      0x2b,0x0,0x0                                                                                    
002aba   08ff     SUBLW     0xff                                                                                            
002abc   0e00     MOVLW     0x0                                                                                             
002abe   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
002ac0   e202     BC        0x2ac6                                                                                          
                                           					{                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002ac2   0efe     MOVLW     0xfe           						flywheel = 254;                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002ac4   6f5f     MOVWF     0x5f,0x1                                                                                        
                                           					}                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002ac6   d000     BRA       0x2ac8         				break;                                                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}	                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002ac8   d001     BRA       0x2acc         		else                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002aca   88f0     BSF       0xf0,0x4,0x0   			INTCON3bits.INT2IE = 1;	                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}	                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //		printf("\rlast rps %d looking for %d flywheel %d CASE %d", last_rps_calculation, known_rps, flywheel, flywheel_adj_flag);		 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	    //the center for x is 79                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		/*is the x coordinate from the camera within the allowed error of the center?*/	 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002acc   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002ace   ffe1                                                                                                               
002ad0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ad2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002ad4   ffd9                                                                                                               
002ad6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Created by: 	Steven Shidlovsky - General coding and debugging                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				Per - Mentor                                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Date modified:  2-04-2006                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Function name:  rps                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Parameters:     char flag   = determines what operation that needs to be done    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Returns: 		The rps value of the wheel                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Purpose: To determine the rps of the flywheel                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Notes:	 This is intended to be used with an interrupt. Due to change in how we are going to input the C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		 rps, this function will not likely be used.                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\user_routines.c
002ad8   cfd9     MOVFF     0xfd9,0xfe6    float rps(char flag)                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002ada   ffe6                                                                                                               
002adc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002ade   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 1                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static unsigned int clicks = 0;					    //number of hits we have gotten on the interrupt C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002ae0   0efe     MOVLW     0xfe               switch(flag)									//determine what operation do perform                   C:\FIRST\ATLcode\WorkHere\user_routines.c
002ae2   50db     MOVF      0xdb,0x0,0x0                                                                                    
002ae4   0a02     XORLW     0x2                                                                                             
002ae6   e02c     BZ        0x2b40                                                                                          
002ae8   0a03     XORLW     0x3                                                                                             
002aea   e008     BZ        0x2afc                                                                                          
002aec   0a01     XORLW     0x1                                                                                             
002aee   e001     BZ        0x2af2                                                                                          
002af0   d02b     BRA       0x2b48                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	case 0:											//is the flag equal to 0?                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
002af2   0101     MOVLB     0x1            		clicks++;							//add one to the clicks value                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
002af4   2bf9     INCF      0xf9,0x1,0x1                                                                                    
002af6   0e00     MOVLW     0x0                                                                                             
002af8   23fa     ADDWFC    0xfa,0x1,0x1                                                                                    
                                           		//printf("\rclick");                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002afa   d026     BRA       0x2b48         		break;                                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	case 1:											//is it 1?                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
002afc   c1f9     MOVFF     0x1f9,0x2f     		return((clicks/FLYWHEEL_TRANS) * 4);// * 3.167);		   			//the equation is (number of clicks / clicks per rotation) * circucmfirence of wheel in feet) C:\FIRST\ATLcode\WorkHere\user_routines.c
002afe   f02f                                                                                                               
002b00   c1fa     MOVFF     0x1fa,0x30                                                                                      
002b02   f030                                                                                                               
002b04   0e02     MOVLW     0x2                                                                                             
002b06   90d8     BCF       0xd8,0x0,0x0                                                                                    
002b08   362f     RLCF      0x2f,0x1,0x0                                                                                    
002b0a   3630     RLCF      0x30,0x1,0x0                                                                                    
002b0c   06e8     DECF      0xe8,0x1,0x0                                                                                    
002b0e   e1fb     BNZ       0x2b06                                                                                          
002b10   c02f     MOVFF     0x2f,0x1d                                                                                       
002b12   f01d                                                                                                               
002b14   c030     MOVFF     0x30,0x1e                                                                                       
002b16   f01e                                                                                                               
002b18   ec98     CALL      0x4b30,0x0                                                                                      
002b1a   f025                                                                                                               
002b1c   c01c     MOVFF     0x1c,0x2b                                                                                       
002b1e   f02b                                                                                                               
002b20   c01d     MOVFF     0x1d,0x2c                                                                                       
002b22   f02c                                                                                                               
002b24   c01e     MOVFF     0x1e,0x2d                                                                                       
002b26   f02d                                                                                                               
002b28   c01f     MOVFF     0x1f,0x2e                                                                                       
002b2a   f02e                                                                                                               
002b2c   c02b     MOVFF     0x2b,0x1b                                                                                       
002b2e   f01b                                                                                                               
002b30   c02c     MOVFF     0x2c,0x1c                                                                                       
002b32   f01c                                                                                                               
002b34   c02d     MOVFF     0x2d,0x1d                                                                                       
002b36   f01d                                                                                                               
002b38   c02e     MOVFF     0x2e,0x1e                                                                                       
002b3a   f01e                                                                                                               
002b3c   d005     BRA       0x2b48                                                                                          
002b3e   d004     BRA       0x2b48         	break;                                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	case 2:											//is the flag 2?                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002b40   0101     MOVLB     0x1            		clicks = 0;									//reset the click value                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
002b42   6bf9     CLRF      0xf9,0x1                                                                                        
002b44   6bfa     CLRF      0xfa,0x1                                                                                        
002b46   d000     BRA       0x2b48         	break;                                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002b48   52e5     MOVF      0xe5,0x1,0x0   }	                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002b4a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002b4c   ffd9                                                                                                               
002b4e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Created by: 	Steven Shidlovsky - General coding and debugging                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Date modified:  3-3-2006                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Function name:  shoot                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Parameters:     char flag   = determines what operation that needs to be done    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Returns: 		nothing                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Purpose: To operate the solinod that is on the shooter                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Notes:	 Able to be used anywhere as long as flag is called properly. Call flag 1 first than flag 0 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\user_routines.c
002b50   cfd9     MOVFF     0xfd9,0xfe6    void shoot(char flag)                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002b52   ffe6                                                                                                               
002b54   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002b56   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char whichout = 0;								//tells the program which output to use        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char hold = 0; 									//tells the program if the trigger is being held C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char prev_flag;														//1 = out, 0 = in, 2 = no change            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if a trigger is pressed and output 0 is supposed to be on...                  C:\FIRST\ATLcode\WorkHere\user_routines.c
002b58   0101     MOVLB     0x1            	if(whichout == 0 && hold == 0 && flag == 1)                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
002b5a   51fb     MOVF      0xfb,0x0,0x1                                                                                    
002b5c   e10b     BNZ       0x2b74                                                                                          
002b5e   51fc     MOVF      0xfc,0x0,0x1                                                                                    
002b60   e109     BNZ       0x2b74                                                                                          
002b62   0efe     MOVLW     0xfe                                                                                            
002b64   04db     DECF      0xdb,0x0,0x0                                                                                    
002b66   e106     BNZ       0x2b74                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002b68   8e8c     BSF       0x8c,0x7,0x0   		loader_out = 1;	 									//turn it on...                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
002b6a   9091     BCF       0x91,0x0,0x0   		loader_in = 0; 										//turn output 2 off.                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
002b6c   0e01     MOVLW     0x1            		whichout = 1; 										//say that output 1 should be turned on next...        C:\FIRST\ATLcode\WorkHere\user_routines.c
002b6e   6ffb     MOVWF     0xfb,0x1                                                                                        
002b70   6ffc     MOVWF     0xfc,0x1       		hold = 1; 											//tell program trigger is being held...                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if a trigger is pressed and output 1 is supposed to be on...                  C:\FIRST\ATLcode\WorkHere\user_routines.c
002b72   d01d     BRA       0x2bae         	else if(whichout == 1 && hold == 0 && flag == 0)                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002b74   05fb     DECF      0xfb,0x0,0x1                                                                                    
002b76   e10b     BNZ       0x2b8e                                                                                          
002b78   51fc     MOVF      0xfc,0x0,0x1                                                                                    
002b7a   e109     BNZ       0x2b8e                                                                                          
002b7c   0efe     MOVLW     0xfe                                                                                            
002b7e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002b80   e106     BNZ       0x2b8e                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002b82   8091     BSF       0x91,0x0,0x0   		loader_in = 1; 										//turn output 1 on...                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
002b84   9e8c     BCF       0x8c,0x7,0x0   		loader_out = 0; 										//turn output 0 off                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
002b86   6bfb     CLRF      0xfb,0x1       		whichout = 0; 										//tell program that output 0 is supposed to be on...   C:\FIRST\ATLcode\WorkHere\user_routines.c
002b88   0e01     MOVLW     0x1            		hold = 1; 											//tell program that trigger is held                       C:\FIRST\ATLcode\WorkHere\user_routines.c
002b8a   6ffc     MOVWF     0xfc,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if an output is on...                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
002b8c   d010     BRA       0x2bae         	else if(loader_in == 1 || loader_out == 1)                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
002b8e   5091     MOVF      0x91,0x0,0x0                                                                                    
002b90   0b01     ANDLW     0x1                                                                                             
002b92   e103     BNZ       0x2b9a                                                                                          
002b94   508c     MOVF      0x8c,0x0,0x0                                                                                    
002b96   0b80     ANDLW     0x80                                                                                            
002b98   e003     BZ        0x2ba0                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//Turn both of the relays off                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
002b9a   9091     BCF       0x91,0x0,0x0   		loader_in = 0;                                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
002b9c   9e8c     BCF       0x8c,0x7,0x0   		loader_out = 0;                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if the triggers are not held, and program thinks it is being held...          C:\FIRST\ATLcode\WorkHere\user_routines.c
002b9e   d007     BRA       0x2bae         	else if(prev_flag != flag)                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
002ba0   0efe     MOVLW     0xfe                                                                                            
002ba2   50db     MOVF      0xdb,0x0,0x0                                                                                    
002ba4   0103     MOVLB     0x3                                                                                             
002ba6   5d40     SUBWF     0x40,0x0,0x1                                                                                    
002ba8   e002     BZ        0x2bae                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//if both trigger buttons aren't being held, tell program it's not being held  C:\FIRST\ATLcode\WorkHere\user_routines.c
002baa   0101     MOVLB     0x1            		hold = 0;										                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002bac   6bfc     CLRF      0xfc,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //printf("\rflag %d prev_flag %d, in %d out %d hold %d", flag, prev_flag, loader_in, loader_out, hold); C:\FIRST\ATLcode\WorkHere\user_routines.c
002bae   0efe     MOVLW     0xfe           prev_flag = flag;                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002bb0   cfdb     MOVFF     0xfdb,0x340                                                                                     
002bb2   f340                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           //printf("\rfiring %d, loader %d, fire mode %d flywheel %d mode in %d", firing, loader, FIRE_MODE, flywheel, mode_in); C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if SENSOR_DEAD                                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	User_Byte3 = flywheel;                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #else                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002bb4   0e01     MOVLW     0x1            	User_Byte3 = rps(1);                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002bb6   6ee6     MOVWF     0xe6,0x0                                                                                        
002bb8   df8f     RCALL     0x2ad8                                                                                          
002bba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002bbc   c01b     MOVFF     0x1b,0x2b                                                                                       
002bbe   f02b                                                                                                               
002bc0   c01c     MOVFF     0x1c,0x2c                                                                                       
002bc2   f02c                                                                                                               
002bc4   c01d     MOVFF     0x1d,0x2d                                                                                       
002bc6   f02d                                                                                                               
002bc8   c01e     MOVFF     0x1e,0x2e                                                                                       
002bca   f02e                                                                                                               
002bcc   c02b     MOVFF     0x2b,0x1c                                                                                       
002bce   f01c                                                                                                               
002bd0   c02c     MOVFF     0x2c,0x1d                                                                                       
002bd2   f01d                                                                                                               
002bd4   c02d     MOVFF     0x2d,0x1e                                                                                       
002bd6   f01e                                                                                                               
002bd8   c02e     MOVFF     0x2e,0x1f                                                                                       
002bda   f01f                                                                                                               
002bdc   ec52     CALL      0x4ca4,0x0                                                                                      
002bde   f026                                                                                                               
002be0   c01e     MOVFF     0x1e,0x270                                                                                      
002be2   f270                                                                                                               
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002be4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002be6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002be8   ffd9                                                                                                               
002bea   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Created by: 	Pat - General coding and debugging                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Date modified:  2-02-2006                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				2-16-2006 (Sarah) returns whether the feet are down or up                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Function name:  feetControl                                                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Parameters:     none                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Returns: 		foot_down  = Push foot down                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		    	foot_up    = Pull foot in                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				foot_state = whether foot is in or out                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Purpose: This function changes the state of the foot on the robot.               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Notes:	 None                                                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 0 //we're not using feet                                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           char feetControl(void)                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char whichfout = 0;								//tells the program which output to use       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char fhold = 0; 									//tells the program if the trigger is being held C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char foot_state;										//return value.  Tells whether foot is down or up C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           															//1 if up, 0 if down                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if a trigger is pressed and output 0 is supposed to be on...                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	if(p1_sw_top && whichfout == 0 && fhold == 0 || p2_sw_top && whichfout == 0 && fhold == 0) C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		foot_up = 1;	 									//turn it on...                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		foot_down = 0; 										//turn output 2 off.                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		whichfout = 1; 										//say that output 1 should be turned on next...       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		fhold = 1; 											//tell program trigger is being held...                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		foot_state = 1;										//tell program foot is up                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if a trigger is pressed and output 1 is supposed to be on...                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	else if(p1_sw_top && whichfout == 1 && fhold == 0 || p2_sw_top && whichfout == 1 && fhold == 0) C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		foot_down = 1; 										//turn output 1 on...                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		foot_up = 0; 										//turn output 0 off                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		whichfout = 0; 										//tell program that output 0 is supposed to be on...  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		fhold = 1; 											//tell program that trigger is held                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		foot_state = 0;										//tell program that foot is down                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if an output is on...                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	else if(foot_down == 1 || foot_up == 1)                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//Turn both of the relays off                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		foot_down = 0;                                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		foot_up = 0;                                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//if the triggers are not held, and program thinks it is being held...          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	else if(!p1_sw_top && !p2_sw_top)                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//if both trigger buttons aren't bein held, tell program it's not being held   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		fhold = 0;                                                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                            //printf("foot_state: %d\r", foot_state);                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                            return foot_state;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Created by: 	Robert Harris - General coding and debugging                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Date modified:  2-10-2006                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Function name:  Six_Lines_of_Gatherer_Code                                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Parameters:     none                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Returns: 		None                                                                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Purpose: This operates the gatherer motor on the robot                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Notes:	 None                                                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           void Six_Lines_of_Gatherer_Code(void)                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*This code checks the the switch that set set to an anolog value                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                             to determine what action needs to be done*/                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           printf("\rinput is %d motor is %d\r", three_position_switch_for_gatherer_motor, gatherer_motor); C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002bec   0102     MOVLB     0x2            gatherer_motor = 127;                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002bee   0e7f     MOVLW     0x7f                                                                                            
002bf0   6f66     MOVWF     0x66,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002bf2   0e1e     MOVLW     0x1e               if (three_position_switch_for_gatherer_motor < 30 || p4_wheel < 30)          C:\FIRST\ATLcode\WorkHere\user_routines.c
002bf4   0102     MOVLB     0x2                                                                                             
002bf6   5d85     SUBWF     0x85,0x0,0x1                                                                                    
002bf8   e303     BNC       0x2c00                                                                                          
002bfa   0e1e     MOVLW     0x1e                                                                                            
002bfc   5d89     SUBWF     0x89,0x0,0x1                                                                                    
002bfe   e204     BC        0x2c08                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002c00   0102     MOVLB     0x2                    gatherer_motor = GATHER_MOTOR_IN;                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
002c02   0efe     MOVLW     0xfe                                                                                            
002c04   6f66     MOVWF     0x66,0x1                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
002c06   d01a     BRA       0x2c3c         	else if(three_position_switch_for_gatherer_motor > 200 || p4_wheel > 200)       C:\FIRST\ATLcode\WorkHere\user_routines.c
002c08   5185     MOVF      0x85,0x0,0x1                                                                                    
002c0a   6e2b     MOVWF     0x2b,0x0                                                                                        
002c0c   6a2c     CLRF      0x2c,0x0                                                                                        
002c0e   342c     RLCF      0x2c,0x0,0x0                                                                                    
002c10   e204     BC        0x2c1a                                                                                          
002c12   502b     MOVF      0x2b,0x0,0x0                                                                                    
002c14   08c8     SUBLW     0xc8                                                                                            
002c16   0e00     MOVLW     0x0                                                                                             
002c18   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
002c1a   e30a     BNC       0x2c30                                                                                          
002c1c   5189     MOVF      0x89,0x0,0x1                                                                                    
002c1e   6e2d     MOVWF     0x2d,0x0                                                                                        
002c20   6a2e     CLRF      0x2e,0x0                                                                                        
002c22   342e     RLCF      0x2e,0x0,0x0                                                                                    
002c24   e204     BC        0x2c2e                                                                                          
002c26   502d     MOVF      0x2d,0x0,0x0                                                                                    
002c28   08c8     SUBLW     0xc8                                                                                            
002c2a   0e00     MOVLW     0x0                                                                                             
002c2c   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
002c2e   e203     BC        0x2c36                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002c30   0102     MOVLB     0x2            			gatherer_motor = GATHER_MOTOR_OUT;                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002c32   6b66     CLRF      0x66,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
002c34   d003     BRA       0x2c3c         	else                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		 {                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002c36   0102     MOVLB     0x2            			gatherer_motor = 127;                                                         C:\FIRST\ATLcode\WorkHere\user_routines.c
002c38   0e7f     MOVLW     0x7f                                                                                            
002c3a   6f66     MOVWF     0x66,0x1                                                                                        
                                           		 }                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002c3c   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*********************************************************************           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                            Created by; Patrick                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	This function will let us slightly warp the shooter to give us some             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	control over the x-axis allowing us to change the x-axis without                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	needing to turn the entire robot to aim the shooter.                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Pramaters: None.                                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Variables: warp_lv counter for how many loops the motor has been on.             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		   warp_speed controls how fast the positive turn of the motor is.             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		   warp_rspeed controls how fast the negative turn of the motor is.            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		   WARP_DRIVE_PULSE controls th max loops the motor will be on for.            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		   warp_drive is the window motor, defined in user_routines.h                  C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           Extra coment: WARP_DRIVE_PULSE and warp_drive are defined in user_routines.h     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *********************************************************************/           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           void warp_pulse(void)                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	static char warp_lv=0;										//counter for if warp is activated for x loops. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	char warp_speed= 167;     //170;										//easy control for how fast to have the motor go forward. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	char warp_rspeed= 77;     //102;										//easy control for how fast to have the motor go backward. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	auto_aim_override = 1; //we're pushing this manually, so don't go through       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	if ((p3_x > 210) || (p3_x < 40))                               // Was either button 1 or two depressed? C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                   {                                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                   if (warp_lv < WARP_DRIVE_PULSE)                         // Can we make one more lap? C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                       {                                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			warp_lv++;											//add to counter for how long the warp drive is running. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			if (p3_x > 210)										//check if button is pressed and debounce has not been activated. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				//printf("Warp engage forward\r\n");			//printf to tell us if the warp drive has been engaged to go forward. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				warp_drive=warp_speed;							//speed at which the motor is being run.        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                       else                                                                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				//printf("Warp reverse\r\n");					//printf to tell us if the warp drive has been engaged to go backward. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				warp_drive=warp_rspeed;							//speed at which the motor is being run.       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                       }                                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                   else                                                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		    //printf("Warp disengage after running out\r\n");	//printf to tell us that we have disengaged the warp_drive. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		    warp_drive=127;										//neturalize the warp_drive to stop the motor.    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                   }                                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	else                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		//printf("Warp disengage through button release\r\n");	//printf to tell us that we have disengaged the warp_drive. C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		warp_drive=127;											//neturalize the warp_drive to stop the motor.       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		warp_lv=0;												//reset the counter.                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	    }                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002c3e   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /**************************************************************/                 C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
002c40   cfd9     MOVFF     0xfd9,0xfe6    void Aim_High(int input_from_camera)                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
002c42   ffe6                                                                                                               
002c44   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002c46   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*static int warp_drive_position = 0; // substitute for slide pot                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static int number_to_reach = 0; // target slide pot position                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           if (auto_aim_override != 1) // if the override is off                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	//number_to_reach = [[[[equation based on input from camera]]]];                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	if (number_to_reach < warp_drive_position - warp_drive_tolerance) // adjust one direction C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		warp_drive = 167;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	else if (number_to_reach > warp_drive_position + warp_drive_tolerance) // adjust in the other direction C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		warp_drive = 77;                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	else	// otherwise, we've reached the target adjustment                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		Aim_High_Handler = 0;  // set to 0 because we're done                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	Aim_High_Handler = 1;  //set to 1 because we're not done                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static int pulse_count_maker = 0;                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           static int current_count = 0;                                                    C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           if ((current_count < count_too_high || current_count > count_too_low)&& auto_aim_override != 1) // if the override is off C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	if (input_from_camera < CENTER_OF_WINDOW - warp_drive_tolerance) // adjust one direction C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		{	                                                                             C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		warp_drive = 167;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		if (pulse_count_maker < 5)                         // Can we make one more lap? C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			pulse_count_maker++;                                                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		else                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			current_count++;                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			pulse_count_maker = -5;											//add to counter for how long the warp drive is running C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	else if (input_from_camera > CENTER_OF_WINDOW + warp_drive_tolerance) // adjust in the other direction C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		warp_drive = 77;                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		if (pulse_count_maker > -5)                         // Can we make one more lap? C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			pulse_count_maker = pulse_count_maker -1;                                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		else                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			current_count = current_count - 1;                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			pulse_count_maker = 5;											//add to counter for how long the warp drive is running C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	else	// otherwise, we've reached the target adjustment                          C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		auto_aim_override = 0;  // set to 0 because we're done                         C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	auto_aim_override = 1;  //set to 1 because we're not done                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           else // override is on                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	auto_aim_override = 0; //set to 0 because we're overriden                       C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002c48   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
002c4a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002c4c   ffd9                                                                                                               
002c4e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /*************************************************************************************************************** C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	Created by : Daniel Judd                                                        C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		this function will allow for an increase or decrease in shooter speed as long as C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	the correct buttons are pressed 	                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *	Parameters: none                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	Returns: none                                                                                              * C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           *   Variables: p4_sw_top for the button on the drive pressed                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		pwm01 for the motors                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		p3_sw_aux1 for the controller to increase and decrease speed                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           ***************************************************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           void control_shooter_speed (void)                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	if (p3_sw_top == 1 ) //when the trigger is pressed//                            C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	{	                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		if ( p4_wheel > 127 ) //when the analog switch is upward//                     C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			flywheel += 20; //adds speed//                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			printf("\rfaster nudge\r");                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		if ( p4_wheel < 127 )//when the analog swithc is downward                      C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			flywheel -= 20; //subtracts speed//                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           			printf("\rslower nudge\r");                                                   C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines.c
002c50   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * FILE NAME: user_routines_fast.c <FRC VERSION>                                  C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * DESCRIPTION:                                                                   C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *  This file is where the user can add their custom code within the framework    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *  of the routines below.                                                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * USAGE:                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *  project and replace it with a modified copy.                                  C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * OPTIONS:  Interrupts are disabled and not used by default.                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include "serial_ports.h"                                                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include "chopshop.h"                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include "adc.h"                                                                 C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #include "gyro.h"                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * FUNCTION NAME: InterruptVectorLow                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt vector                                   C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * CALLED FROM:   nowhere by default                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * DO NOT MODIFY OR DELETE THIS FUNCTION                                          C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #pragma code InterruptVectorLow = LOW_INT_VECTOR                                 C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           void InterruptVectorLow (void)                                                   C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                             _asm                                                                           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
000818   efff     GOTO      0x4dfe             goto InterruptHandlerLow  /*jump to interrupt routine*/                      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00081a   f026                                                                                                               
                                             _endasm                                                                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00081c   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * FUNCTION NAME: InterruptHandlerLow                                             C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt handler                                  C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * If you want to use these external low priority interrupts or any of the        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * peripheral interrupts then you must enable them in your initialization         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * routine.  Innovation First, Inc. will not provide support for using these      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * interrupts, so be careful.  There is great potential for glitchy code if good  C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * interrupt programming practices are not followed.  Especially read p. 28 of    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * the "MPLAB(R) C18 C Compiler User's Guide" for information on context saving.  C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * CALLED FROM:   this file, InterruptVectorLow routine                           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #pragma code                                                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #pragma interruptlow InterruptHandlerLow save=PROD,section(".tmpdata")           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004dfe   cfd8     MOVFF     0xfd8,0xfe4    void InterruptHandlerLow ()                                                      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e00   ffe4                                                                                                               
004e02   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
004e04   ffe4                                                                                                               
004e06   6ee4     MOVWF     0xe4,0x0                                                                                        
004e08   cfda     MOVFF     0xfda,0xfe4                                                                                     
004e0a   ffe4                                                                                                               
004e0c   cfe2     MOVFF     0xfe2,0xfda                                                                                     
004e0e   ffda                                                                                                               
004e10   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
004e12   ffe4                                                                                                               
004e14   cfea     MOVFF     0xfea,0xfe4                                                                                     
004e16   ffe4                                                                                                               
004e18   cff3     MOVFF     0xff3,0xfe4                                                                                     
004e1a   ffe4                                                                                                               
004e1c   cff4     MOVFF     0xff4,0xfe4                                                                                     
004e1e   ffe4                                                                                                               
004e20   ee00     LFSR      0x0,0x2b                                                                                        
004e22   f02b                                                                                                               
004e24   0e0a     MOVLW     0xa                                                                                             
004e26   04e8     DECF      0xe8,0x0,0x0                                                                                    
004e28   e303     BNC       0x4e30                                                                                          
004e2a   cfee     MOVFF     0xfee,0xfe4                                                                                     
004e2c   ffe4                                                                                                               
004e2e   d7fb     BRA       0x4e26                                                                                          
004e30   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           static char hold3 = 0;						//hold value for timer3                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e32   509e     MOVF      0x9e,0x0,0x0   	if (PIR1bits.RC1IF && PIE1bits.RC1IE) // rx1 interrupt?                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e34   0b20     ANDLW     0x20                                                                                            
004e36   e006     BZ        0x4e44                                                                                          
004e38   509d     MOVF      0x9d,0x0,0x0                                                                                    
004e3a   0b20     ANDLW     0x20                                                                                            
004e3c   e003     BZ        0x4e44                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_RX                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e3e   ec0e     CALL      0x4a1c,0x0     		Rx_1_Int_Handler(); // call the rx1 interrupt handler (in serial_ports.c)      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e40   f025                                                                                                               
                                           		#endif                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e42   d01a     BRA       0x4e78         	else if (PIR3bits.RC2IF && PIE3bits.RC2IE) // rx2 interrupt?                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e44   50a4     MOVF      0xa4,0x0,0x0                                                                                    
004e46   0b20     ANDLW     0x20                                                                                            
004e48   e006     BZ        0x4e56                                                                                          
004e4a   50a3     MOVF      0xa3,0x0,0x0                                                                                    
004e4c   0b20     ANDLW     0x20                                                                                            
004e4e   e003     BZ        0x4e56                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_RX                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e50   ec2d     CALL      0x4a5a,0x0     		Rx_2_Int_Handler(); // call the rx2 interrupt handler (in serial_ports.c)      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e52   f025                                                                                                               
                                           		#endif                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e54   d011     BRA       0x4e78         	else if (PIR1bits.TX1IF && PIE1bits.TX1IE) // tx1 interrupt?                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e56   509e     MOVF      0x9e,0x0,0x0                                                                                    
004e58   0b10     ANDLW     0x10                                                                                            
004e5a   e006     BZ        0x4e68                                                                                          
004e5c   509d     MOVF      0x9d,0x0,0x0                                                                                    
004e5e   0b10     ANDLW     0x10                                                                                            
004e60   e003     BZ        0x4e68                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_TX                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e62   ec4c     CALL      0x4a98,0x0     		Tx_1_Int_Handler(); // call the tx1 interrupt handler (in serial_ports.c)      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e64   f025                                                                                                               
                                           		#endif                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e66   d008     BRA       0x4e78         	else if (PIR3bits.TX2IF && PIE3bits.TX2IE) // tx2 interrupt?                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e68   50a4     MOVF      0xa4,0x0,0x0                                                                                    
004e6a   0b10     ANDLW     0x10                                                                                            
004e6c   e005     BZ        0x4e78                                                                                          
004e6e   50a3     MOVF      0xa3,0x0,0x0                                                                                    
004e70   0b10     ANDLW     0x10                                                                                            
004e72   e002     BZ        0x4e78                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_TX                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e74   ec64     CALL      0x4ac8,0x0     		Tx_2_Int_Handler(); // call the tx2 interrupt handler (in serial_ports.c)      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e76   f025                                                                                                               
                                           		#endif                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           							//holds know of interrupt hits gotten                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e78   50f0     MOVF      0xf0,0x0,0x0   	if (INTCON3bits.INT2IF && INTCON3bits.INT2IE)                                   C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e7a   0b02     ANDLW     0x2                                                                                             
004e7c   e00b     BZ        0x4e94                                                                                          
004e7e   50f0     MOVF      0xf0,0x0,0x0                                                                                    
004e80   0b10     ANDLW     0x10                                                                                            
004e82   e008     BZ        0x4e94                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e84   98f0     BCF       0xf0,0x4,0x0        	INTCON3bits.INT2IE = 0;        //disable the interrupt to prevent it from being recalled C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                               	/*Perform code needed here. WARNING: This must be quick because if the code stays here to long a code error will occur. */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e86   6ae6     CLRF      0xe6,0x0       		rps(0);                                                                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e88   ec6c     CALL      0x2ad8,0x0                                                                                      
004e8a   f015                                                                                                               
004e8c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e8e   92f0     BCF       0xf0,0x1,0x0   		INTCON3bits.INT2IF = 0;       //clear the flag bit                             C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e90   88f0     BSF       0xf0,0x4,0x0         	INTCON3bits.INT2IE = 1;      //re enable the interrupt                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                             	}                                                                             C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e92   d03c     BRA       0x4f0c         	else if(PIE2bits.TMR3IE && PIR2bits.TMR3IF)                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004e94   50a0     MOVF      0xa0,0x0,0x0                                                                                    
004e96   0b02     ANDLW     0x2                                                                                             
004e98   e015     BZ        0x4ec4                                                                                          
004e9a   50a1     MOVF      0xa1,0x0,0x0                                                                                    
004e9c   0b02     ANDLW     0x2                                                                                             
004e9e   e012     BZ        0x4ec4                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ea0   92a0     BCF       0xa0,0x1,0x0   		PIE2bits.TMR3IE = 0; //turn interrupt off to prevent it from being recalled    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ea2   92a1     BCF       0xa1,0x1,0x0   		PIR2bits.TMR3IF = 0; //reset the flag to 0                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ea4   0103     MOVLB     0x3            		hold3++; 			 //adds one to the hold                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ea6   2b4c     INCF      0x4c,0x1,0x1                                                                                    
004ea8   0e14     MOVLW     0x14           		if (hold3 == 20)		 //is hold equal to 20                                       C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004eaa   5d4c     SUBWF     0x4c,0x0,0x1                                                                                    
004eac   e109     BNZ       0x4ec0                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004eae   6ae6     CLRF      0xe6,0x0       			timer_data(3,0); //call timer_data function to add a second                   C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004eb0   0e03     MOVLW     0x3                                                                                             
004eb2   6ee6     MOVWF     0xe6,0x0                                                                                        
004eb4   ece8     CALL      0x13d0,0x0                                                                                      
004eb6   f009                                                                                                               
004eb8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004eba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ebc   0103     MOVLB     0x3            			hold3 = 0;       //reset hold to 0 so the next second can be counted          C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ebe   6b4c     CLRF      0x4c,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ec0   82a0     BSF       0xa0,0x1,0x0   		PIE2bits.TMR3IE = 1; // enable interrupt                                       C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ec2   d024     BRA       0x4f0c         	else if (PIE1bits.TMR1IE && PIR1bits.TMR1IF)		//is the interrupt enabled and the flag triggered C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ec4   509d     MOVF      0x9d,0x0,0x0                                                                                    
004ec6   0b01     ANDLW     0x1                                                                                             
004ec8   e00e     BZ        0x4ee6                                                                                          
004eca   509e     MOVF      0x9e,0x0,0x0                                                                                    
004ecc   0b01     ANDLW     0x1                                                                                             
004ece   e00b     BZ        0x4ee6                                                                                          
                                           		 {		                                                                           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ed0   909d     BCF       0x9d,0x0,0x0   		      PIE1bits.TMR1IE = 0;					//turn interrupt off, this prevents calling it again while the following code is executed C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ed2   909e     BCF       0x9e,0x0,0x0   		      PIR1bits.TMR1IF = 0;					//flag reset                                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ed4   6ae6     CLRF      0xe6,0x0       		      timer_data(1, 0);						//call timer_data function                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ed6   0e01     MOVLW     0x1                                                                                             
004ed8   6ee6     MOVWF     0xe6,0x0                                                                                        
004eda   ece8     CALL      0x13d0,0x0                                                                                      
004edc   f009                                                                                                               
004ede   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ee0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ee2   809d     BSF       0x9d,0x0,0x0   		      PIE1bits.TMR1IE = 1;					//enable interrupt again                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                  }                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ee4   d013     BRA       0x4f0c         	else if(PIR1bits.TMR2IF && PIE1bits.TMR2IE) // timer 2 interrupt?               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ee6   509e     MOVF      0x9e,0x0,0x0                                                                                    
004ee8   0b02     ANDLW     0x2                                                                                             
004eea   e007     BZ        0x4efa                                                                                          
004eec   509d     MOVF      0x9d,0x0,0x0                                                                                    
004eee   0b02     ANDLW     0x2                                                                                             
004ef0   e004     BZ        0x4efa                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ef2   929e     BCF       0x9e,0x1,0x0   		PIR1bits.TMR2IF = 0; // clear the timer 2 interrupt flag [92]                  C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ef4   ec01     CALL      0x3c02,0x0     		Timer_2_Int_Handler(); // call the timer 2 interrupt handler (in adc.c)        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ef6   f01e                                                                                                               
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004ef8   d009     BRA       0x4f0c             else if(PIR1bits.ADIF && PIE1bits.ADIE) // ADC interrupt                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004efa   509e     MOVF      0x9e,0x0,0x0                                                                                    
004efc   0b40     ANDLW     0x40                                                                                            
004efe   e006     BZ        0x4f0c                                                                                          
004f00   509d     MOVF      0x9d,0x0,0x0                                                                                    
004f02   0b40     ANDLW     0x40                                                                                            
004f04   e003     BZ        0x4f0c                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f06   9c9e     BCF       0x9e,0x6,0x0   		PIR1bits.ADIF = 0; // clear the ADC interrupt flag                             C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f08   ec03     CALL      0x3c06,0x0     		ADC_Int_Handler(); // call the ADC interrupt handler (in adc.c)                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f0a   f01e                                                                                                               
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  ***  IFI Code Starts Here***                                                 C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //                                                                               C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  unsigned char int_byte;                                                      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  if (INTCON3bits.INT2IF && INTCON3bits.INT2IE)       /* The INT2 pin is RB2/DIG I/O 1. */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  {                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //    INTCON3bits.INT2IF = 0;                                                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  }                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE)  /* The INT3 pin is RB3/DIG I/O 2. */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  {                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //    INTCON3bits.INT3IF = 0;                                                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  }                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  else if (INTCONbits.RBIF && INTCONbits.RBIE)  /* DIG I/O 3-6 (RB4, RB5, RB6, or RB7) changed. */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  {                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //    int_byte = PORTB;          /* You must read or write to PORTB */           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //    INTCONbits.RBIF = 0;     /*     and clear the interrupt flag         */    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  }                                        /*     to clear the interrupt condition.  */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  else                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  {                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //    CheckUartInts();    /* For Dynamic Debug Tool or buffered printf features. */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           //  }                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f0c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f0e   ee00     LFSR      0x0,0x34                                                                                        
004f10   f034                                                                                                               
004f12   0e0a     MOVLW     0xa                                                                                             
004f14   04e8     DECF      0xe8,0x0,0x0                                                                                    
004f16   e303     BNC       0x4f1e                                                                                          
004f18   cfe5     MOVFF     0xfe5,0xfed                                                                                     
004f1a   ffed                                                                                                               
004f1c   d7fb     BRA       0x4f14                                                                                          
004f1e   cfe5     MOVFF     0xfe5,0xff4                                                                                     
004f20   fff4                                                                                                               
004f22   cfe5     MOVFF     0xfe5,0xff3                                                                                     
004f24   fff3                                                                                                               
004f26   cfe5     MOVFF     0xfe5,0xfea                                                                                     
004f28   ffea                                                                                                               
004f2a   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
004f2c   ffe9                                                                                                               
004f2e   cfe5     MOVFF     0xfe5,0xfda                                                                                     
004f30   ffda                                                                                                               
004f32   50e5     MOVF      0xe5,0x0,0x0                                                                                    
004f34   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
004f36   ffe0                                                                                                               
004f38   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
004f3a   ffd8                                                                                                               
004f3c   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * FUNCTION NAME: User_Autonomous_Code                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * PURPOSE:       Execute user's code during autonomous robot operation.          C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run in         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * autonomous mode.  It will be executed every program loop, and not              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * wait for or use any data from the Operator Interface.                          C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * CALLED FROM:   main.c file, main() routine when in Autonomous mode             C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f3e   cfd9     MOVFF     0xfd9,0xfe6    void User_Autonomous_Code(void)                                                  C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f40   ffe6                                                                                                               
004f42   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004f44   ffd9                                                                                                               
004f46   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f48   6adf     CLRF      0xdf,0x0       unsigned char auto_selection = 0;					//determines that autonomous mode the user wishes to perform C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                             /* Initialize all PWMs and Relays when entering Autonomous mode, or else it    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                will be stuck with the last values mapped from the joysticks.  Remember,    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                even when Disabled it is reading inputs from the Operator Interface.        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                             */                                                                             C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f4a   0102     MOVLB     0x2              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f4c   0e7f     MOVLW     0x7f                                                                                            
004f4e   6f63     MOVWF     0x63,0x1                                                                                        
004f50   c263     MOVFF     0x263,0x262                                                                                     
004f52   f262                                                                                                               
004f54   c263     MOVFF     0x263,0x261                                                                                     
004f56   f261                                                                                                               
004f58   c263     MOVFF     0x263,0x260                                                                                     
004f5a   f260                                                                                                               
004f5c   c263     MOVFF     0x263,0x25f                                                                                     
004f5e   f25f                                                                                                               
004f60   c263     MOVFF     0x263,0x25e                                                                                     
004f62   f25e                                                                                                               
004f64   c263     MOVFF     0x263,0x25d                                                                                     
004f66   f25d                                                                                                               
004f68   c263     MOVFF     0x263,0x25c                                                                                     
004f6a   f25c                                                                                                               
004f6c   6f6b     MOVWF     0x6b,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f6e   c26b     MOVFF     0x26b,0x26a                                                                                     
004f70   f26a                                                                                                               
004f72   c26b     MOVFF     0x26b,0x269                                                                                     
004f74   f269                                                                                                               
004f76   c26b     MOVFF     0x26b,0x268                                                                                     
004f78   f268                                                                                                               
004f7a   c26b     MOVFF     0x26b,0x267                                                                                     
004f7c   f267                                                                                                               
004f7e   c26b     MOVFF     0x26b,0x266                                                                                     
004f80   f266                                                                                                               
004f82   c26b     MOVFF     0x26b,0x265                                                                                     
004f84   f265                                                                                                               
004f86   c26b     MOVFF     0x26b,0x264                                                                                     
004f88   f264                                                                                                               
004f8a   928c     BCF       0x8c,0x1,0x0     relay1_fwd = relay1_rev = relay2_fwd = relay2_rev = 0;                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f8c   928d     BCF       0x8d,0x1,0x0                                                                                    
004f8e   908c     BCF       0x8c,0x0,0x0                                                                                    
004f90   908d     BCF       0x8d,0x0,0x0                                                                                    
004f92   968c     BCF       0x8c,0x3,0x0     relay3_fwd = relay3_rev = relay4_fwd = relay4_rev = 0;                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f94   968d     BCF       0x8d,0x3,0x0                                                                                    
004f96   948c     BCF       0x8c,0x2,0x0                                                                                    
004f98   948d     BCF       0x8d,0x2,0x0                                                                                    
004f9a   9a8c     BCF       0x8c,0x5,0x0     relay5_fwd = relay5_rev = relay6_fwd = relay6_rev = 0;                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004f9c   9a8d     BCF       0x8d,0x5,0x0                                                                                    
004f9e   988c     BCF       0x8c,0x4,0x0                                                                                    
004fa0   988d     BCF       0x8d,0x4,0x0                                                                                    
004fa2   9e8c     BCF       0x8c,0x7,0x0     relay7_fwd = relay7_rev = relay8_fwd = relay8_rev = 0;                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fa4   9091     BCF       0x91,0x0,0x0                                                                                    
004fa6   9c8c     BCF       0x8c,0x6,0x0                                                                                    
004fa8   9c8d     BCF       0x8d,0x6,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004faa   0102     MOVLB     0x2              while (autonomous_mode)   /* DO NOT CHANGE! */                                 C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fac   ad79     BTFSS     0x79,0x6,0x1                                                                                    
004fae   d05c     BRA       0x5068                                                                                          
005066   d7a1     BRA       0x4faa                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fb0   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fb2   a198     BTFSS     0x98,0x0,0x1                                                                                    
004fb4   d058     BRA       0x5066                                                                                          
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fb6   0e78     MOVLW     0x78                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fb8   6ee6     MOVWF     0xe6,0x0                                                                                        
004fba   0e02     MOVLW     0x2                                                                                             
004fbc   6ee6     MOVWF     0xe6,0x0                                                                                        
004fbe   ec30     CALL      0x2e60,0x0                                                                                      
004fc0   f017                                                                                                               
004fc2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004fc4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #if 1                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		//can be 0-3, dependin on state of 2 dig inputs                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		auto_selection = //rc_dig_in01 + (rc_dig_in02 * 2);                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fc6   0e01     MOVLW     0x1            							1; //Auto mode 2, no matter what (drive forward)                          C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fc8   6edf     MOVWF     0xdf,0x0                                                                                        
004fca   cfdf     MOVFF     0xfdf,0xfe6    printf("\rAuto_selection1 %d autoselect2 %d auto select is %d", rc_dig_in01, rc_dig_in02, auto_selection); C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
004fcc   ffe6                                                                                                               
004fce   6ae6     CLRF      0xe6,0x0                                                                                        
004fd0   5081     MOVF      0x81,0x0,0x0                                                                                    
004fd2   0b08     ANDLW     0x8                                                                                             
004fd4   e001     BZ        0x4fd8                                                                                          
004fd6   0e01     MOVLW     0x1                                                                                             
004fd8   6ee6     MOVWF     0xe6,0x0                                                                                        
004fda   6ae6     CLRF      0xe6,0x0                                                                                        
004fdc   5081     MOVF      0x81,0x0,0x0                                                                                    
004fde   0b04     ANDLW     0x4                                                                                             
004fe0   e001     BZ        0x4fe4                                                                                          
004fe2   0e01     MOVLW     0x1                                                                                             
004fe4   6ee6     MOVWF     0xe6,0x0                                                                                        
004fe6   6ae6     CLRF      0xe6,0x0                                                                                        
004fe8   0e83     MOVLW     0x83                                                                                            
004fea   6e2b     MOVWF     0x2b,0x0                                                                                        
004fec   0e55     MOVLW     0x55                                                                                            
004fee   6e2c     MOVWF     0x2c,0x0                                                                                        
004ff0   6a2d     CLRF      0x2d,0x0                                                                                        
004ff2   c02b     MOVFF     0x2b,0xfe6                                                                                      
004ff4   ffe6                                                                                                               
004ff6   c02c     MOVFF     0x2c,0xfe6                                                                                      
004ff8   ffe6                                                                                                               
004ffa   c02d     MOVFF     0x2d,0xfe6                                                                                      
004ffc   ffe6                                                                                                               
004ffe   ecfd     CALL      0x57fa,0x0                                                                                      
005000   f02b                                                                                                               
005002   6ef5     MOVWF     0xf5,0x0                                                                                        
005004   0e09     MOVLW     0x9                                                                                             
005006   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005008   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00500a   50df     MOVF      0xdf,0x0,0x0   		switch(auto_selection)                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00500c   0a03     XORLW     0x3                                                                                             
00500e   e012     BZ        0x5034                                                                                          
005010   0a01     XORLW     0x1                                                                                             
005012   e00d     BZ        0x502e                                                                                          
005014   0a03     XORLW     0x3                                                                                             
005016   e008     BZ        0x5028                                                                                          
005018   0a01     XORLW     0x1                                                                                             
00501a   e003     BZ        0x5022                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		case 0:                                                                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005022   ecd0     CALL      0x5ba0,0x0     			User_Autonomous_Code_0();	                                                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005024   f02d                                                                                                               
005026   d009     BRA       0x503a         		break;                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		case 1:                                                                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005028   ec47     CALL      0x588e,0x0     			User_Autonomous_Code_2();                                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00502a   f02c                                                                                                               
00502c   d006     BRA       0x503a         		break;                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		case 2:                                                                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00502e   ecf5     CALL      0x55ea,0x0     			User_Autonomous_Code_3();                                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005030   f02a                                                                                                               
005032   d003     BRA       0x503a         		break;                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		case 3:                                                                        C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005034   eca2     CALL      0x5b44,0x0     			User_Autonomous_Code_4();                                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005036   f02d                                                                                                               
005038   d000     BRA       0x503a         		break;                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		default:                                                                       C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00501c   eca2     CALL      0x5b44,0x0     			User_Autonomous_Code_4();                                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00501e   f02d                                                                                                               
005020   d00c     BRA       0x503a         		break;                                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00503a   c26b     MOVFF     0x26b,0xfe6            Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                  C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00503c   ffe6                                                                                                               
00503e   c26a     MOVFF     0x26a,0xfe6                                                                                     
005040   ffe6                                                                                                               
005042   c269     MOVFF     0x269,0xfe6                                                                                     
005044   ffe6                                                                                                               
005046   c268     MOVFF     0x268,0xfe6                                                                                     
005048   ffe6                                                                                                               
00504a   ec02     CALL      0x4404,0x0                                                                                      
00504c   f022                                                                                                               
00504e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005050   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005052   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005054   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005056   0e58     MOVLW     0x58                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005058   6ee6     MOVWF     0xe6,0x0                                                                                        
00505a   0e02     MOVLW     0x2                                                                                             
00505c   6ee6     MOVWF     0xe6,0x0                                                                                        
00505e   ec49     CALL      0x2e92,0x0                                                                                      
005060   f017                                                                                                               
005062   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005064   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005068   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00506a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00506c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00506e   ffd9                                                                                                               
005070   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * FUNCTION NAME: Process_Data_From_Local_IO                                      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * PURPOSE:       Execute user's realtime code.                                   C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run fast.      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * It will be executed every program loop, and not wait for fresh data            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * from the Operator Interface.                                                   C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * CALLED FROM:   main.c                                                          C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           void Process_Data_From_Local_IO(void)                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                             /* Add code here that you want to be executed every program loop. */           C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005072   ecec     CALL      0x3bd8,0x0      if(Get_ADC_Result_Count())                                                      C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005074   f01d                                                                                                               
005076   0900     IORLW     0x0                                                                                             
005078   e004     BZ        0x5082                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00507a   ecc8     CALL      0x4790,0x0         Process_Gyro_Data();                                                         C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00507c   f023                                                                                                               
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00507e   ecfc     CALL      0x3bf8,0x0         Reset_ADC_Result_Count();                                                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005080   f01d                                                                                                               
                                             }	                                                                             C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005082   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * FUNCTION NAME: Serial_Char_Callback                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * PURPOSE:       Interrupt handler for the TTL_PORT.                             C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * CALLED FROM:   user_SerialDrv.c                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * ARGUMENTS:                                                                     C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *     Argument             Type    IO   Description                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *     --------             ----    --   -----------                              C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *     data        unsigned char    I    Data received from the TTL_PORT          C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005084   cfd9     MOVFF     0xfd9,0xfe6    void Serial_Char_Callback(unsigned char data)                                    C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
005086   ffe6                                                                                                               
005088   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00508a   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                             /* Add code to handle incomming data (remember, interrupts are still active) */ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00508c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
00508e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005090   ffd9                                                                                                               
005092   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************/ C:\FIRST\ATLcode\WorkHere\user_routines_fast.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           * FILE NAME: chopshop.c                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           * DESCRIPTION:                                                                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           *  This file contains functions that the team has created for use with the robot. These functions have been created C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           *   to be universal. They can be used anywhere chopshop.h is included. Please feel free to aid to this bank any common functions that are created. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include <math.h>                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include <string.h>                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include "chopshop.h"                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by: 	Robert Harris - Reduction equation                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				Sarah Judd - General coding and debugging                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				Steven Shidlovsky - General coding and debugging                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				Per - Mentor                                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Date modified:  12-14-2005                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name:  two_stick_drive                                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:     unsigned char input_L      = Input for the left drive motor  -> Value range 0-254  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		        unsigned char input_R      = Input for the right drive motor -> Value range 0-254 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		        unsigned char *pwm_left    = Pwm pin left drive motor is on            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		        unsigned char *pwm_right   = pwm pin right drive motor is on           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				char reduction             = % speed to run the motors (100 = full 0 = none) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns: 		*pwm_left  = Drive value for the left drive motor                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		    	*pwm_right = Drive value for the right drive motor                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose: This function uses the input values to determine the output values for the PWM's that drive the robot.  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Notes:	 To allow the driver more control, a dead zone in incorperated into the function. This dead zone can be  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		 extended or shortened by redefining the variable "dead_zone" in CHOPSHOP.h. Another feature is the C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	     reduction equation. This allows the output values to be reduced to only a fraction of their full strength. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		 For example, using a reduction value of 90 will make all input values be outputted at 9/10 of their normal  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                    strength. The main advantage of this is it allows the drivers to gain greater control on the robot. Instead  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                    of holding the joystick half way to get 50% power, a button on the joystick can reduce all values the joystick  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                    inputs by 50%. This makes it much easier on the drivers. The calculations for this function are done in integer C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                    math in order to save memory.                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		 Equation for when the input is less than 127: -(((-input + 127 ) * reduction)) / 100 + 127 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		 Equation for when the input is greater than 127: 127 + (((input - 127) * reduction) / 100) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008b0   cfd9     MOVFF     0xfd9,0xfe6    void two_stick_drive(unsigned char input_L, unsigned char input_R, unsigned char *pwm_left, unsigned char *pwm_right, char reduction) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008b2   ffe6                                                                                                               
0008b4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0008b6   ffd9                                                                                                               
0008b8   0e02     MOVLW     0x2                                                                                             
0008ba   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           int hold_data;										//holds values for the calculations                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               /*For input one, are we in the dead zone? If we are, set the left value to 127, which is neutral*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008bc   0e78     MOVLW     0x78               if((input_L >= (127 - dead_zone)) && (input_L <= (127 + dead_zone)))         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008be   6ef3     MOVWF     0xf3,0x0                                                                                        
0008c0   0efe     MOVLW     0xfe                                                                                            
0008c2   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0008c4   fff4                                                                                                               
0008c6   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0008c8   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0008ca   e30d     BNC       0x8e6                                                                                           
0008cc   0efe     MOVLW     0xfe                                                                                            
0008ce   50db     MOVF      0xdb,0x0,0x0                                                                                    
0008d0   0886     SUBLW     0x86                                                                                            
0008d2   e309     BNC       0x8e6                                                                                           
0008d4   0efb     MOVLW     0xfb                  *pwm_left = 127;                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008d6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008d8   ffe9                                                                                                               
0008da   0efc     MOVLW     0xfc                                                                                            
0008dc   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008de   ffea                                                                                                               
0008e0   0e7f     MOVLW     0x7f                                                                                            
0008e2   6eef     MOVWF     0xef,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  /*                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  This next set of code is the left reduction equation. This will reduce the input value by the amount C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  sent by the user from the parameter, reduction. This allows the driver to have greater control of C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  the robot without needing to worry about holding the joystick at other positions than full. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  */                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008e4   d087     BRA       0x9f4              else if (input_L < 127)                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008e6   0e7f     MOVLW     0x7f                                                                                            
0008e8   6ef3     MOVWF     0xf3,0x0                                                                                        
0008ea   0efe     MOVLW     0xfe                                                                                            
0008ec   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0008ee   fff4                                                                                                               
0008f0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0008f2   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0008f4   e241     BC        0x978                                                                                           
                                           	 {                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008f6   0efe     MOVLW     0xfe           	    hold_data = -1 * input_L + 127;                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0008f8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0008fa   0dff     MULLW     0xff                                                                                            
0008fc   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0008fe   0f7f     ADDLW     0x7f                                                                                            
000900   6ede     MOVWF     0xde,0x0                                                                                        
000902   6add     CLRF      0xdd,0x0                                                                                        
000904   0ef8     MOVLW     0xf8           	    hold_data = hold_data * reduction * -1;                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000906   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000908   f02d                                                                                                               
00090a   6a2e     CLRF      0x2e,0x0                                                                                        
00090c   be2d     BTFSC     0x2d,0x7,0x0                                                                                    
00090e   682e     SETF      0x2e,0x0                                                                                        
000910   c02d     MOVFF     0x2d,0x1d                                                                                       
000912   f01d                                                                                                               
000914   c02e     MOVFF     0x2e,0x1e                                                                                       
000916   f01e                                                                                                               
000918   cfde     MOVFF     0xfde,0x22                                                                                      
00091a   f022                                                                                                               
00091c   cfdd     MOVFF     0xfdd,0x23                                                                                      
00091e   f023                                                                                                               
000920   ec07     CALL      0x4c0e,0x0                                                                                      
000922   f026                                                                                                               
000924   c01b     MOVFF     0x1b,0x2b                                                                                       
000926   f02b                                                                                                               
000928   c01c     MOVFF     0x1c,0x2c                                                                                       
00092a   f02c                                                                                                               
00092c   6c2b     NEGF      0x2b,0x0                                                                                        
00092e   1e2c     COMF      0x2c,0x1,0x0                                                                                    
000930   0e00     MOVLW     0x0                                                                                             
000932   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
000934   c02b     MOVFF     0x2b,0xfde                                                                                      
000936   ffde                                                                                                               
000938   c02c     MOVFF     0x2c,0xfdd                                                                                      
00093a   ffdd                                                                                                               
00093c   cfd9     MOVFF     0xfd9,0xfe9    	    hold_data /= 100;                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00093e   ffe9                                                                                                               
000940   cfda     MOVFF     0xfda,0xfea                                                                                     
000942   ffea                                                                                                               
000944   0e64     MOVLW     0x64                                                                                            
000946   6e22     MOVWF     0x22,0x0                                                                                        
000948   6a23     CLRF      0x23,0x0                                                                                        
00094a   cfee     MOVFF     0xfee,0x1d                                                                                      
00094c   f01d                                                                                                               
00094e   cfed     MOVFF     0xfed,0x1e                                                                                      
000950   f01e                                                                                                               
000952   ecad     CALL      0x4b5a,0x0                                                                                      
000954   f025                                                                                                               
000956   c01d     MOVFF     0x1d,0xfee                                                                                      
000958   ffee                                                                                                               
00095a   c01e     MOVFF     0x1e,0xfed                                                                                      
00095c   ffed                                                                                                               
00095e   0e7f     MOVLW     0x7f           	    hold_data += 127;                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000960   26de     ADDWF     0xde,0x1,0x0                                                                                    
000962   0e00     MOVLW     0x0                                                                                             
000964   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
000966   0efb     MOVLW     0xfb           		*pwm_left = hold_data;                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000968   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00096a   ffe9                                                                                                               
00096c   0efc     MOVLW     0xfc                                                                                            
00096e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000970   ffea                                                                                                               
000972   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000974   ffef                                                                                                               
                                           	 }                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000976   d03e     BRA       0x9f4          	 else if (input_L > 127)                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000978   0efe     MOVLW     0xfe                                                                                            
00097a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00097c   087f     SUBLW     0x7f                                                                                            
00097e   e23a     BC        0x9f4                                                                                           
                                           	      {                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000980   0efe     MOVLW     0xfe           		      hold_data = input_L - 127;                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000982   50db     MOVF      0xdb,0x0,0x0                                                                                    
000984   0f81     ADDLW     0x81                                                                                            
000986   6ede     MOVWF     0xde,0x0                                                                                        
000988   6add     CLRF      0xdd,0x0                                                                                        
00098a   0ef8     MOVLW     0xf8           		      hold_data *= reduction;                                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00098c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00098e   f02b                                                                                                               
000990   6a2c     CLRF      0x2c,0x0                                                                                        
000992   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
000994   682c     SETF      0x2c,0x0                                                                                        
000996   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
000998   ffe9                                                                                                               
00099a   cfda     MOVFF     0xfda,0xfea                                                                                     
00099c   ffea                                                                                                               
00099e   c02b     MOVFF     0x2b,0x22                                                                                       
0009a0   f022                                                                                                               
0009a2   c02c     MOVFF     0x2c,0x23                                                                                       
0009a4   f023                                                                                                               
0009a6   cfee     MOVFF     0xfee,0x1d                                                                                      
0009a8   f01d                                                                                                               
0009aa   cfed     MOVFF     0xfed,0x1e                                                                                      
0009ac   f01e                                                                                                               
0009ae   ec34     CALL      0x4c68,0x0                                                                                      
0009b0   f026                                                                                                               
0009b2   c01b     MOVFF     0x1b,0xfee                                                                                      
0009b4   ffee                                                                                                               
0009b6   c01c     MOVFF     0x1c,0xfed                                                                                      
0009b8   ffed                                                                                                               
0009ba   cfd9     MOVFF     0xfd9,0xfe9    		      hold_data /= 100;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0009bc   ffe9                                                                                                               
0009be   cfda     MOVFF     0xfda,0xfea                                                                                     
0009c0   ffea                                                                                                               
0009c2   0e64     MOVLW     0x64                                                                                            
0009c4   6e22     MOVWF     0x22,0x0                                                                                        
0009c6   6a23     CLRF      0x23,0x0                                                                                        
0009c8   cfee     MOVFF     0xfee,0x1d                                                                                      
0009ca   f01d                                                                                                               
0009cc   cfed     MOVFF     0xfed,0x1e                                                                                      
0009ce   f01e                                                                                                               
0009d0   ecad     CALL      0x4b5a,0x0                                                                                      
0009d2   f025                                                                                                               
0009d4   c01d     MOVFF     0x1d,0xfee                                                                                      
0009d6   ffee                                                                                                               
0009d8   c01e     MOVFF     0x1e,0xfed                                                                                      
0009da   ffed                                                                                                               
0009dc   0e7f     MOVLW     0x7f           		      hold_data += 127;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0009de   26de     ADDWF     0xde,0x1,0x0                                                                                    
0009e0   0e00     MOVLW     0x0                                                                                             
0009e2   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
0009e4   0efb     MOVLW     0xfb           	          *pwm_left = hold_data;                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0009e6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0009e8   ffe9                                                                                                               
0009ea   0efc     MOVLW     0xfc                                                                                            
0009ec   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0009ee   ffea                                                                                                               
0009f0   cfdf     MOVFF     0xfdf,0xfef                                                                                     
0009f2   ffef                                                                                                               
                                           	      }                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               /*For input two, are we in the dead zone? If we are, set the left value to 127, which is neutral*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0009f4   0e78     MOVLW     0x78               if(input_R >= 127 - dead_zone && input_R <= 127 + dead_zone)                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0009f6   6ef3     MOVWF     0xf3,0x0                                                                                        
0009f8   0efd     MOVLW     0xfd                                                                                            
0009fa   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0009fc   fff4                                                                                                               
0009fe   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000a00   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
000a02   e30d     BNC       0xa1e                                                                                           
000a04   0efd     MOVLW     0xfd                                                                                            
000a06   50db     MOVF      0xdb,0x0,0x0                                                                                    
000a08   0886     SUBLW     0x86                                                                                            
000a0a   e309     BNC       0xa1e                                                                                           
000a0c   0ef9     MOVLW     0xf9                  *pwm_right = 127;                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000a0e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a10   ffe9                                                                                                               
000a12   0efa     MOVLW     0xfa                                                                                            
000a14   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a16   ffea                                                                                                               
000a18   0e7f     MOVLW     0x7f                                                                                            
000a1a   6eef     MOVWF     0xef,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  /*                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  This next set of code is the right reduction equation. This will reduce the input value by the amount C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  sent by the user from the parameter, reduction. This allows the driver to have greater control of C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  the robot without needing to worry about holding the joystick at other positions than full. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  */                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000a1c   d087     BRA       0xb2c              else if (input_R < 127)                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000a1e   0e7f     MOVLW     0x7f                                                                                            
000a20   6ef3     MOVWF     0xf3,0x0                                                                                        
000a22   0efd     MOVLW     0xfd                                                                                            
000a24   cfdb     MOVFF     0xfdb,0xff4                                                                                     
000a26   fff4                                                                                                               
000a28   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000a2a   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
000a2c   e241     BC        0xab0                                                                                           
                                           	 {                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000a2e   0efd     MOVLW     0xfd           	    hold_data = -1 * input_R + 127;                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000a30   50db     MOVF      0xdb,0x0,0x0                                                                                    
000a32   0dff     MULLW     0xff                                                                                            
000a34   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000a36   0f7f     ADDLW     0x7f                                                                                            
000a38   6ede     MOVWF     0xde,0x0                                                                                        
000a3a   6add     CLRF      0xdd,0x0                                                                                        
000a3c   0ef8     MOVLW     0xf8           	    hold_data = hold_data * reduction * -1;                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000a3e   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000a40   f02d                                                                                                               
000a42   6a2e     CLRF      0x2e,0x0                                                                                        
000a44   be2d     BTFSC     0x2d,0x7,0x0                                                                                    
000a46   682e     SETF      0x2e,0x0                                                                                        
000a48   c02d     MOVFF     0x2d,0x1d                                                                                       
000a4a   f01d                                                                                                               
000a4c   c02e     MOVFF     0x2e,0x1e                                                                                       
000a4e   f01e                                                                                                               
000a50   cfde     MOVFF     0xfde,0x22                                                                                      
000a52   f022                                                                                                               
000a54   cfdd     MOVFF     0xfdd,0x23                                                                                      
000a56   f023                                                                                                               
000a58   ec07     CALL      0x4c0e,0x0                                                                                      
000a5a   f026                                                                                                               
000a5c   c01b     MOVFF     0x1b,0x2b                                                                                       
000a5e   f02b                                                                                                               
000a60   c01c     MOVFF     0x1c,0x2c                                                                                       
000a62   f02c                                                                                                               
000a64   6c2b     NEGF      0x2b,0x0                                                                                        
000a66   1e2c     COMF      0x2c,0x1,0x0                                                                                    
000a68   0e00     MOVLW     0x0                                                                                             
000a6a   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
000a6c   c02b     MOVFF     0x2b,0xfde                                                                                      
000a6e   ffde                                                                                                               
000a70   c02c     MOVFF     0x2c,0xfdd                                                                                      
000a72   ffdd                                                                                                               
000a74   cfd9     MOVFF     0xfd9,0xfe9    	    hold_data /= 100;                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000a76   ffe9                                                                                                               
000a78   cfda     MOVFF     0xfda,0xfea                                                                                     
000a7a   ffea                                                                                                               
000a7c   0e64     MOVLW     0x64                                                                                            
000a7e   6e22     MOVWF     0x22,0x0                                                                                        
000a80   6a23     CLRF      0x23,0x0                                                                                        
000a82   cfee     MOVFF     0xfee,0x1d                                                                                      
000a84   f01d                                                                                                               
000a86   cfed     MOVFF     0xfed,0x1e                                                                                      
000a88   f01e                                                                                                               
000a8a   ecad     CALL      0x4b5a,0x0                                                                                      
000a8c   f025                                                                                                               
000a8e   c01d     MOVFF     0x1d,0xfee                                                                                      
000a90   ffee                                                                                                               
000a92   c01e     MOVFF     0x1e,0xfed                                                                                      
000a94   ffed                                                                                                               
000a96   0e7f     MOVLW     0x7f           	    hold_data += 127;                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000a98   26de     ADDWF     0xde,0x1,0x0                                                                                    
000a9a   0e00     MOVLW     0x0                                                                                             
000a9c   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
000a9e   0ef9     MOVLW     0xf9           		*pwm_right = hold_data;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000aa0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000aa2   ffe9                                                                                                               
000aa4   0efa     MOVLW     0xfa                                                                                            
000aa6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000aa8   ffea                                                                                                               
000aaa   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000aac   ffef                                                                                                               
                                           	 }                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000aae   d03e     BRA       0xb2c          	 else if (input_R > 127)                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ab0   0efd     MOVLW     0xfd                                                                                            
000ab2   50db     MOVF      0xdb,0x0,0x0                                                                                    
000ab4   087f     SUBLW     0x7f                                                                                            
000ab6   e23a     BC        0xb2c                                                                                           
                                           	      {                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ab8   0efd     MOVLW     0xfd           		      hold_data = input_R - 127;                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000aba   50db     MOVF      0xdb,0x0,0x0                                                                                    
000abc   0f81     ADDLW     0x81                                                                                            
000abe   6ede     MOVWF     0xde,0x0                                                                                        
000ac0   6add     CLRF      0xdd,0x0                                                                                        
000ac2   0ef8     MOVLW     0xf8           		      hold_data *= reduction;                                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ac4   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000ac6   f02b                                                                                                               
000ac8   6a2c     CLRF      0x2c,0x0                                                                                        
000aca   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
000acc   682c     SETF      0x2c,0x0                                                                                        
000ace   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
000ad0   ffe9                                                                                                               
000ad2   cfda     MOVFF     0xfda,0xfea                                                                                     
000ad4   ffea                                                                                                               
000ad6   c02b     MOVFF     0x2b,0x22                                                                                       
000ad8   f022                                                                                                               
000ada   c02c     MOVFF     0x2c,0x23                                                                                       
000adc   f023                                                                                                               
000ade   cfee     MOVFF     0xfee,0x1d                                                                                      
000ae0   f01d                                                                                                               
000ae2   cfed     MOVFF     0xfed,0x1e                                                                                      
000ae4   f01e                                                                                                               
000ae6   ec34     CALL      0x4c68,0x0                                                                                      
000ae8   f026                                                                                                               
000aea   c01b     MOVFF     0x1b,0xfee                                                                                      
000aec   ffee                                                                                                               
000aee   c01c     MOVFF     0x1c,0xfed                                                                                      
000af0   ffed                                                                                                               
000af2   cfd9     MOVFF     0xfd9,0xfe9    		      hold_data /= 100;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000af4   ffe9                                                                                                               
000af6   cfda     MOVFF     0xfda,0xfea                                                                                     
000af8   ffea                                                                                                               
000afa   0e64     MOVLW     0x64                                                                                            
000afc   6e22     MOVWF     0x22,0x0                                                                                        
000afe   6a23     CLRF      0x23,0x0                                                                                        
000b00   cfee     MOVFF     0xfee,0x1d                                                                                      
000b02   f01d                                                                                                               
000b04   cfed     MOVFF     0xfed,0x1e                                                                                      
000b06   f01e                                                                                                               
000b08   ecad     CALL      0x4b5a,0x0                                                                                      
000b0a   f025                                                                                                               
000b0c   c01d     MOVFF     0x1d,0xfee                                                                                      
000b0e   ffee                                                                                                               
000b10   c01e     MOVFF     0x1e,0xfed                                                                                      
000b12   ffed                                                                                                               
000b14   0e7f     MOVLW     0x7f           		      hold_data += 127;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b16   26de     ADDWF     0xde,0x1,0x0                                                                                    
000b18   0e00     MOVLW     0x0                                                                                             
000b1a   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
000b1c   0ef9     MOVLW     0xf9           	    	  *pwm_right = hold_data;	                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b1e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b20   ffe9                                                                                                               
000b22   0efa     MOVLW     0xfa                                                                                            
000b24   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b26   ffea                                                                                                               
000b28   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000b2a   ffef                                                                                                               
                                           	      }                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /*                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           This statement is present for easy debugging. In chopshop.h, there is a section that contains this flag, should the function need C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           to be debugged for any reason, a preliminary examination can be done by turning on the flag. If the flag is off, this section will C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           not be compiled.                                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #if TWO_STICK_DEBUG                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               printf("\rInputs: %d / %d. Reduction: %d. Outputs-> left:%d right:%d.", input_L, input_R, reduction,*pwm_left,*pwm_right); C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b2c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b2e   ffe1                                                                                                               
000b30   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b32   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000b34   ffd9                                                                                                               
000b36   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /********************  uber_stick_drive function  ***********************        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by:    Robert Harris - General Coding                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Date modified: November 22, 2005                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name: uber_one_stick_drive                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:    xaxis   = input to determine if turn will occur                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   yaxis   = input to determine the foward and reverse motion of robot        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   *pwmL   = pwm operating the left drive motor                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   *pwmR   = pwm operating the right drive motor                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns:       *pwmL   = left drive motor value (as a pointer)                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   *pwmR   = right drive motor value (as a pointer)                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose:       This allows the robot to be controlled with one joystick.         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Notes:         This function causes the robot to turn on its center when the user moves the x-axis of the joystick out of the deadzone. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				It will also be able to move the robot foward and reverse. The reduction equation is also used in this function. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				Should the function need to be debugged, set the one_stick_debug flag in the .h file to 1 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Equation for when the input is less than 127: -(((-input + 127 ) * reduction)) / 100 + 127 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Equation for when the input is greater than 127: 127 + (((input - 127) * reduction) / 100)			    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b38   cfd9     MOVFF     0xfd9,0xfe6    void uber_one_stick_drive(unsigned char xaxis, unsigned char yaxis, unsigned char *pwmL, unsigned char *pwmR, unsigned char reduction) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b3a   ffe6                                                                                                               
000b3c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000b3e   ffd9                                                                                                               
000b40   0e02     MOVLW     0x2                                                                                             
000b42   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           int hold_data;                                                                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           													//holds values for calculations                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /*If the x-axis is less than 127 - xdead, then the robot will turn left*/        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b44   0e75     MOVLW     0x75               if (xaxis < 127 - xdead)                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b46   6ef3     MOVWF     0xf3,0x0                                                                                        
000b48   0efe     MOVLW     0xfe                                                                                            
000b4a   cfdb     MOVFF     0xfdb,0xff4                                                                                     
000b4c   fff4                                                                                                               
000b4e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000b50   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
000b52   e254     BC        0xbfc                                                                                           
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		/*this next section will perform the reduction equation*/                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b54   0efe     MOVLW     0xfe           		hold_data = -1 * xaxis + 127;                                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b56   50db     MOVF      0xdb,0x0,0x0                                                                                    
000b58   0dff     MULLW     0xff                                                                                            
000b5a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000b5c   0f7f     ADDLW     0x7f                                                                                            
000b5e   6ede     MOVWF     0xde,0x0                                                                                        
000b60   6add     CLRF      0xdd,0x0                                                                                        
000b62   0ef8     MOVLW     0xf8           	    hold_data = hold_data * reduction * -1;                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b64   50db     MOVF      0xdb,0x0,0x0                                                                                    
000b66   6e2d     MOVWF     0x2d,0x0                                                                                        
000b68   6a2e     CLRF      0x2e,0x0                                                                                        
000b6a   c02d     MOVFF     0x2d,0x1d                                                                                       
000b6c   f01d                                                                                                               
000b6e   c02e     MOVFF     0x2e,0x1e                                                                                       
000b70   f01e                                                                                                               
000b72   cfde     MOVFF     0xfde,0x22                                                                                      
000b74   f022                                                                                                               
000b76   cfdd     MOVFF     0xfdd,0x23                                                                                      
000b78   f023                                                                                                               
000b7a   ec07     CALL      0x4c0e,0x0                                                                                      
000b7c   f026                                                                                                               
000b7e   c01b     MOVFF     0x1b,0x2b                                                                                       
000b80   f02b                                                                                                               
000b82   c01c     MOVFF     0x1c,0x2c                                                                                       
000b84   f02c                                                                                                               
000b86   6c2b     NEGF      0x2b,0x0                                                                                        
000b88   1e2c     COMF      0x2c,0x1,0x0                                                                                    
000b8a   0e00     MOVLW     0x0                                                                                             
000b8c   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
000b8e   c02b     MOVFF     0x2b,0xfde                                                                                      
000b90   ffde                                                                                                               
000b92   c02c     MOVFF     0x2c,0xfdd                                                                                      
000b94   ffdd                                                                                                               
000b96   cfd9     MOVFF     0xfd9,0xfe9    	    hold_data /= 100;                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000b98   ffe9                                                                                                               
000b9a   cfda     MOVFF     0xfda,0xfea                                                                                     
000b9c   ffea                                                                                                               
000b9e   0e64     MOVLW     0x64                                                                                            
000ba0   6e22     MOVWF     0x22,0x0                                                                                        
000ba2   6a23     CLRF      0x23,0x0                                                                                        
000ba4   cfee     MOVFF     0xfee,0x1d                                                                                      
000ba6   f01d                                                                                                               
000ba8   cfed     MOVFF     0xfed,0x1e                                                                                      
000baa   f01e                                                                                                               
000bac   ecad     CALL      0x4b5a,0x0                                                                                      
000bae   f025                                                                                                               
000bb0   c01d     MOVFF     0x1d,0xfee                                                                                      
000bb2   ffee                                                                                                               
000bb4   c01e     MOVFF     0x1e,0xfed                                                                                      
000bb6   ffed                                                                                                               
000bb8   0e7f     MOVLW     0x7f           	    hold_data += 127;                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000bba   26de     ADDWF     0xde,0x1,0x0                                                                                    
000bbc   0e00     MOVLW     0x0                                                                                             
000bbe   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		/*This section assigns left drive the hold data value and the right drive value the oppisite value*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000bc0   cfde     MOVFF     0xfde,0x2b     		*pwmR = (127 - hold_data) + 127;                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000bc2   f02b                                                                                                               
000bc4   cfdd     MOVFF     0xfdd,0x2c                                                                                      
000bc6   f02c                                                                                                               
000bc8   0e7f     MOVLW     0x7f                                                                                            
000bca   80d8     BSF       0xd8,0x0,0x0                                                                                    
000bcc   562b     SUBFWB    0x2b,0x1,0x0                                                                                    
000bce   0e00     MOVLW     0x0                                                                                             
000bd0   562c     SUBFWB    0x2c,0x1,0x0                                                                                    
000bd2   0e7f     MOVLW     0x7f                                                                                            
000bd4   262b     ADDWF     0x2b,0x1,0x0                                                                                    
000bd6   0e00     MOVLW     0x0                                                                                             
000bd8   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
000bda   0ef9     MOVLW     0xf9                                                                                            
000bdc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000bde   ffe9                                                                                                               
000be0   0efa     MOVLW     0xfa                                                                                            
000be2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000be4   ffea                                                                                                               
000be6   c02b     MOVFF     0x2b,0xfef                                                                                      
000be8   ffef                                                                                                               
000bea   0efb     MOVLW     0xfb           		*pwmL = hold_data;                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000bec   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000bee   ffe9                                                                                                               
000bf0   0efc     MOVLW     0xfc                                                                                            
000bf2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000bf4   ffea                                                                                                               
000bf6   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000bf8   ffef                                                                                                               
                                           	 }                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                /*If the xaxis is greater than 127 + xdead, then the robot will turn right*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000bfa   d0f3     BRA       0xde2              else if (xaxis  > 127 + xdead)                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000bfc   0efe     MOVLW     0xfe                                                                                            
000bfe   50db     MOVF      0xdb,0x0,0x0                                                                                    
000c00   0889     SUBLW     0x89                                                                                            
000c02   e24e     BC        0xca0                                                                                           
                                           	     {                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		      /*this next section will perform the reduction equation*/                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c04   0efe     MOVLW     0xfe             		      hold_data = xaxis - 127;                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c06   50db     MOVF      0xdb,0x0,0x0                                                                                    
000c08   0f81     ADDLW     0x81                                                                                            
000c0a   6ede     MOVWF     0xde,0x0                                                                                        
000c0c   6add     CLRF      0xdd,0x0                                                                                        
000c0e   0ef8     MOVLW     0xf8           		      hold_data *= reduction;                                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c10   50db     MOVF      0xdb,0x0,0x0                                                                                    
000c12   6e2b     MOVWF     0x2b,0x0                                                                                        
000c14   6a2c     CLRF      0x2c,0x0                                                                                        
000c16   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
000c18   ffe9                                                                                                               
000c1a   cfda     MOVFF     0xfda,0xfea                                                                                     
000c1c   ffea                                                                                                               
000c1e   c02b     MOVFF     0x2b,0x22                                                                                       
000c20   f022                                                                                                               
000c22   c02c     MOVFF     0x2c,0x23                                                                                       
000c24   f023                                                                                                               
000c26   cfee     MOVFF     0xfee,0x1d                                                                                      
000c28   f01d                                                                                                               
000c2a   cfed     MOVFF     0xfed,0x1e                                                                                      
000c2c   f01e                                                                                                               
000c2e   ec34     CALL      0x4c68,0x0                                                                                      
000c30   f026                                                                                                               
000c32   c01b     MOVFF     0x1b,0xfee                                                                                      
000c34   ffee                                                                                                               
000c36   c01c     MOVFF     0x1c,0xfed                                                                                      
000c38   ffed                                                                                                               
000c3a   cfd9     MOVFF     0xfd9,0xfe9    		      hold_data /= 100;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c3c   ffe9                                                                                                               
000c3e   cfda     MOVFF     0xfda,0xfea                                                                                     
000c40   ffea                                                                                                               
000c42   0e64     MOVLW     0x64                                                                                            
000c44   6e22     MOVWF     0x22,0x0                                                                                        
000c46   6a23     CLRF      0x23,0x0                                                                                        
000c48   cfee     MOVFF     0xfee,0x1d                                                                                      
000c4a   f01d                                                                                                               
000c4c   cfed     MOVFF     0xfed,0x1e                                                                                      
000c4e   f01e                                                                                                               
000c50   ecad     CALL      0x4b5a,0x0                                                                                      
000c52   f025                                                                                                               
000c54   c01d     MOVFF     0x1d,0xfee                                                                                      
000c56   ffee                                                                                                               
000c58   c01e     MOVFF     0x1e,0xfed                                                                                      
000c5a   ffed                                                                                                               
000c5c   0e7f     MOVLW     0x7f           		      hold_data += 127;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c5e   26de     ADDWF     0xde,0x1,0x0                                                                                    
000c60   0e00     MOVLW     0x0                                                                                             
000c62   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                           		      /*This section assigns right drive the hold data value and the left drive value the oppisite value*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c64   cfde     MOVFF     0xfde,0x2b     	          *pwmR = 127 - (hold_data - 127);                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c66   f02b                                                                                                               
000c68   cfdd     MOVFF     0xfdd,0x2c                                                                                      
000c6a   f02c                                                                                                               
000c6c   0e7f     MOVLW     0x7f                                                                                            
000c6e   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
000c70   0e00     MOVLW     0x0                                                                                             
000c72   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
000c74   0e7f     MOVLW     0x7f                                                                                            
000c76   80d8     BSF       0xd8,0x0,0x0                                                                                    
000c78   562b     SUBFWB    0x2b,0x1,0x0                                                                                    
000c7a   0e00     MOVLW     0x0                                                                                             
000c7c   562c     SUBFWB    0x2c,0x1,0x0                                                                                    
000c7e   0ef9     MOVLW     0xf9                                                                                            
000c80   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000c82   ffe9                                                                                                               
000c84   0efa     MOVLW     0xfa                                                                                            
000c86   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000c88   ffea                                                                                                               
000c8a   c02b     MOVFF     0x2b,0xfef                                                                                      
000c8c   ffef                                                                                                               
000c8e   0efb     MOVLW     0xfb           	          *pwmL = hold_data;                                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c90   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000c92   ffe9                                                                                                               
000c94   0efc     MOVLW     0xfc                                                                                            
000c96   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000c98   ffea                                                                                                               
000c9a   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000c9c   ffef                                                                                                               
                                           	     }                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000c9e   d0a1     BRA       0xde2              	else													//This next section is for foward motion                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	     {                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ca0   0e75     MOVLW     0x75           			if (yaxis < 127 - ydead || yaxis > 127 + ydead)		//will foward motion occur?  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ca2   6ef3     MOVWF     0xf3,0x0                                                                                        
000ca4   0efd     MOVLW     0xfd                                                                                            
000ca6   cfdb     MOVFF     0xfdb,0xff4                                                                                     
000ca8   fff4                                                                                                               
000caa   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000cac   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
000cae   e305     BNC       0xcba                                                                                           
000cb0   0efd     MOVLW     0xfd                                                                                            
000cb2   50db     MOVF      0xdb,0x0,0x0                                                                                    
000cb4   0889     SUBLW     0x89                                                                                            
000cb6   e301     BNC       0xcba                                                                                           
000cb8   d094     BRA       0xde2                                                                                           
                                           		    {                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000cba   0e75     MOVLW     0x75           	        	if (yaxis < 127 - ydead)						//is the yaxis value less than 127 - ydead? C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000cbc   6ef3     MOVWF     0xf3,0x0                                                                                        
000cbe   0efd     MOVLW     0xfd                                                                                            
000cc0   cfdb     MOVFF     0xfdb,0xff4                                                                                     
000cc2   fff4                                                                                                               
000cc4   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000cc6   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
000cc8   e237     BC        0xd38                                                                                           
                                           	         	{                                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	                 /*this next section will perform the reduction equation*/      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000cca   0efd     MOVLW     0xfd           					 hold_data = -1 * yaxis + 127;                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ccc   50db     MOVF      0xdb,0x0,0x0                                                                                    
000cce   0dff     MULLW     0xff                                                                                            
000cd0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000cd2   0f7f     ADDLW     0x7f                                                                                            
000cd4   6ede     MOVWF     0xde,0x0                                                                                        
000cd6   6add     CLRF      0xdd,0x0                                                                                        
000cd8   0ef8     MOVLW     0xf8           	                 hold_data = hold_data * reduction * -1;                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000cda   50db     MOVF      0xdb,0x0,0x0                                                                                    
000cdc   6e2d     MOVWF     0x2d,0x0                                                                                        
000cde   6a2e     CLRF      0x2e,0x0                                                                                        
000ce0   c02d     MOVFF     0x2d,0x1d                                                                                       
000ce2   f01d                                                                                                               
000ce4   c02e     MOVFF     0x2e,0x1e                                                                                       
000ce6   f01e                                                                                                               
000ce8   cfde     MOVFF     0xfde,0x22                                                                                      
000cea   f022                                                                                                               
000cec   cfdd     MOVFF     0xfdd,0x23                                                                                      
000cee   f023                                                                                                               
000cf0   ec07     CALL      0x4c0e,0x0                                                                                      
000cf2   f026                                                                                                               
000cf4   c01b     MOVFF     0x1b,0x2b                                                                                       
000cf6   f02b                                                                                                               
000cf8   c01c     MOVFF     0x1c,0x2c                                                                                       
000cfa   f02c                                                                                                               
000cfc   6c2b     NEGF      0x2b,0x0                                                                                        
000cfe   1e2c     COMF      0x2c,0x1,0x0                                                                                    
000d00   0e00     MOVLW     0x0                                                                                             
000d02   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
000d04   c02b     MOVFF     0x2b,0xfde                                                                                      
000d06   ffde                                                                                                               
000d08   c02c     MOVFF     0x2c,0xfdd                                                                                      
000d0a   ffdd                                                                                                               
000d0c   cfd9     MOVFF     0xfd9,0xfe9    	                 hold_data /= 100;                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d0e   ffe9                                                                                                               
000d10   cfda     MOVFF     0xfda,0xfea                                                                                     
000d12   ffea                                                                                                               
000d14   0e64     MOVLW     0x64                                                                                            
000d16   6e22     MOVWF     0x22,0x0                                                                                        
000d18   6a23     CLRF      0x23,0x0                                                                                        
000d1a   cfee     MOVFF     0xfee,0x1d                                                                                      
000d1c   f01d                                                                                                               
000d1e   cfed     MOVFF     0xfed,0x1e                                                                                      
000d20   f01e                                                                                                               
000d22   ecad     CALL      0x4b5a,0x0                                                                                      
000d24   f025                                                                                                               
000d26   c01d     MOVFF     0x1d,0xfee                                                                                      
000d28   ffee                                                                                                               
000d2a   c01e     MOVFF     0x1e,0xfed                                                                                      
000d2c   ffed                                                                                                               
000d2e   0e7f     MOVLW     0x7f           	                 hold_data += 127;                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d30   26de     ADDWF     0xde,0x1,0x0                                                                                    
000d32   0e00     MOVLW     0x0                                                                                             
000d34   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                           	            }                                                                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d36   d045     BRA       0xdc2          	 			else if (yaxis > 127 + ydead)					//is the yaxis value greater than 127 + ydead C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d38   0efd     MOVLW     0xfd                                                                                            
000d3a   50db     MOVF      0xdb,0x0,0x0                                                                                    
000d3c   0889     SUBLW     0x89                                                                                            
000d3e   e231     BC        0xda2                                                                                           
                                           	      			 {                                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           						/*this next section will perform the reduction equation*/                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d40   0efd     MOVLW     0xfd           		  				hold_data = yaxis - 127;                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d42   50db     MOVF      0xdb,0x0,0x0                                                                                    
000d44   0f81     ADDLW     0x81                                                                                            
000d46   6ede     MOVWF     0xde,0x0                                                                                        
000d48   6add     CLRF      0xdd,0x0                                                                                        
000d4a   0ef8     MOVLW     0xf8           		  				hold_data *= reduction;                                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d4c   50db     MOVF      0xdb,0x0,0x0                                                                                    
000d4e   6e2b     MOVWF     0x2b,0x0                                                                                        
000d50   6a2c     CLRF      0x2c,0x0                                                                                        
000d52   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
000d54   ffe9                                                                                                               
000d56   cfda     MOVFF     0xfda,0xfea                                                                                     
000d58   ffea                                                                                                               
000d5a   c02b     MOVFF     0x2b,0x22                                                                                       
000d5c   f022                                                                                                               
000d5e   c02c     MOVFF     0x2c,0x23                                                                                       
000d60   f023                                                                                                               
000d62   cfee     MOVFF     0xfee,0x1d                                                                                      
000d64   f01d                                                                                                               
000d66   cfed     MOVFF     0xfed,0x1e                                                                                      
000d68   f01e                                                                                                               
000d6a   ec34     CALL      0x4c68,0x0                                                                                      
000d6c   f026                                                                                                               
000d6e   c01b     MOVFF     0x1b,0xfee                                                                                      
000d70   ffee                                                                                                               
000d72   c01c     MOVFF     0x1c,0xfed                                                                                      
000d74   ffed                                                                                                               
000d76   cfd9     MOVFF     0xfd9,0xfe9    		  				hold_data /= 100;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d78   ffe9                                                                                                               
000d7a   cfda     MOVFF     0xfda,0xfea                                                                                     
000d7c   ffea                                                                                                               
000d7e   0e64     MOVLW     0x64                                                                                            
000d80   6e22     MOVWF     0x22,0x0                                                                                        
000d82   6a23     CLRF      0x23,0x0                                                                                        
000d84   cfee     MOVFF     0xfee,0x1d                                                                                      
000d86   f01d                                                                                                               
000d88   cfed     MOVFF     0xfed,0x1e                                                                                      
000d8a   f01e                                                                                                               
000d8c   ecad     CALL      0x4b5a,0x0                                                                                      
000d8e   f025                                                                                                               
000d90   c01d     MOVFF     0x1d,0xfee                                                                                      
000d92   ffee                                                                                                               
000d94   c01e     MOVFF     0x1e,0xfed                                                                                      
000d96   ffed                                                                                                               
000d98   0e7f     MOVLW     0x7f           		  				hold_data += 127;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000d9a   26de     ADDWF     0xde,0x1,0x0                                                                                    
000d9c   0e00     MOVLW     0x0                                                                                             
000d9e   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                           		             }                                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000da0   d010     BRA       0xdc2          					else										//else the drive must be nuetral currently                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           					  {                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000da2   0efb     MOVLW     0xfb           						  *pwmL = 127;                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000da4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000da6   ffe9                                                                                                               
000da8   0efc     MOVLW     0xfc                                                                                            
000daa   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000dac   ffea                                                                                                               
000dae   0e7f     MOVLW     0x7f                                                                                            
000db0   6eef     MOVWF     0xef,0x0                                                                                        
000db2   0ef9     MOVLW     0xf9           						  *pwmR = 127;                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000db4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000db6   ffe9                                                                                                               
000db8   0efa     MOVLW     0xfa                                                                                            
000dba   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000dbc   ffea                                                                                                               
000dbe   0e7f     MOVLW     0x7f                                                                                            
000dc0   6eef     MOVWF     0xef,0x0                                                                                        
                                           					  }                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000dc2   0efb     MOVLW     0xfb           	 			*pwmL = hold_data;								//assign hold_data value to pwmL                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000dc4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000dc6   ffe9                                                                                                               
000dc8   0efc     MOVLW     0xfc                                                                                            
000dca   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000dcc   ffea                                                                                                               
000dce   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000dd0   ffef                                                                                                               
000dd2   0ef9     MOVLW     0xf9           				*pwmR = hold_data;								//assign hold_data value to pwmR                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000dd4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000dd6   ffe9                                                                                                               
000dd8   0efa     MOVLW     0xfa                                                                                            
000dda   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000ddc   ffea                                                                                                               
000dde   cfdf     MOVFF     0xfdf,0xfef                                                                                     
000de0   ffef                                                                                                               
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               	}                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /*This is the debug statement for the one stick drive. Should it be needed, activate it in chopshop.h*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #if ONE_STICK_DEBUG                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               printf("\rInputs x/y: %d / %d. Reduction: %d Outputs-> left:%d right:%d.", xaxis, yaxis, reduction,*pwmL,*pwmR); C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000de2   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000de4   ffe1                                                                                                               
000de6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000de8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000dea   ffd9                                                                                                               
000dec   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by: 	Robert Harris - General coding and debugging                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				David "Squishy" Zaharee - Original Concept                                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Date modified:  1-27-2006                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name:  Squishy_Drive_1stickdrive                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:     *L_output, *R_output, reduction                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns: 		(As pointers) L_output, R_output                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose: 		This function allows for intuitive 1-stick drive                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Notes:	 		reduction (must be 0 to 100)                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000dee   cfd9     MOVFF     0xfd9,0xfe6    void Squishy_Drive_1stickdrive(unsigned char *L_output, unsigned char *R_output, unsigned char reduction) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000df0   ffe6                                                                                                               
000df2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000df4   ffd9                                                                                                               
000df6   0e0b     MOVLW     0xb                                                                                             
000df8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           char x;							// x-axis in -127 to 127 range	                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           char y;							// y-axis in -127 to 127 range	                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           unsigned char abs_x;			// absolute value of x                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           unsigned char abs_y;			// absolute value of y                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           char untranslated_output_L;		// Left output in -127 to 127 range                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           char untranslated_output_R;		// Right output in -127 to 127 range                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           unsigned char case_number;		// Holding Value created by branches of nested if function tree used for later switch statement C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           int hold_data;					// Holding Value for reduction equations                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           int x_is_backwards_so_this_extra_variable_is_necessary;                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000dfa   0e7f     MOVLW     0x7f           	x_is_backwards_so_this_extra_variable_is_necessary = (((p1_x - 127)*-1) + 127); C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000dfc   0102     MOVLB     0x2                                                                                             
000dfe   5d82     SUBWF     0x82,0x0,0x1                                                                                    
000e00   0dff     MULLW     0xff                                                                                            
000e02   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000e04   0f7f     ADDLW     0x7f                                                                                            
000e06   6ee6     MOVWF     0xe6,0x0                                                                                        
000e08   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000e0a   0f09     ADDLW     0x9                                                                                             
000e0c   6ee9     MOVWF     0xe9,0x0                                                                                        
000e0e   cfda     MOVFF     0xfda,0xfea                                                                                     
000e10   ffea                                                                                                               
000e12   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e14   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000e16   6eee     MOVWF     0xee,0x0                                                                                        
000e18   6aed     CLRF      0xed,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	 /*For input one, are we in the dead zone? If we are, set the left value to 127, which is neutral*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000e1a   0e78     MOVLW     0x78           	    if((p1_x >= (127 - dead_zone)) && (p1_x <= (127 + dead_zone)))              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000e1c   5d82     SUBWF     0x82,0x0,0x1                                                                                    
000e1e   e30b     BNC       0xe36                                                                                           
000e20   5182     MOVF      0x82,0x0,0x1                                                                                    
000e22   0886     SUBLW     0x86                                                                                            
000e24   e308     BNC       0xe36                                                                                           
000e26   0e7f     MOVLW     0x7f           	       hold_data = 127;                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000e28   6ef3     MOVWF     0xf3,0x0                                                                                        
000e2a   0e07     MOVLW     0x7                                                                                             
000e2c   cff3     MOVFF     0xff3,0xfdb                                                                                     
000e2e   ffdb                                                                                                               
000e30   0e08     MOVLW     0x8                                                                                             
000e32   6adb     CLRF      0xdb,0x0                                                                                        
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       /*                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       This next set of code is the x reduction equation. This will reduce the input value by the amount C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       sent by the user from the parameter, reduction. This allows the driver to have greater control of C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       the robot without needing to worry about holding the joystick at other positions than full. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       */                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000e34   d0af     BRA       0xf94           		else if (x_is_backwards_so_this_extra_variable_is_necessary < 127)            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000e36   0e09     MOVLW     0x9                                                                                             
000e38   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000e3a   f02b                                                                                                               
000e3c   0e0a     MOVLW     0xa                                                                                             
000e3e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000e40   f02c                                                                                                               
000e42   90d8     BCF       0xd8,0x0,0x0                                                                                    
000e44   502c     MOVF      0x2c,0x0,0x0                                                                                    
000e46   e604     BN        0xe50                                                                                           
000e48   0e7f     MOVLW     0x7f                                                                                            
000e4a   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
000e4c   0e00     MOVLW     0x0                                                                                             
000e4e   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
000e50   e252     BC        0xef6                                                                                           
                                           			 {	                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000e52   681d     SETF      0x1d,0x0       			     hold_data = -1 * x_is_backwards_so_this_extra_variable_is_necessary + 127; C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000e54   681e     SETF      0x1e,0x0                                                                                        
000e56   0e09     MOVLW     0x9                                                                                             
000e58   cfdb     MOVFF     0xfdb,0x22                                                                                      
000e5a   f022                                                                                                               
000e5c   0e0a     MOVLW     0xa                                                                                             
000e5e   cfdb     MOVFF     0xfdb,0x23                                                                                      
000e60   f023                                                                                                               
000e62   ec07     CALL      0x4c0e,0x0                                                                                      
000e64   f026                                                                                                               
000e66   c01b     MOVFF     0x1b,0x2b                                                                                       
000e68   f02b                                                                                                               
000e6a   c01c     MOVFF     0x1c,0x2c                                                                                       
000e6c   f02c                                                                                                               
000e6e   0e7f     MOVLW     0x7f                                                                                            
000e70   262b     ADDWF     0x2b,0x1,0x0                                                                                    
000e72   0e00     MOVLW     0x0                                                                                             
000e74   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
000e76   0e07     MOVLW     0x7                                                                                             
000e78   c02b     MOVFF     0x2b,0xfdb                                                                                      
000e7a   ffdb                                                                                                               
000e7c   0e08     MOVLW     0x8                                                                                             
000e7e   c02c     MOVFF     0x2c,0xfdb                                                                                      
000e80   ffdb                                                                                                               
000e82   0efa     MOVLW     0xfa           			     hold_data = hold_data * reduction * -1;                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000e84   50db     MOVF      0xdb,0x0,0x0                                                                                    
000e86   6e2d     MOVWF     0x2d,0x0                                                                                        
000e88   6a2e     CLRF      0x2e,0x0                                                                                        
000e8a   0e07     MOVLW     0x7                                                                                             
000e8c   cfdb     MOVFF     0xfdb,0x1d                                                                                      
000e8e   f01d                                                                                                               
000e90   0e08     MOVLW     0x8                                                                                             
000e92   cfdb     MOVFF     0xfdb,0x1e                                                                                      
000e94   f01e                                                                                                               
000e96   c02d     MOVFF     0x2d,0x22                                                                                       
000e98   f022                                                                                                               
000e9a   c02e     MOVFF     0x2e,0x23                                                                                       
000e9c   f023                                                                                                               
000e9e   ec07     CALL      0x4c0e,0x0                                                                                      
000ea0   f026                                                                                                               
000ea2   c01b     MOVFF     0x1b,0x2b                                                                                       
000ea4   f02b                                                                                                               
000ea6   c01c     MOVFF     0x1c,0x2c                                                                                       
000ea8   f02c                                                                                                               
000eaa   6c2b     NEGF      0x2b,0x0                                                                                        
000eac   1e2c     COMF      0x2c,0x1,0x0                                                                                    
000eae   0e00     MOVLW     0x0                                                                                             
000eb0   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
000eb2   0e07     MOVLW     0x7                                                                                             
000eb4   c02b     MOVFF     0x2b,0xfdb                                                                                      
000eb6   ffdb                                                                                                               
000eb8   0e08     MOVLW     0x8                                                                                             
000eba   c02c     MOVFF     0x2c,0xfdb                                                                                      
000ebc   ffdb                                                                                                               
000ebe   50d9     MOVF      0xd9,0x0,0x0   			     hold_data /= 100;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ec0   0f07     ADDLW     0x7                                                                                             
000ec2   6ee9     MOVWF     0xe9,0x0                                                                                        
000ec4   cfda     MOVFF     0xfda,0xfea                                                                                     
000ec6   ffea                                                                                                               
000ec8   0e64     MOVLW     0x64                                                                                            
000eca   6e22     MOVWF     0x22,0x0                                                                                        
000ecc   6a23     CLRF      0x23,0x0                                                                                        
000ece   cfee     MOVFF     0xfee,0x1d                                                                                      
000ed0   f01d                                                                                                               
000ed2   cfed     MOVFF     0xfed,0x1e                                                                                      
000ed4   f01e                                                                                                               
000ed6   ecad     CALL      0x4b5a,0x0                                                                                      
000ed8   f025                                                                                                               
000eda   c01d     MOVFF     0x1d,0xfee                                                                                      
000edc   ffee                                                                                                               
000ede   c01e     MOVFF     0x1e,0xfed                                                                                      
000ee0   ffed                                                                                                               
000ee2   50d9     MOVF      0xd9,0x0,0x0   	 	         hold_data += 127;                                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ee4   0f07     ADDLW     0x7                                                                                             
000ee6   6ee9     MOVWF     0xe9,0x0                                                                                        
000ee8   cfda     MOVFF     0xfda,0xfea                                                                                     
000eea   ffea                                                                                                               
000eec   0e7f     MOVLW     0x7f                                                                                            
000eee   26ee     ADDWF     0xee,0x1,0x0                                                                                    
000ef0   0e00     MOVLW     0x0                                                                                             
000ef2   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                              	 		 }                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ef4   d04f     BRA       0xf94          		 else if (x_is_backwards_so_this_extra_variable_is_necessary > 127)            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000ef6   0e09     MOVLW     0x9                                                                                             
000ef8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000efa   f02b                                                                                                               
000efc   0e0a     MOVLW     0xa                                                                                             
000efe   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000f00   f02c                                                                                                               
000f02   342c     RLCF      0x2c,0x0,0x0                                                                                    
000f04   e204     BC        0xf0e                                                                                           
000f06   502b     MOVF      0x2b,0x0,0x0                                                                                    
000f08   087f     SUBLW     0x7f                                                                                            
000f0a   0e00     MOVLW     0x0                                                                                             
000f0c   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
000f0e   e242     BC        0xf94                                                                                           
                                           		      {                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000f10   0e09     MOVLW     0x9            			       hold_data = x_is_backwards_so_this_extra_variable_is_necessary - 127;  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000f12   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000f14   f02b                                                                                                               
000f16   0e0a     MOVLW     0xa                                                                                             
000f18   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000f1a   f02c                                                                                                               
000f1c   0e7f     MOVLW     0x7f                                                                                            
000f1e   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
000f20   0e00     MOVLW     0x0                                                                                             
000f22   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
000f24   0e07     MOVLW     0x7                                                                                             
000f26   c02b     MOVFF     0x2b,0xfdb                                                                                      
000f28   ffdb                                                                                                               
000f2a   0e08     MOVLW     0x8                                                                                             
000f2c   c02c     MOVFF     0x2c,0xfdb                                                                                      
000f2e   ffdb                                                                                                               
000f30   0efa     MOVLW     0xfa           			       hold_data *= reduction;                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000f32   50db     MOVF      0xdb,0x0,0x0                                                                                    
000f34   6e2b     MOVWF     0x2b,0x0                                                                                        
000f36   6a2c     CLRF      0x2c,0x0                                                                                        
000f38   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000f3a   0f07     ADDLW     0x7                                                                                             
000f3c   6ee9     MOVWF     0xe9,0x0                                                                                        
000f3e   cfda     MOVFF     0xfda,0xfea                                                                                     
000f40   ffea                                                                                                               
000f42   c02b     MOVFF     0x2b,0x22                                                                                       
000f44   f022                                                                                                               
000f46   c02c     MOVFF     0x2c,0x23                                                                                       
000f48   f023                                                                                                               
000f4a   cfee     MOVFF     0xfee,0x1d                                                                                      
000f4c   f01d                                                                                                               
000f4e   cfed     MOVFF     0xfed,0x1e                                                                                      
000f50   f01e                                                                                                               
000f52   ec34     CALL      0x4c68,0x0                                                                                      
000f54   f026                                                                                                               
000f56   c01b     MOVFF     0x1b,0xfee                                                                                      
000f58   ffee                                                                                                               
000f5a   c01c     MOVFF     0x1c,0xfed                                                                                      
000f5c   ffed                                                                                                               
000f5e   50d9     MOVF      0xd9,0x0,0x0   			       hold_data /= 100;                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000f60   0f07     ADDLW     0x7                                                                                             
000f62   6ee9     MOVWF     0xe9,0x0                                                                                        
000f64   cfda     MOVFF     0xfda,0xfea                                                                                     
000f66   ffea                                                                                                               
000f68   0e64     MOVLW     0x64                                                                                            
000f6a   6e22     MOVWF     0x22,0x0                                                                                        
000f6c   6a23     CLRF      0x23,0x0                                                                                        
000f6e   cfee     MOVFF     0xfee,0x1d                                                                                      
000f70   f01d                                                                                                               
000f72   cfed     MOVFF     0xfed,0x1e                                                                                      
000f74   f01e                                                                                                               
000f76   ecad     CALL      0x4b5a,0x0                                                                                      
000f78   f025                                                                                                               
000f7a   c01d     MOVFF     0x1d,0xfee                                                                                      
000f7c   ffee                                                                                                               
000f7e   c01e     MOVFF     0x1e,0xfed                                                                                      
000f80   ffed                                                                                                               
000f82   50d9     MOVF      0xd9,0x0,0x0   			       hold_data += 127;                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000f84   0f07     ADDLW     0x7                                                                                             
000f86   6ee9     MOVWF     0xe9,0x0                                                                                        
000f88   cfda     MOVFF     0xfda,0xfea                                                                                     
000f8a   ffea                                                                                                               
000f8c   0e7f     MOVLW     0x7f                                                                                            
000f8e   26ee     ADDWF     0xee,0x1,0x0                                                                                    
000f90   0e00     MOVLW     0x0                                                                                             
000f92   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                           	 	      }                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000f94   0e07     MOVLW     0x7            	x = (hold_data - 127); //sets x to a -127 to +127 range                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000f96   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000f98   f02b                                                                                                               
000f9a   0e08     MOVLW     0x8                                                                                             
000f9c   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000f9e   f02c                                                                                                               
000fa0   0e7f     MOVLW     0x7f                                                                                            
000fa2   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
000fa4   0e00     MOVLW     0x0                                                                                             
000fa6   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
000fa8   502b     MOVF      0x2b,0x0,0x0                                                                                    
000faa   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	    /*For input two, are we in the dead zone? If we are, set the left value to 127, which is neutral*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000fac   0e78     MOVLW     0x78           	    if(p1_y >= 127 - dead_zone && p1_y <= 127 + dead_zone)                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000fae   0102     MOVLB     0x2                                                                                             
000fb0   5d7e     SUBWF     0x7e,0x0,0x1                                                                                    
000fb2   e30b     BNC       0xfca                                                                                           
000fb4   517e     MOVF      0x7e,0x0,0x1                                                                                    
000fb6   0886     SUBLW     0x86                                                                                            
000fb8   e308     BNC       0xfca                                                                                           
000fba   0e7f     MOVLW     0x7f           	       hold_data = 127;                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000fbc   6ef3     MOVWF     0xf3,0x0                                                                                        
000fbe   0e07     MOVLW     0x7                                                                                             
000fc0   cff3     MOVFF     0xff3,0xfdb                                                                                     
000fc2   ffdb                                                                                                               
000fc4   0e08     MOVLW     0x8                                                                                             
000fc6   6adb     CLRF      0xdb,0x0                                                                                        
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       /*                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       This next set of code is the y reduction equation. This will reduce the input value by the amount C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       sent by the user from the parameter, reduction. This allows the driver to have greater control of C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       the robot without needing to worry about holding the joystick at other positions than full. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       */                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000fc8   d08c     BRA       0x10e2         	     else if (p1_y < 127)                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000fca   0e7f     MOVLW     0x7f                                                                                            
000fcc   5d7e     SUBWF     0x7e,0x0,0x1                                                                                    
000fce   e248     BC        0x1060                                                                                          
                                           		      {                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000fd0   0eff     MOVLW     0xff           		          hold_data = -1 * p1_y + 127;                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000fd2   037e     MULWF     0x7e,0x1                                                                                        
000fd4   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000fd6   0f7f     ADDLW     0x7f                                                                                            
000fd8   6ee6     MOVWF     0xe6,0x0                                                                                        
000fda   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000fdc   0f07     ADDLW     0x7                                                                                             
000fde   6ee9     MOVWF     0xe9,0x0                                                                                        
000fe0   cfda     MOVFF     0xfda,0xfea                                                                                     
000fe2   ffea                                                                                                               
000fe4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000fe6   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000fe8   6eee     MOVWF     0xee,0x0                                                                                        
000fea   6aed     CLRF      0xed,0x0                                                                                        
000fec   0efa     MOVLW     0xfa           		          hold_data = hold_data * reduction * -1;                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
000fee   50db     MOVF      0xdb,0x0,0x0                                                                                    
000ff0   6e2d     MOVWF     0x2d,0x0                                                                                        
000ff2   6a2e     CLRF      0x2e,0x0                                                                                        
000ff4   0e07     MOVLW     0x7                                                                                             
000ff6   cfdb     MOVFF     0xfdb,0x1d                                                                                      
000ff8   f01d                                                                                                               
000ffa   0e08     MOVLW     0x8                                                                                             
000ffc   cfdb     MOVFF     0xfdb,0x1e                                                                                      
000ffe   f01e                                                                                                               
001000   c02d     MOVFF     0x2d,0x22                                                                                       
001002   f022                                                                                                               
001004   c02e     MOVFF     0x2e,0x23                                                                                       
001006   f023                                                                                                               
001008   ec07     CALL      0x4c0e,0x0                                                                                      
00100a   f026                                                                                                               
00100c   c01b     MOVFF     0x1b,0x2b                                                                                       
00100e   f02b                                                                                                               
001010   c01c     MOVFF     0x1c,0x2c                                                                                       
001012   f02c                                                                                                               
001014   6c2b     NEGF      0x2b,0x0                                                                                        
001016   1e2c     COMF      0x2c,0x1,0x0                                                                                    
001018   0e00     MOVLW     0x0                                                                                             
00101a   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
00101c   0e07     MOVLW     0x7                                                                                             
00101e   c02b     MOVFF     0x2b,0xfdb                                                                                      
001020   ffdb                                                                                                               
001022   0e08     MOVLW     0x8                                                                                             
001024   c02c     MOVFF     0x2c,0xfdb                                                                                      
001026   ffdb                                                                                                               
001028   50d9     MOVF      0xd9,0x0,0x0   		          hold_data /= 100;                                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00102a   0f07     ADDLW     0x7                                                                                             
00102c   6ee9     MOVWF     0xe9,0x0                                                                                        
00102e   cfda     MOVFF     0xfda,0xfea                                                                                     
001030   ffea                                                                                                               
001032   0e64     MOVLW     0x64                                                                                            
001034   6e22     MOVWF     0x22,0x0                                                                                        
001036   6a23     CLRF      0x23,0x0                                                                                        
001038   cfee     MOVFF     0xfee,0x1d                                                                                      
00103a   f01d                                                                                                               
00103c   cfed     MOVFF     0xfed,0x1e                                                                                      
00103e   f01e                                                                                                               
001040   ecad     CALL      0x4b5a,0x0                                                                                      
001042   f025                                                                                                               
001044   c01d     MOVFF     0x1d,0xfee                                                                                      
001046   ffee                                                                                                               
001048   c01e     MOVFF     0x1e,0xfed                                                                                      
00104a   ffed                                                                                                               
00104c   50d9     MOVF      0xd9,0x0,0x0   		          hold_data += 127;                                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00104e   0f07     ADDLW     0x7                                                                                             
001050   6ee9     MOVWF     0xe9,0x0                                                                                        
001052   cfda     MOVFF     0xfda,0xfea                                                                                     
001054   ffea                                                                                                               
001056   0e7f     MOVLW     0x7f                                                                                            
001058   26ee     ADDWF     0xee,0x1,0x0                                                                                    
00105a   0e00     MOVLW     0x0                                                                                             
00105c   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                           			  }                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00105e   d041     BRA       0x10e2         		 else if (p1_y > 127)                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001060   517e     MOVF      0x7e,0x0,0x1                                                                                    
001062   087f     SUBLW     0x7f                                                                                            
001064   e23e     BC        0x10e2                                                                                          
                                           	 	      {                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001066   0e7f     MOVLW     0x7f           		          hold_data = p1_y - 127;                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001068   5d7e     SUBWF     0x7e,0x0,0x1                                                                                    
00106a   6ee6     MOVWF     0xe6,0x0                                                                                        
00106c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00106e   0f07     ADDLW     0x7                                                                                             
001070   6ee9     MOVWF     0xe9,0x0                                                                                        
001072   cfda     MOVFF     0xfda,0xfea                                                                                     
001074   ffea                                                                                                               
001076   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001078   50e7     MOVF      0xe7,0x0,0x0                                                                                    
00107a   6eee     MOVWF     0xee,0x0                                                                                        
00107c   6aed     CLRF      0xed,0x0                                                                                        
00107e   0efa     MOVLW     0xfa           	 	          hold_data *= reduction;                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001080   50db     MOVF      0xdb,0x0,0x0                                                                                    
001082   6e2b     MOVWF     0x2b,0x0                                                                                        
001084   6a2c     CLRF      0x2c,0x0                                                                                        
001086   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001088   0f07     ADDLW     0x7                                                                                             
00108a   6ee9     MOVWF     0xe9,0x0                                                                                        
00108c   cfda     MOVFF     0xfda,0xfea                                                                                     
00108e   ffea                                                                                                               
001090   c02b     MOVFF     0x2b,0x22                                                                                       
001092   f022                                                                                                               
001094   c02c     MOVFF     0x2c,0x23                                                                                       
001096   f023                                                                                                               
001098   cfee     MOVFF     0xfee,0x1d                                                                                      
00109a   f01d                                                                                                               
00109c   cfed     MOVFF     0xfed,0x1e                                                                                      
00109e   f01e                                                                                                               
0010a0   ec34     CALL      0x4c68,0x0                                                                                      
0010a2   f026                                                                                                               
0010a4   c01b     MOVFF     0x1b,0xfee                                                                                      
0010a6   ffee                                                                                                               
0010a8   c01c     MOVFF     0x1c,0xfed                                                                                      
0010aa   ffed                                                                                                               
0010ac   50d9     MOVF      0xd9,0x0,0x0   	 	          hold_data /= 100;                                                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0010ae   0f07     ADDLW     0x7                                                                                             
0010b0   6ee9     MOVWF     0xe9,0x0                                                                                        
0010b2   cfda     MOVFF     0xfda,0xfea                                                                                     
0010b4   ffea                                                                                                               
0010b6   0e64     MOVLW     0x64                                                                                            
0010b8   6e22     MOVWF     0x22,0x0                                                                                        
0010ba   6a23     CLRF      0x23,0x0                                                                                        
0010bc   cfee     MOVFF     0xfee,0x1d                                                                                      
0010be   f01d                                                                                                               
0010c0   cfed     MOVFF     0xfed,0x1e                                                                                      
0010c2   f01e                                                                                                               
0010c4   ecad     CALL      0x4b5a,0x0                                                                                      
0010c6   f025                                                                                                               
0010c8   c01d     MOVFF     0x1d,0xfee                                                                                      
0010ca   ffee                                                                                                               
0010cc   c01e     MOVFF     0x1e,0xfed                                                                                      
0010ce   ffed                                                                                                               
0010d0   50d9     MOVF      0xd9,0x0,0x0   	 	          hold_data += 127;                                                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0010d2   0f07     ADDLW     0x7                                                                                             
0010d4   6ee9     MOVWF     0xe9,0x0                                                                                        
0010d6   cfda     MOVFF     0xfda,0xfea                                                                                     
0010d8   ffea                                                                                                               
0010da   0e7f     MOVLW     0x7f                                                                                            
0010dc   26ee     ADDWF     0xee,0x1,0x0                                                                                    
0010de   0e00     MOVLW     0x0                                                                                             
0010e0   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                	      }                                                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0010e2   0e07     MOVLW     0x7            	y = (hold_data - 127); //sets y to a -127 to +127 range                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0010e4   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0010e6   f02b                                                                                                               
0010e8   0e08     MOVLW     0x8                                                                                             
0010ea   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0010ec   f02c                                                                                                               
0010ee   0e7f     MOVLW     0x7f                                                                                            
0010f0   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
0010f2   0e00     MOVLW     0x0                                                                                             
0010f4   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
0010f6   0e01     MOVLW     0x1                                                                                             
0010f8   c02b     MOVFF     0x2b,0xfdb                                                                                      
0010fa   ffdb                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0010fc   cfdf     MOVFF     0xfdf,0x2b     	abs_x = abs(x); //uses absolute value function to find variable for later mathematics C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0010fe   f02b                                                                                                               
001100   6a2c     CLRF      0x2c,0x0                                                                                        
001102   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
001104   682c     SETF      0x2c,0x0                                                                                        
001106   c02b     MOVFF     0x2b,0xfe6                                                                                      
001108   ffe6                                                                                                               
00110a   c02c     MOVFF     0x2c,0xfe6                                                                                      
00110c   ffe6                                                                                                               
00110e   da84     RCALL     0x1618                                                                                          
001110   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001112   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001114   0e02     MOVLW     0x2                                                                                             
001116   cff3     MOVFF     0xff3,0xfdb                                                                                     
001118   ffdb                                                                                                               
00111a   0e01     MOVLW     0x1            	abs_y = abs(y); //ditto                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00111c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00111e   f02b                                                                                                               
001120   6a2c     CLRF      0x2c,0x0                                                                                        
001122   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
001124   682c     SETF      0x2c,0x0                                                                                        
001126   c02b     MOVFF     0x2b,0xfe6                                                                                      
001128   ffe6                                                                                                               
00112a   c02c     MOVFF     0x2c,0xfe6                                                                                      
00112c   ffe6                                                                                                               
00112e   da74     RCALL     0x1618                                                                                          
001130   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001132   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001134   0e03     MOVLW     0x3                                                                                             
001136   cff3     MOVFF     0xff3,0xfdb                                                                                     
001138   ffdb                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00113a   0e01     MOVLW     0x1            	if (y > 0)  // this nested if statement determines which eigth of the co-ordinate plane the joystick is in, and sets case_number accordingly C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00113c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00113e   f02b                                                                                                               
001140   0e00     MOVLW     0x0                                                                                             
001142   6ee7     MOVWF     0xe7,0x0                                                                                        
001144   182b     XORWF     0x2b,0x0,0x0                                                                                    
001146   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001148   d002     BRA       0x114e                                                                                          
00114a   342b     RLCF      0x2b,0x0,0x0                                                                                    
00114c   d003     BRA       0x1154                                                                                          
00114e   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001150   80d8     BSF       0xd8,0x0,0x0                                                                                    
001152   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
001154   e235     BC        0x11c0                                                                                          
                                           		{		// so that the correct case is used in the following switch statement. These eigth sections of the co-ordinate plane are found by C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001156   cfdf     MOVFF     0xfdf,0x2b     		if (x > 0)     // the quadrants in half diagonally through the orgin           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001158   f02b                                                                                                               
00115a   0e00     MOVLW     0x0                                                                                             
00115c   6ee7     MOVWF     0xe7,0x0                                                                                        
00115e   182b     XORWF     0x2b,0x0,0x0                                                                                    
001160   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001162   d002     BRA       0x1168                                                                                          
001164   342b     RLCF      0x2b,0x0,0x0                                                                                    
001166   d003     BRA       0x116e                                                                                          
001168   50e7     MOVF      0xe7,0x0,0x0                                                                                    
00116a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00116c   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
00116e   e214     BC        0x1198                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001170   0e02     MOVLW     0x2            			   if (abs_x > abs_y)                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001172   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001174   f02b                                                                                                               
001176   0e03     MOVLW     0x3                                                                                             
001178   50db     MOVF      0xdb,0x0,0x0                                                                                    
00117a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00117c   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
00117e   e206     BC        0x118c                                                                                          
001180   0e01     MOVLW     0x1            			      case_number = 1;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001182   6ef3     MOVWF     0xf3,0x0                                                                                        
001184   0e06     MOVLW     0x6                                                                                             
001186   cff3     MOVFF     0xff3,0xfdb                                                                                     
001188   ffdb                                                                                                               
00118a   d005     BRA       0x1196         			   else                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00118c   0e02     MOVLW     0x2            			      case_number = 2;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00118e   6ef3     MOVWF     0xf3,0x0                                                                                        
001190   0e06     MOVLW     0x6                                                                                             
001192   cff3     MOVFF     0xff3,0xfdb                                                                                     
001194   ffdb                                                                                                               
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001196   d013     BRA       0x11be         		else                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001198   0e03     MOVLW     0x3            			   if (abs_y > abs_x)                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00119a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00119c   f02b                                                                                                               
00119e   0e02     MOVLW     0x2                                                                                             
0011a0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0011a2   80d8     BSF       0xd8,0x0,0x0                                                                                    
0011a4   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
0011a6   e206     BC        0x11b4                                                                                          
0011a8   0e03     MOVLW     0x3            			      case_number = 3;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011aa   6ef3     MOVWF     0xf3,0x0                                                                                        
0011ac   0e06     MOVLW     0x6                                                                                             
0011ae   cff3     MOVFF     0xff3,0xfdb                                                                                     
0011b0   ffdb                                                                                                               
0011b2   d005     BRA       0x11be         			   else                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011b4   0e04     MOVLW     0x4            			      case_number = 4;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011b6   6ef3     MOVWF     0xf3,0x0                                                                                        
0011b8   0e06     MOVLW     0x6                                                                                             
0011ba   cff3     MOVFF     0xff3,0xfdb                                                                                     
0011bc   ffdb                                                                                                               
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011be   d02a     BRA       0x1214         	else                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011c0   cfdf     MOVFF     0xfdf,0x2b     		if (x < 0)                                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011c2   f02b                                                                                                               
0011c4   342b     RLCF      0x2b,0x0,0x0                                                                                    
0011c6   e313     BNC       0x11ee                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011c8   0e02     MOVLW     0x2            			   if (abs_x > abs_y)                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011ca   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0011cc   f02b                                                                                                               
0011ce   0e03     MOVLW     0x3                                                                                             
0011d0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0011d2   80d8     BSF       0xd8,0x0,0x0                                                                                    
0011d4   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
0011d6   e206     BC        0x11e4                                                                                          
0011d8   0e05     MOVLW     0x5            			      case_number = 5;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011da   6ef3     MOVWF     0xf3,0x0                                                                                        
0011dc   0e06     MOVLW     0x6                                                                                             
0011de   cff3     MOVFF     0xff3,0xfdb                                                                                     
0011e0   ffdb                                                                                                               
0011e2   d004     BRA       0x11ec         			   else                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011e4   0e06     MOVLW     0x6            			      case_number = 6;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011e6   6ef3     MOVWF     0xf3,0x0                                                                                        
0011e8   cff3     MOVFF     0xff3,0xfdb                                                                                     
0011ea   ffdb                                                                                                               
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011ec   d013     BRA       0x1214         		else                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011ee   0e03     MOVLW     0x3            			   if (abs_y > abs_x)                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0011f0   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0011f2   f02b                                                                                                               
0011f4   0e02     MOVLW     0x2                                                                                             
0011f6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0011f8   80d8     BSF       0xd8,0x0,0x0                                                                                    
0011fa   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
0011fc   e206     BC        0x120a                                                                                          
0011fe   0e07     MOVLW     0x7            			      case_number = 7;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001200   6ef3     MOVWF     0xf3,0x0                                                                                        
001202   0e06     MOVLW     0x6                                                                                             
001204   cff3     MOVFF     0xff3,0xfdb                                                                                     
001206   ffdb                                                                                                               
001208   d005     BRA       0x1214         			   else                                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00120a   0e08     MOVLW     0x8            			      case_number = 8;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00120c   6ef3     MOVWF     0xf3,0x0                                                                                        
00120e   0e06     MOVLW     0x6                                                                                             
001210   cff3     MOVFF     0xff3,0xfdb                                                                                     
001212   ffdb                                                                                                               
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001214   50db     MOVF      0xdb,0x0,0x0   	switch(case_number)  // These cases are the various equations neccessary given the above determined position of the joystick. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001216   0a08     XORLW     0x8                                                                                             
001218   e101     BNZ       0x121c                                                                                          
00121a   d092     BRA       0x1340                                                                                          
00121c   0a0f     XORLW     0xf                                                                                             
00121e   e101     BNZ       0x1222                                                                                          
001220   d07d     BRA       0x131c                                                                                          
001222   0a01     XORLW     0x1                                                                                             
001224   e069     BZ        0x12f8                                                                                          
001226   0a03     XORLW     0x3                                                                                             
001228   e055     BZ        0x12d4                                                                                          
00122a   0a01     XORLW     0x1                                                                                             
00122c   e041     BZ        0x12b0                                                                                          
00122e   0a07     XORLW     0x7                                                                                             
001230   e02d     BZ        0x128c                                                                                          
001232   0a01     XORLW     0x1                                                                                             
001234   e019     BZ        0x1268                                                                                          
001236   0a03     XORLW     0x3                                                                                             
001238   e005     BZ        0x1244                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 1:	                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001244   0e02     MOVLW     0x2            		untranslated_output_L = abs_x;                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001246   50db     MOVF      0xdb,0x0,0x0                                                                                    
001248   6ee7     MOVWF     0xe7,0x0                                                                                        
00124a   0e04     MOVLW     0x4                                                                                             
00124c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00124e   ffdb                                                                                                               
001250   0e02     MOVLW     0x2            		untranslated_output_R = -1*(abs_x-abs_y);                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001252   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001254   ffe6                                                                                                               
001256   0e03     MOVLW     0x3                                                                                             
001258   50db     MOVF      0xdb,0x0,0x0                                                                                    
00125a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00125c   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
00125e   0dff     MULLW     0xff                                                                                            
001260   0e05     MOVLW     0x5                                                                                             
001262   cff3     MOVFF     0xff3,0xfdb                                                                                     
001264   ffdb                                                                                                               
001266   d07e     BRA       0x1364         	break;	                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 2:                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001268   0e03     MOVLW     0x3            		untranslated_output_L = abs_y;                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00126a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00126c   6ee7     MOVWF     0xe7,0x0                                                                                        
00126e   0e04     MOVLW     0x4                                                                                             
001270   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001272   ffdb                                                                                                               
001274   0e03     MOVLW     0x3            		untranslated_output_R = abs_y-abs_x;                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001276   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001278   ffe6                                                                                                               
00127a   0e02     MOVLW     0x2                                                                                             
00127c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00127e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001280   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001282   6ee7     MOVWF     0xe7,0x0                                                                                        
001284   0e05     MOVLW     0x5                                                                                             
001286   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001288   ffdb                                                                                                               
00128a   d06c     BRA       0x1364         	break;                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 3:                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00128c   0e03     MOVLW     0x3            		untranslated_output_L = abs_y-abs_x;                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00128e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001290   ffe6                                                                                                               
001292   0e02     MOVLW     0x2                                                                                             
001294   50db     MOVF      0xdb,0x0,0x0                                                                                    
001296   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001298   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
00129a   6ee7     MOVWF     0xe7,0x0                                                                                        
00129c   0e04     MOVLW     0x4                                                                                             
00129e   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0012a0   ffdb                                                                                                               
0012a2   0e03     MOVLW     0x3            		untranslated_output_R = abs_y;                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012a4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012a6   6ee7     MOVWF     0xe7,0x0                                                                                        
0012a8   0e05     MOVLW     0x5                                                                                             
0012aa   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0012ac   ffdb                                                                                                               
0012ae   d05a     BRA       0x1364         	break;                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 4:                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012b0   0e02     MOVLW     0x2            		untranslated_output_L = -1*(abs_x-abs_y);                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012b2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0012b4   ffe6                                                                                                               
0012b6   0e03     MOVLW     0x3                                                                                             
0012b8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012bc   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
0012be   0dff     MULLW     0xff                                                                                            
0012c0   0e04     MOVLW     0x4                                                                                             
0012c2   cff3     MOVFF     0xff3,0xfdb                                                                                     
0012c4   ffdb                                                                                                               
0012c6   0e02     MOVLW     0x2            		untranslated_output_R = abs_x;                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012c8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012ca   6ee7     MOVWF     0xe7,0x0                                                                                        
0012cc   0e05     MOVLW     0x5                                                                                             
0012ce   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0012d0   ffdb                                                                                                               
0012d2   d048     BRA       0x1364         	break;                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 5:	                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012d4   0e02     MOVLW     0x2            		untranslated_output_L = -1*abs_x;                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012d6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012d8   0dff     MULLW     0xff                                                                                            
0012da   0e04     MOVLW     0x4                                                                                             
0012dc   cff3     MOVFF     0xff3,0xfdb                                                                                     
0012de   ffdb                                                                                                               
0012e0   0e02     MOVLW     0x2            		untranslated_output_R = (abs_x-abs_y);                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012e2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0012e4   ffe6                                                                                                               
0012e6   0e03     MOVLW     0x3                                                                                             
0012e8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012ec   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
0012ee   6ee7     MOVWF     0xe7,0x0                                                                                        
0012f0   0e05     MOVLW     0x5                                                                                             
0012f2   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0012f4   ffdb                                                                                                               
0012f6   d036     BRA       0x1364         	break;                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 6:                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012f8   0e03     MOVLW     0x3            		untranslated_output_L = -1*abs_y;                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0012fa   50db     MOVF      0xdb,0x0,0x0                                                                                    
0012fc   0dff     MULLW     0xff                                                                                            
0012fe   0e04     MOVLW     0x4                                                                                             
001300   cff3     MOVFF     0xff3,0xfdb                                                                                     
001302   ffdb                                                                                                               
001304   0e03     MOVLW     0x3            		untranslated_output_R = -1*(abs_y-abs_x);                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001306   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001308   ffe6                                                                                                               
00130a   0e02     MOVLW     0x2                                                                                             
00130c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00130e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001310   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001312   0dff     MULLW     0xff                                                                                            
001314   0e05     MOVLW     0x5                                                                                             
001316   cff3     MOVFF     0xff3,0xfdb                                                                                     
001318   ffdb                                                                                                               
00131a   d024     BRA       0x1364         	break;	                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 7:                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00131c   0e03     MOVLW     0x3            		untranslated_output_L = -1*(abs_y-abs_x);                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00131e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001320   ffe6                                                                                                               
001322   0e02     MOVLW     0x2                                                                                             
001324   50db     MOVF      0xdb,0x0,0x0                                                                                    
001326   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001328   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
00132a   0dff     MULLW     0xff                                                                                            
00132c   0e04     MOVLW     0x4                                                                                             
00132e   cff3     MOVFF     0xff3,0xfdb                                                                                     
001330   ffdb                                                                                                               
001332   0e03     MOVLW     0x3            		untranslated_output_R = -1*abs_y;                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001334   50db     MOVF      0xdb,0x0,0x0                                                                                    
001336   0dff     MULLW     0xff                                                                                            
001338   0e05     MOVLW     0x5                                                                                             
00133a   cff3     MOVFF     0xff3,0xfdb                                                                                     
00133c   ffdb                                                                                                               
00133e   d012     BRA       0x1364         	break;		                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 8:                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001340   0e02     MOVLW     0x2            		untranslated_output_L = (abs_x-abs_y);                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001342   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001344   ffe6                                                                                                               
001346   0e03     MOVLW     0x3                                                                                             
001348   50db     MOVF      0xdb,0x0,0x0                                                                                    
00134a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00134c   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
00134e   6ee7     MOVWF     0xe7,0x0                                                                                        
001350   0e04     MOVLW     0x4                                                                                             
001352   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001354   ffdb                                                                                                               
001356   0e02     MOVLW     0x2            		untranslated_output_R = -1*abs_x;                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001358   50db     MOVF      0xdb,0x0,0x0                                                                                    
00135a   0dff     MULLW     0xff                                                                                            
00135c   0e05     MOVLW     0x5                                                                                             
00135e   cff3     MOVFF     0xff3,0xfdb                                                                                     
001360   ffdb                                                                                                               
001362   d000     BRA       0x1364         	break;                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	default:                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00123a   0e04     MOVLW     0x4            		untranslated_output_L = 0;                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00123c   6adb     CLRF      0xdb,0x0                                                                                        
00123e   0e05     MOVLW     0x5            		untranslated_output_R = 0;                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001240   6adb     CLRF      0xdb,0x0                                                                                        
001242   d090     BRA       0x1364         	break;                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001364   0e04     MOVLW     0x4            	*L_output = 127 + untranslated_output_L; //this converts the -127 to +127 range back to 0 to 254, and sets the pointer to it C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001366   50db     MOVF      0xdb,0x0,0x0                                                                                    
001368   0f7f     ADDLW     0x7f                                                                                            
00136a   6ee6     MOVWF     0xe6,0x0                                                                                        
00136c   0efd     MOVLW     0xfd                                                                                            
00136e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001370   ffe9                                                                                                               
001372   0efe     MOVLW     0xfe                                                                                            
001374   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001376   ffea                                                                                                               
001378   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00137a   50e7     MOVF      0xe7,0x0,0x0                                                                                    
00137c   6eef     MOVWF     0xef,0x0                                                                                        
00137e   0e05     MOVLW     0x5            	*R_output = 127 + untranslated_output_R; //ditto                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001380   50db     MOVF      0xdb,0x0,0x0                                                                                    
001382   0f7f     ADDLW     0x7f                                                                                            
001384   6ee6     MOVWF     0xe6,0x0                                                                                        
001386   0efb     MOVLW     0xfb                                                                                            
001388   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00138a   ffe9                                                                                                               
00138c   0efc     MOVLW     0xfc                                                                                            
00138e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001390   ffea                                                                                                               
001392   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001394   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001396   6eef     MOVWF     0xef,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001398   d000     BRA       0x139a         	return;                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00139a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00139c   ffe1                                                                                                               
00139e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0013a0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0013a2   ffd9                                                                                                               
0013a4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by:    Steven Shidlovsky - General coding and debugging                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       	   Sarah Judd		 - Revision to 1/4 of a second                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   Per - Mentor                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Date modified: 2-10-06                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name: initialize_timer1                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:    none                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns:       none                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose:       This enables timer1 on the FIRST PIC controller.                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Notes:         This timer, timer1, will count in real time in increments of a second. This requires extra code to be put into the interrupt C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       handler. In the 2005 code, the function InterruptHandlerLow in user_routines_fast.c is where the interrupt handler is. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       The following is what must be added to ensure that it will count in seconds. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                            if (PIE1bits.TMR1IE && PIR1bits.TMR1IF)		//is the interrupt enabled and the flag triggered C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		{		                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		PIE1bits.TMR1IE = 0;					//turn interrupt off, this prevents calling it again while the following code is executed C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		PIR1bits.TMR1IF = 0;					//flag reset                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		timer_data(1, 0);                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		PIE1bits.TMR1IE = 1;					//enable interrupt again                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  }                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           The timer information is held in the function timer_data. This allows it to pass between the files without C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           issues. For more information on timer_data, see that function.                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           void initialize_timer1(void)                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               //next two lines set prescale to 1:4.  This is what makes it quarter seconds C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013a6   8acd     BSF       0xcd,0x5,0x0   	T1CONbits.T1CKPS1 = 1;		//sets prescale                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013a8   98cd     BCF       0xcd,0x4,0x0       T1CONbits.T1CKPS0 = 0;		//sets prescale                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013aa   92cd     BCF       0xcd,0x1,0x0       T1CONbits.TMR1CS = 0;		//use the internal clock                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013ac   96cd     BCF       0xcd,0x3,0x0       T1CONbits.T1OSCEN = 0;		//oscillator is off                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013ae   94cd     BCF       0xcd,0x2,0x0       T1CONbits.T1SYNC = 0;		//use internal clock, no external clock input         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013b0   8ecd     BSF       0xcd,0x7,0x0       T1CONbits.RD16 = 1;			//operating in 16 bit mode                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013b2   909e     BCF       0x9e,0x0,0x0       PIR1bits.TMR1IF = 0;		//interrupt flag set to 0                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013b4   809d     BSF       0x9d,0x0,0x0       PIE1bits.TMR1IE = 1;		//interrupt is on                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013b6   80cd     BSF       0xcd,0x0,0x0       T1CONbits.TMR1ON = 1;		//timer1 is now on                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               /*                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               This is a debug statment to ensure that this function is working properly. If debugging needs to C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               occur, the flag can be set in chopshop.h                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               */                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #if TIMER1_DEBUG                                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               printf("\rPrescale: T1CONbits.T1CKPS1 %d T1CONbits.T1CKPS0 %d\rInternal clock: T1CONbits.TMR1CS %d\rOscillator: T1CONbits.T1OSCEN %d\rBit mode: T1CONbits.RD16 %d\rInterrupt flag: PIR1bits.TMR1IF %d\rInterrupt state (on/off): PIE1bits.TMR1IE %d\rReady for interrupt: T1CONbits.TMR1ON %d\r", T1CONbits.T1CKPS1, T1CONbits.T1CKPS0, T1CONbits.T1OSCEN, T1CONbits.T1SYNC, T1CONbits.RD16, PIR1bits.TMR1IF, PIE1bits.TMR1IE, T1CONbits.TMR1ON ); C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013b8   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by:    Robert Harris - General coding and debugging                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Date modified: 2-10-06                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name: initialize_timer3                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:    none                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns:       none                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose:       This enables timer1 on the FIRST PIC controller.                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Notes:         This timer, timer1, will count in real time in increments of a second. This requires extra code to be put into the interrupt C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       handler. In the 2005 code, the function InterruptHandlerLow in user_routines_fast.c is where the interrupt handler is. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	       The following is what must be added to ensure that it will count in seconds. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           static char hold3 = 0;							//holds know of interrupt hits gotten               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	else if(PIE2bits.TMR3IE && PIR2bits.TMR3IF)                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		PIE2bits.TMR3IE = 0; //turn interrupt off to prevent it from being recalled    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		PIR2bits.TMR3IF = 0; //reset the flag to 0                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		hold3++; 			 //adds one to the hold                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		if (hold3 == 20)		 //is hold equal to 20                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			timer_data(3,0); //call timer_data function to add a second                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			hold3 = 0;        //reset hold to 0 so the next second can be counted         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		PIE2bits.TMR3IE = 1; // enable interrupt                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           The timer information is held in the function timer_data. This allows it to pass between the files without C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           issues. For more information on timer_data, see that function.                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           void initialize_timer3(void)                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013ba   8eb1     BSF       0xb1,0x7,0x0       T3CONbits.RD16 = 1; 	//16 bit mode                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013bc   9cb1     BCF       0xb1,0x6,0x0       T3CONbits.T3CCP2 = 0;	// timer1 and timer2 is CCP source                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013be   96b1     BCF       0xb1,0x3,0x0       T3CONbits.T3CCP1 = 0; 	// ditto                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013c0   8ab1     BSF       0xb1,0x5,0x0       T3CONbits.T3CKPS1 = 1; 	// 1:8 prescale value                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013c2   88b1     BSF       0xb1,0x4,0x0       T3CONbits.T3CKPS0 = 1; 	// ditto                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013c4   94b1     BCF       0xb1,0x2,0x0       T3CONbits.T3SYNC = 0; 	//not using external clock                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013c6   92b1     BCF       0xb1,0x1,0x0       T3CONbits.TMR3CS = 0; 	// ditto                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013c8   80b1     BSF       0xb1,0x0,0x0       T3CONbits.TMR3ON = 1; 	//timer 3 enabled                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013ca   92a1     BCF       0xa1,0x1,0x0       PIR2bits.TMR3IF = 0;	//set flag to 0                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013cc   82a0     BSF       0xa0,0x1,0x0       PIE2bits.TMR3IE = 1;	//enable the interrupt                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013ce   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by:     Steven Shidlovsky - General coding and debugging                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				Per - Mentor                                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name:  timer_data                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:     char timer = timer to be observed                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		        char flag  = flag to determine option                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns: The time held for the counter set in parameter                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose: To hold the current time recorded in seconds for the timers on the PIC controller. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Addition Information: This function allows the data from the timer to be used in any file of the program. To get the return, just set the flag to 1. If user does not seek to add to the timer counters, set timer to 0. This function is to be used with all timers. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013d0   cfd9     MOVFF     0xfd9,0xfe6    unsigned int timer_data(char timer, char flag)                                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013d2   ffe6                                                                                                               
0013d4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0013d6   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           static unsigned char hold1 = 0;			 	//hold for timer1	                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           static unsigned int quarter_seconds = 0;	//stores the amount of quarter seconds for timer1 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           static unsigned int timer3_seconds = 0; 	//stores the amount of seconds for timer3 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013d8   0efe     MOVLW     0xfe               switch(timer)						//determine what timer the function will be working on    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013da   50db     MOVF      0xdb,0x0,0x0                                                                                    
0013dc   0a03     XORLW     0x3                                                                                             
0013de   e021     BZ        0x1422                                                                                          
0013e0   0a02     XORLW     0x2                                                                                             
0013e2   e001     BZ        0x13e6                                                                                          
0013e4   d037     BRA       0x1454                                                                                          
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               case 1:								//timer1 is selected.  This counts quarter seconds            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		/*This nested if statement is used to determine the operation to be performed on the timerX seconds. It supports adding a second, returning the seconds stored, C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                            		or resetting the timer. The user decides the option by setting the flag to the correct value.*/  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013e6   0efd     MOVLW     0xfd           		if (!flag)                                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013e8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0013ea   e10a     BNZ       0x1400                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                            			//this piece has been called                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013ec   0103     MOVLB     0x3            			hold1++;                                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013ee   2b30     INCF      0x30,0x1,0x1                                                                                    
                                           			//when its been called 10 times, a quarter second has passed                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013f0   0e0a     MOVLW     0xa            			if (hold1 == 10)                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013f2   5d30     SUBWF     0x30,0x0,0x1                                                                                    
0013f4   e104     BNZ       0x13fe                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013f6   2b31     INCF      0x31,0x1,0x1   				quarter_seconds++;                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013f8   0e00     MOVLW     0x0                                                                                             
0013fa   2332     ADDWFC    0x32,0x1,0x1                                                                                    
0013fc   6b30     CLRF      0x30,0x1       				hold1 = 0;          //reset hold                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				//The next two lines are for debugging. Uncomment them if u need to debug the timer C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			/*	if (quarter_seconds%4 == 0)                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           					printf("quarter seconds %d\r",quarter_seconds);                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			*/                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0013fe   d010     BRA       0x1420         		else if (flag)						                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001400   0efd     MOVLW     0xfd                                                                                            
001402   50db     MOVF      0xdb,0x0,0x0                                                                                    
001404   e006     BZ        0x1412                                                                                          
                                             			{                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001406   c331     MOVFF     0x331,0xff3     				return quarter_seconds;                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001408   fff3                                                                                                               
00140a   c332     MOVFF     0x332,0xff4                                                                                     
00140c   fff4                                                                                                               
00140e   d022     BRA       0x1454                                                                                          
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001410   d007     BRA       0x1420         			else if (flag == 2)                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001412   0efd     MOVLW     0xfd                                                                                            
001414   50db     MOVF      0xdb,0x0,0x0                                                                                    
001416   0802     SUBLW     0x2                                                                                             
001418   e103     BNZ       0x1420                                                                                          
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00141a   0103     MOVLB     0x3            					quarter_seconds = 0;                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00141c   6b31     CLRF      0x31,0x1                                                                                        
00141e   6b32     CLRF      0x32,0x1                                                                                        
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001420   d019     BRA       0x1454         	break;                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 3:                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	/*This nested if statement is used to determine the operation to be performed on the timerX seconds. It supports adding a second, returning the seconds stored, C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                            		or resetting the timer. The user decides the option by setting the flag to the correct value.*/  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001422   0efd     MOVLW     0xfd           		if(flag == 0)						                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001424   50db     MOVF      0xdb,0x0,0x0                                                                                    
001426   e105     BNZ       0x1432                                                                                          
                                            		{                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001428   0103     MOVLB     0x3               		    timer3_seconds++;                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00142a   2b33     INCF      0x33,0x1,0x1                                                                                    
00142c   0e00     MOVLW     0x0                                                                                             
00142e   2334     ADDWFC    0x34,0x1,0x1                                                                                    
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001430   d010     BRA       0x1452         		else if (flag)                                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001432   0efd     MOVLW     0xfd                                                                                            
001434   50db     MOVF      0xdb,0x0,0x0                                                                                    
001436   e006     BZ        0x1444                                                                                          
                                           			 {                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001438   c333     MOVFF     0x333,0xff3      			     return timer3_seconds;                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00143a   fff3                                                                                                               
00143c   c334     MOVFF     0x334,0xff4                                                                                     
00143e   fff4                                                                                                               
001440   d009     BRA       0x1454                                                                                          
                                           			 }                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001442   d007     BRA       0x1452         			else if(flag == 2)                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001444   0efd     MOVLW     0xfd                                                                                            
001446   50db     MOVF      0xdb,0x0,0x0                                                                                    
001448   0802     SUBLW     0x2                                                                                             
00144a   e103     BNZ       0x1452                                                                                          
                                           				 {                                                                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00144c   0103     MOVLB     0x3             				     timer3_seconds = 0;                                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00144e   6b33     CLRF      0x33,0x1                                                                                        
001450   6b34     CLRF      0x34,0x1                                                                                        
                                           				 } 	                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001452   d000     BRA       0x1454         	break;                                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	}	                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001454   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001456   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001458   ffd9                                                                                                               
00145a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /********************distance_traveled*********************************          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by:     Steven Shidlovsky - General coding and debugging                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name:  distance_traveled                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:     char flag  = flag to determine when to add a click               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           				char side  = determine the side to be added or recalled                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns: The number of clicks that have occurred                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose: To hold the number of clicks that have occurred.                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Addition Information: side R = 0 side L = 1                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00145c   cfd9     MOVFF     0xfd9,0xfe6    int distance_traveled(char side, char flag)                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00145e   ffe6                                                                                                               
001460   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001462   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           static unsigned int clicksR = 0;	//used to store the number of clicks that have occurred C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           static unsigned int clicksL = 0;	//used to store the number of clicks for left side C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001464   0efd     MOVLW     0xfd              if(flag)							//is the flag true?                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001466   50db     MOVF      0xdb,0x0,0x0                                                                                    
001468   e012     BZ        0x148e                                                                                          
                                              {                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00146a   0efe     MOVLW     0xfe                 switch(side)					//determine the side being used                           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00146c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00146e   0a01     XORLW     0x1                                                                                             
001470   e008     BZ        0x1482                                                                                          
001472   0a01     XORLW     0x1                                                                                             
001474   e001     BZ        0x1478                                                                                          
001476   d00a     BRA       0x148c                                                                                          
                                           	  {                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	  case 0:						//right side                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001478   0103     MOVLB     0x3            	     clicksR++;					//add one to clicks for right                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00147a   2b35     INCF      0x35,0x1,0x1                                                                                    
00147c   0e00     MOVLW     0x0                                                                                             
00147e   2336     ADDWFC    0x36,0x1,0x1                                                                                    
001480   d005     BRA       0x148c         	  break;							//leave statement                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	  case 1:						//left side                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001482   0103     MOVLB     0x3            		 clicksL++;					//add to the left side clicks                                  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001484   2b37     INCF      0x37,0x1,0x1                                                                                    
001486   0e00     MOVLW     0x0                                                                                             
001488   2338     ADDWFC    0x38,0x1,0x1                                                                                    
00148a   d000     BRA       0x148c         	  break;							//leave statement                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	  }                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00148c   d013     BRA       0x14b4           else								//else a return is needed                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00148e   0efe     MOVLW     0xfe                switch(side)					//determine the side being used                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001490   50db     MOVF      0xdb,0x0,0x0                                                                                    
001492   0a01     XORLW     0x1                                                                                             
001494   e009     BZ        0x14a8                                                                                          
001496   0a01     XORLW     0x1                                                                                             
001498   e001     BZ        0x149c                                                                                          
00149a   d00c     BRA       0x14b4                                                                                          
                                           	 {                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	 case 0:						//right side                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00149c   c335     MOVFF     0x335,0xff3    	    return clicksR;				//return clicksR                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00149e   fff3                                                                                                               
0014a0   c336     MOVFF     0x336,0xff4                                                                                     
0014a2   fff4                                                                                                               
0014a4   d007     BRA       0x14b4                                                                                          
0014a6   d006     BRA       0x14b4         	 break;							//leave statement                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	 case 1:						//left side                                                       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014a8   c337     MOVFF     0x337,0xff3    		return clicksL;				//return clicksL                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014aa   fff3                                                                                                               
0014ac   c338     MOVFF     0x338,0xff4                                                                                     
0014ae   fff4                                                                                                               
0014b0   d001     BRA       0x14b4                                                                                          
0014b2   d000     BRA       0x14b4         	 break;							//leave statement                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	 }                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014b4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014b6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0014b8   ffd9                                                                                                               
0014ba   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /*******************pressure_control********                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	Created by: 		Eric Finn                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	Date modified: 		December 05, 2005                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	Function name:  	pressure_control                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	Parameters:     	pressure_sensor		= sensor that informs us when max pressure is reached C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	Returns:		 	compressor          = turns compressor on and off                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	Purpose: 			Keeps compressor from destroying itself                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	Notes:				compressor returned as global and must be set in chopshop.h           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           ******************************************/                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014bc   cfd9     MOVFF     0xfd9,0xfe6    void pressure_control(char pressure_sensor)                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014be   ffe6                                                                                                               
0014c0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0014c2   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014c4   0efe     MOVLW     0xfe               if(pressure_sensor == 0) compressor = 1; 	//Turns compressor on when max pressure has not yet been reached. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014c6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014c8   e102     BNZ       0x14ce                                                                                          
0014ca   848d     BSF       0x8d,0x2,0x0                                                                                    
0014cc   d001     BRA       0x14d0             else compressor = 0;						//Turns compressor off when max pressure has been reached. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014ce   948d     BCF       0x8d,0x2,0x0                                                                                    
                                               /*Often, the teams finds that that compressor or related components do not work. The usual place to assign blame is the software team. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                 For this reason, the following printf will solve any such problems by either proving the software is not working or that it is an C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                 electrical problem. To have the printf compiled, uncomment it and recompile*/ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                               //printf("\rsensor %d, compressor %d", pressure_sensor, compressor);         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014d0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014d2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0014d4   ffd9                                                                                                               
0014d6   0012     RETURN    0x0                                                                                             
                                           /********************  Robert's Linear Equation Finder Function  ***********************  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by:    Robert Harris - General Coding                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	           Per - Mentor                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name: find_linear_equation                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters: This function will return b as 42 and set m to 42 if it is given two points of  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                       a vertical line.                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Input:		   x1, y1, x2, y2, &m, robert_says_gimme_more_info	                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns:       b, m (as a pointer)                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose:       This finds the constants for a linear equation.                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Notes:         1 point and either the slope or another point are required. The slope "m" is passed to this function as a pointer, and if two points are given, the slope will be edited by the function. C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   The y-intercept "b" will be the value returned by this function. The value "robert_says_gimme_more_info" should be passed "42" if two points are known, or "-42" if a point and the slope  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   are known. If any other value is passed to "robert_says_gimme_more_info", then the function will not edit "m", and will return "42". If calculating the slope would cause division by zero, C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   This function will automatically return 42 as b and set m to 42.           C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014d8   cfd9     MOVFF     0xfd9,0xfe6    int find_linear_equation(int x1, int y1, int x2, int y2, int *m, int robert_says_gimme_more_info) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014da   ffe6                                                                                                               
0014dc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0014de   ffd9                                                                                                               
0014e0   0e02     MOVLW     0x2                                                                                             
0014e2   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           int b;  //y intercept of the linear equation                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	/* based on what information we have (if we have two points: 42, when we have one point and slope: -42) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                  figure out the rest of the numbers needed for the equation                                         */ C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014e4   0ef3     MOVLW     0xf3               switch (robert_says_gimme_more_info)                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0014e6   cfdb     MOVFF     0xfdb,0x1d                                                                                      
0014e8   f01d                                                                                                               
0014ea   0ef4     MOVLW     0xf4                                                                                            
0014ec   cfdb     MOVFF     0xfdb,0x1e                                                                                      
0014ee   f01e                                                                                                               
0014f0   0ed6     MOVLW     0xd6                                                                                            
0014f2   181d     XORWF     0x1d,0x0,0x0                                                                                    
0014f4   e102     BNZ       0x14fa                                                                                          
0014f6   68e8     SETF      0xe8,0x0                                                                                        
0014f8   181e     XORWF     0x1e,0x0,0x0                                                                                    
0014fa   e05b     BZ        0x15b2                                                                                          
0014fc   0e2a     MOVLW     0x2a                                                                                            
0014fe   181d     XORWF     0x1d,0x0,0x0                                                                                    
001500   e101     BNZ       0x1504                                                                                          
001502   501e     MOVF      0x1e,0x0,0x0                                                                                    
001504   e004     BZ        0x150e                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case 42:    					  // two points                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00150e   0efd     MOVLW     0xfd           		if ((x1 - x2) == 0)	// avoid division by zero in slope formula                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001510   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001512   f02d                                                                                                               
001514   0efe     MOVLW     0xfe                                                                                            
001516   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001518   f02e                                                                                                               
00151a   0ef9     MOVLW     0xf9                                                                                            
00151c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00151e   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
001520   6e2b     MOVWF     0x2b,0x0                                                                                        
001522   0efa     MOVLW     0xfa                                                                                            
001524   50db     MOVF      0xdb,0x0,0x0                                                                                    
001526   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
001528   6e2c     MOVWF     0x2c,0x0                                                                                        
00152a   502b     MOVF      0x2b,0x0,0x0                                                                                    
00152c   102c     IORWF     0x2c,0x0,0x0                                                                                    
00152e   e10d     BNZ       0x154a                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			//set m to the default "this isn't really going to work" value                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001530   0ef5     MOVLW     0xf5           			*m = 42;                                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001532   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001534   ffe9                                                                                                               
001536   0ef6     MOVLW     0xf6                                                                                            
001538   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00153a   ffea                                                                                                               
00153c   0e2a     MOVLW     0x2a                                                                                            
00153e   6eee     MOVWF     0xee,0x0                                                                                        
001540   6aed     CLRF      0xed,0x0                                                                                        
                                           			// return this value                                                          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001542   6ef3     MOVWF     0xf3,0x0       			return 42;                                                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001544   6af4     CLRF      0xf4,0x0                                                                                        
001546   d062     BRA       0x160c                                                                                          
                                           			//don't move on to the next case, which figures out what b is.  There is no m C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001548   d061     BRA       0x160c         			break;                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			                                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00154a   0efd     MOVLW     0xfd           		*m = (y1 - y2) / (x1 - x2);                                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00154c   cfdb     MOVFF     0xfdb,0x33                                                                                      
00154e   f033                                                                                                               
001550   0efe     MOVLW     0xfe                                                                                            
001552   cfdb     MOVFF     0xfdb,0x34                                                                                      
001554   f034                                                                                                               
001556   0ef9     MOVLW     0xf9                                                                                            
001558   50db     MOVF      0xdb,0x0,0x0                                                                                    
00155a   5c33     SUBWF     0x33,0x0,0x0                                                                                    
00155c   6e31     MOVWF     0x31,0x0                                                                                        
00155e   0efa     MOVLW     0xfa                                                                                            
001560   50db     MOVF      0xdb,0x0,0x0                                                                                    
001562   5834     SUBWFB    0x34,0x0,0x0                                                                                    
001564   6e32     MOVWF     0x32,0x0                                                                                        
001566   0efb     MOVLW     0xfb                                                                                            
001568   cfdb     MOVFF     0xfdb,0x2f                                                                                      
00156a   f02f                                                                                                               
00156c   0efc     MOVLW     0xfc                                                                                            
00156e   cfdb     MOVFF     0xfdb,0x30                                                                                      
001570   f030                                                                                                               
001572   0ef7     MOVLW     0xf7                                                                                            
001574   50db     MOVF      0xdb,0x0,0x0                                                                                    
001576   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
001578   6e2d     MOVWF     0x2d,0x0                                                                                        
00157a   0ef8     MOVLW     0xf8                                                                                            
00157c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00157e   5830     SUBWFB    0x30,0x0,0x0                                                                                    
001580   6e2e     MOVWF     0x2e,0x0                                                                                        
001582   c02d     MOVFF     0x2d,0x1d                                                                                       
001584   f01d                                                                                                               
001586   c02e     MOVFF     0x2e,0x1e                                                                                       
001588   f01e                                                                                                               
00158a   c031     MOVFF     0x31,0x22                                                                                       
00158c   f022                                                                                                               
00158e   c032     MOVFF     0x32,0x23                                                                                       
001590   f023                                                                                                               
001592   ecad     CALL      0x4b5a,0x0                                                                                      
001594   f025                                                                                                               
001596   c01d     MOVFF     0x1d,0x2b                                                                                       
001598   f02b                                                                                                               
00159a   c01e     MOVFF     0x1e,0x2c                                                                                       
00159c   f02c                                                                                                               
00159e   0ef5     MOVLW     0xf5                                                                                            
0015a0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0015a2   ffe9                                                                                                               
0015a4   0ef6     MOVLW     0xf6                                                                                            
0015a6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0015a8   ffea                                                                                                               
0015aa   c02b     MOVFF     0x2b,0xfee                                                                                      
0015ac   ffee                                                                                                               
0015ae   c02c     MOVFF     0x2c,0xfed                                                                                      
0015b0   ffed                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           		//if we've gotten this far, it means we've found m, and want to go on to the next case, not break     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           // NO BREAK HERE                                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	case -42:						// 1 point and slope                                             C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0015b2   0efb     MOVLW     0xfb           		b = y1 - (*m*x1);                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0015b4   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0015b6   f02d                                                                                                               
0015b8   0efc     MOVLW     0xfc                                                                                            
0015ba   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0015bc   f02e                                                                                                               
0015be   0ef5     MOVLW     0xf5                                                                                            
0015c0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0015c2   ffe9                                                                                                               
0015c4   0ef6     MOVLW     0xf6                                                                                            
0015c6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0015c8   ffea                                                                                                               
0015ca   cfee     MOVFF     0xfee,0x1d                                                                                      
0015cc   f01d                                                                                                               
0015ce   cfed     MOVFF     0xfed,0x1e                                                                                      
0015d0   f01e                                                                                                               
0015d2   0efd     MOVLW     0xfd                                                                                            
0015d4   cfdb     MOVFF     0xfdb,0x22                                                                                      
0015d6   f022                                                                                                               
0015d8   0efe     MOVLW     0xfe                                                                                            
0015da   cfdb     MOVFF     0xfdb,0x23                                                                                      
0015dc   f023                                                                                                               
0015de   ec07     CALL      0x4c0e,0x0                                                                                      
0015e0   f026                                                                                                               
0015e2   501b     MOVF      0x1b,0x0,0x0                                                                                    
0015e4   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
0015e6   6e2b     MOVWF     0x2b,0x0                                                                                        
0015e8   501c     MOVF      0x1c,0x0,0x0                                                                                    
0015ea   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
0015ec   6e2c     MOVWF     0x2c,0x0                                                                                        
0015ee   c02b     MOVFF     0x2b,0xfde                                                                                      
0015f0   ffde                                                                                                               
0015f2   c02c     MOVFF     0x2c,0xfdd                                                                                      
0015f4   ffdd                                                                                                               
0015f6   cfde     MOVFF     0xfde,0x2b     		return b;                                                                      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
0015f8   f02b                                                                                                               
0015fa   cfdd     MOVFF     0xfdd,0x2c                                                                                      
0015fc   f02c                                                                                                               
0015fe   c02b     MOVFF     0x2b,0xff3                                                                                      
001600   fff3                                                                                                               
001602   c02c     MOVFF     0x2c,0xff4                                                                                      
001604   fff4                                                                                                               
001606   d002     BRA       0x160c                                                                                          
001608   d001     BRA       0x160c         		break;                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	default:                                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001506   0e2a     MOVLW     0x2a           		return 42;                                                                     C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001508   6ef3     MOVWF     0xf3,0x0                                                                                        
00150a   6af4     CLRF      0xf4,0x0                                                                                        
00150c   d07f     BRA       0x160c                                                                                          
00160a   d000     BRA       0x160c         		break;                                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00160c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00160e   ffe1                                                                                                               
001610   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001612   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001614   ffd9                                                                                                               
001616   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by: 	Robert Harris - General coding and debugging                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Date modified:  1-27-2006                                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Function name:  abs                                                              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:     PLATYPUSES_ARE_L33T = number to find the absolute value of       C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns: 		absolute value of input                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose: 		This function finds absolute value                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Notes:	 		None                                                                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001618   cfd9     MOVFF     0xfd9,0xfe6    int abs(int PLATYPUSES_ARE_L33T)                                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00161a   ffe6                                                                                                               
00161c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00161e   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001620   0efd     MOVLW     0xfd               if (PLATYPUSES_ARE_L33T < 0) 						//is input less than 0?                   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001622   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001624   f02b                                                                                                               
001626   0efe     MOVLW     0xfe                                                                                            
001628   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00162a   f02c                                                                                                               
00162c   0100     MOVLB     0x0                                                                                             
00162e   0e80     MOVLW     0x80                                                                                            
001630   142c     ANDWF     0x2c,0x0,0x0                                                                                    
001632   e010     BZ        0x1654                                                                                          
001634   681d     SETF      0x1d,0x0               PLATYPUSES_ARE_L33T = -1*PLATYPUSES_ARE_L33T;   //if so, make it positive C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001636   681e     SETF      0x1e,0x0                                                                                        
001638   0efd     MOVLW     0xfd                                                                                            
00163a   cfdb     MOVFF     0xfdb,0x22                                                                                      
00163c   f022                                                                                                               
00163e   0efe     MOVLW     0xfe                                                                                            
001640   cfdb     MOVFF     0xfdb,0x23                                                                                      
001642   f023                                                                                                               
001644   ec07     CALL      0x4c0e,0x0                                                                                      
001646   f026                                                                                                               
001648   0efd     MOVLW     0xfd                                                                                            
00164a   c01b     MOVFF     0x1b,0xfdb                                                                                      
00164c   ffdb                                                                                                               
00164e   0efe     MOVLW     0xfe                                                                                            
001650   c01c     MOVFF     0x1c,0xfdb                                                                                      
001652   ffdb                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001654   0efd     MOVLW     0xfd               return PLATYPUSES_ARE_L33T; 						// return the absolute value               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
001656   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001658   f02b                                                                                                               
00165a   0efe     MOVLW     0xfe                                                                                            
00165c   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00165e   f02c                                                                                                               
001660   c02b     MOVFF     0x2b,0xff3                                                                                      
001662   fff3                                                                                                               
001664   c02c     MOVFF     0x2c,0xff4                                                                                      
001666   fff4                                                                                                               
001668   d000     BRA       0x166a                                                                                          
00166a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
00166c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00166e   ffd9                                                                                                               
001670   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           /********************  Robert's Series of Randomly Useful Equation Macros  ***********************  C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Created by:    Robert Harris - General Coding                                    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           	           Per - Mentor                                                         C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Macro names:   macro_linear_equation(m, x, b), macro_quadratic_equation_standard_form(a, x, b, c), macro_quadratic_equation_vertex _form(a, x, h, k), C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           			   macro_quadratic_equation_intercept_form(a, x, p, q), macro_cubic_equation(a, x, b, c, d), macro_quartic_equation(a, x, b, c, d, e) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Parameters:    m, x, b, a, c, d, and e are assumed to be integers 	              C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Returns:       Solution to named equation                                        C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           Purpose:       Simple way to decrease code space                                 C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #define macro_linear_equation(m, x, b) ((m*x) + b)                               C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #define macro_quadratic_equation_standard_form(a, x, b, c) (a*(x*x) + b*x + c)   C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #define macro_quadratic_equation_vertex _form(a, x, h, k) (a*(x-h)*(x-h) + k)    C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #define macro_quadratic_equation_intercept_form(a, x, p, q) (a*(x-p)*(x-q))      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #define macro_cubic_equation(a, x, b, c, d) (a*(x*x*x) + b*(x*x) + c*x + d)      C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                                                                                                            C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #define macro_quartic_equation(a, x, b, c, d, e) (a*(x*x*x*x) + b*(x*x*x) + c*(x*x) + d*x + e) C:\FIRST\ATLcode\WorkHere\CHOPSHOP.C
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           #include <math.h>                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           #include <string.h>                                                              C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           #include "eeprom.h"                                                              C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           unsigned char eeprom_queue_count = 0;    				//amount of writes that must be done C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           unsigned char eeprom_queue_full = 0;					//is the eeprom full? 0 is false and 1 is true C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           unsigned char eeprom_queue_empty = 1;					//is the eeprom empty? 0 is false and 1 is true C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           unsigned char eeprom_write_slot = 0;						//the slot                             C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           unsigned char eeprom_prep_slot = 0;						//current position in the circular array in preperation function C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           unsigned char eeprom_data[EEPROM_QUEUE_SIZE];                                    C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           unsigned int eeprom_address[EEPROM_QUEUE_SIZE];                                  C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Created by: 	Steven Shidlovsky - General coding and debugging                    C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           				Per - Mentor                                                                 C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Date modified:  1-18-06                                                          C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Function name:  EEPROM_read                                                      C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Parameters:     unsigned int address = slot of EEPROM memory to be read          C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Returns: 		EEDATA               = the data stored in that piece of memory        C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Purpose: To allows the EEPROM memory to be read.                                 C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Notes: Information on EEPROM is on pg 111 of the controller manual and register information  C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	   can be found on pg 112 of the manual.                                        C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\eeprom.c
005314   cfd9     MOVFF     0xfd9,0xfe6    unsigned char EEPROM_read(unsigned int address)                                  C:\FIRST\ATLcode\WorkHere\eeprom.c
005316   ffe6                                                                                                               
005318   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00531a   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
00531c   9ea6     BCF       0xa6,0x7,0x0       EECON1bits.EEPGD = 0;										//access the data from EEPROM instead of flash										//access the EEPROM, DO NOT try to recalibrate them C:\FIRST\ATLcode\WorkHere\eeprom.c
                                               		 			                                                                       C:\FIRST\ATLcode\WorkHere\eeprom.c
00531e   0efd     MOVLW     0xfd           	EEADRH = ((unsigned char)(((unsigned int)(address)>>8)&0xFF));	//sets most significant byte to address C:\FIRST\ATLcode\WorkHere\eeprom.c
005320   cfdb     MOVFF     0xfdb,0x2b                                                                                      
005322   f02b                                                                                                               
005324   0efe     MOVLW     0xfe                                                                                            
005326   cfdb     MOVFF     0xfdb,0x2c                                                                                      
005328   f02c                                                                                                               
00532a   c02c     MOVFF     0x2c,0x2b                                                                                       
00532c   f02b                                                                                                               
00532e   6a2c     CLRF      0x2c,0x0                                                                                        
005330   502b     MOVF      0x2b,0x0,0x0                                                                                    
005332   6eaa     MOVWF     0xaa,0x0                                                                                        
005334   0efd     MOVLW     0xfd           	EEADR  = ((unsigned char) (address));							//sets least signigicant byte to address C:\FIRST\ATLcode\WorkHere\eeprom.c
005336   50db     MOVF      0xdb,0x0,0x0                                                                                    
005338   6ea9     MOVWF     0xa9,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
00533a   80a6     BSF       0xa6,0x0,0x0   	EECON1bits.RD = 1;											//Begin reading at the set address, this will be cleared by hardware C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
00533c   50a8     MOVF      0xa8,0x0,0x0   	return(EEDATA);												//return the data                                    C:\FIRST\ATLcode\WorkHere\eeprom.c
00533e   d000     BRA       0x5340                                                                                          
005340   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
005342   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005344   ffd9                                                                                                               
005346   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Created by: 	Steven Shidlovsky - General coding and debugging                    C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           				Per - Mentor                                                                 C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Date modified:  1-18-06                                                          C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Function name:  EEPROM_prep                                                      C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Parameters:     unsigned int address = slot of EEPROM memory to be read          C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           				unsigned char data   = data to be put into the EEPROM                        C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Returns: 		pf                   = has the function passed or failed? 0 is failed 1 is passed C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Purpose: To prepare data to be written to EEPROM                                 C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Notes: Information on EEPROM is on pg 111 of the controller manual and register information  C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	   can be found on pg 112 of the manual.                                        C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\eeprom.c
005348   cfd9     MOVFF     0xfd9,0xfe6    unsigned char EEPROM_prep(unsigned int address, unsigned char data)              C:\FIRST\ATLcode\WorkHere\eeprom.c
00534a   ffe6                                                                                                               
00534c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00534e   ffd9                                                                                                               
005350   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           unsigned char pf;												//used to determine if the function has passed or failed C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005352   0103     MOVLB     0x3                if(eeprom_queue_full ==  0)									//is the eeprom_queue full?			           C:\FIRST\ATLcode\WorkHere\eeprom.c
005354   5142     MOVF      0x42,0x0,0x1                                                                                    
005356   e126     BNZ       0x53a4                                                                                          
                                               {															//if not full, then beginning preparing the new data         C:\FIRST\ATLcode\WorkHere\eeprom.c
005358   5145     MOVF      0x45,0x0,0x1           eeprom_data[eeprom_prep_slot] = data;					//move data into the eeprom data array C:\FIRST\ATLcode\WorkHere\eeprom.c
00535a   6aea     CLRF      0xea,0x0                                                                                        
00535c   0f00     ADDLW     0x0                                                                                             
00535e   6ee9     MOVWF     0xe9,0x0                                                                                        
005360   0e0f     MOVLW     0xf                                                                                             
005362   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005364   0efc     MOVLW     0xfc                                                                                            
005366   cfdb     MOVFF     0xfdb,0xfef                                                                                     
005368   ffef                                                                                                               
00536a   5145     MOVF      0x45,0x0,0x1   		eeprom_address[eeprom_prep_slot] = address;				//move address into the address slot of the array C:\FIRST\ATLcode\WorkHere\eeprom.c
00536c   6ee9     MOVWF     0xe9,0x0                                                                                        
00536e   6aea     CLRF      0xea,0x0                                                                                        
005370   90d8     BCF       0xd8,0x0,0x0                                                                                    
005372   36e9     RLCF      0xe9,0x1,0x0                                                                                    
005374   36ea     RLCF      0xea,0x1,0x0                                                                                    
005376   0e20     MOVLW     0x20                                                                                            
005378   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00537a   0e0f     MOVLW     0xf                                                                                             
00537c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00537e   0efd     MOVLW     0xfd                                                                                            
005380   cfdb     MOVFF     0xfdb,0xfee                                                                                     
005382   ffee                                                                                                               
005384   0efe     MOVLW     0xfe                                                                                            
005386   cfdb     MOVFF     0xfdb,0xfed                                                                                     
005388   ffed                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
00538a   2b41     INCF      0x41,0x1,0x1   		eeprom_queue_count++;									//the number of incoming writes in the queue has increased C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
00538c   2b45     INCF      0x45,0x1,0x1   		eeprom_prep_slot++;										//move foward one prep slot in the array so the next data entered will not overwrite the  C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           																//the previous data							                                       C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\FIRST\ATLcode\WorkHere\eeprom.c
00538e   0e1f     MOVLW     0x1f           		eeprom_prep_slot &= EEPROM_QUEUE_INDEX_MASK;			//see documentation for full details C:\FIRST\ATLcode\WorkHere\eeprom.c
005390   1745     ANDWF     0x45,0x1,0x1                                                                                    
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           		// is the circular queue now full?                                             C:\FIRST\ATLcode\WorkHere\eeprom.c
005392   5145     MOVF      0x45,0x0,0x1   		if(eeprom_write_slot == eeprom_prep_slot)	//is the number of read slots the same as the number of write spots? C:\FIRST\ATLcode\WorkHere\eeprom.c
005394   5d44     SUBWF     0x44,0x0,0x1                                                                                    
005396   e102     BNZ       0x539c                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\eeprom.c
005398   0e01     MOVLW     0x1            				eeprom_queue_full = 1;							//then the queue is full                        C:\FIRST\ATLcode\WorkHere\eeprom.c
00539a   6f42     MOVWF     0x42,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
00539c   6b43     CLRF      0x43,0x1       		eeprom_queue_empty = 0;									//it can't be empty now that we added something C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
00539e   0e01     MOVLW     0x1            	    pf = 1;													//the function has passed                               C:\FIRST\ATLcode\WorkHere\eeprom.c
0053a0   6edf     MOVWF     0xdf,0x0                                                                                        
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
0053a2   d001     BRA       0x53a6             else														//if the queue was full and had no room for more data      C:\FIRST\ATLcode\WorkHere\eeprom.c
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
0053a4   6adf     CLRF      0xdf,0x0       	    pf = 0;													//the function has failed                               C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
0053a6   50df     MOVF      0xdf,0x0,0x0      return pf;													//return to caller the result of this function         C:\FIRST\ATLcode\WorkHere\eeprom.c
0053a8   d000     BRA       0x53aa                                                                                          
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
0053aa   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
0053ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0053ae   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0053b0   ffd9                                                                                                               
0053b2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           /***********************************************************************         C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Created by: 	Robert Harris - Debugging                                           C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           				Sarah Judd - Debugging                                                       C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           				Steven Shidlovsky - General coding and debugging                             C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           				Per - Mentor                                                                 C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Date modified:  1-18-06                                                          C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Function name:  EEPROM_write                                                     C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Parameters:     none                                                             C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Returns: 	    none                                                               C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Purpose: To write data to EEPROM                                                 C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           Notes: Information on EEPROM is on pg 111 of the controller manual and register information  C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	   can be found on pg 112 of the manual.                                        C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           **********************************************************************/          C:\FIRST\ATLcode\WorkHere\eeprom.c
0053b4   cfd9     MOVFF     0xfd9,0xfe6    void EEPROM_write(void)                                                          C:\FIRST\ATLcode\WorkHere\eeprom.c
0053b6   ffe6                                                                                                               
0053b8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0053ba   ffd9                                                                                                               
0053bc   0e02     MOVLW     0x2                                                                                             
0053be   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                               unsigned char temp_GIEH;									//holds state of global interrupt activation C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	unsigned char temp_GIEL;									//holds state of interrupt activation          C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
0053c0   0103     MOVLB     0x3            	if(eeprom_queue_empty == 0)									//is the queue empty? if not, time to write C:\FIRST\ATLcode\WorkHere\eeprom.c
0053c2   5143     MOVF      0x43,0x0,0x1                                                                                    
0053c4   e169     BNZ       0x5498                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\eeprom.c
0053c6   50f2     MOVF      0xf2,0x0,0x0   	    temp_GIEH = INTCONbits.GIEH;							//save the current status of the global interrupt status C:\FIRST\ATLcode\WorkHere\eeprom.c
0053c8   0b80     ANDLW     0x80                                                                                            
0053ca   e001     BZ        0x53ce                                                                                          
0053cc   0e01     MOVLW     0x1                                                                                             
0053ce   6edf     MOVWF     0xdf,0x0                                                                                        
0053d0   50f2     MOVF      0xf2,0x0,0x0   		temp_GIEL = INTCONbits.GIEL;							//sace the current status of the interrupt status C:\FIRST\ATLcode\WorkHere\eeprom.c
0053d2   0b40     ANDLW     0x40                                                                                            
0053d4   e001     BZ        0x53d8                                                                                          
0053d6   0e01     MOVLW     0x1                                                                                             
0053d8   6ee7     MOVWF     0xe7,0x0                                                                                        
0053da   0e01     MOVLW     0x1                                                                                             
0053dc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0053de   ffdb                                                                                                               
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
0053e0   9ea6     BCF       0xa6,0x7,0x0   		EECON1bits.EEPGD = 0;									//Access EEPROM data memory instead of FLASH     C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\eeprom.c
0053e2   98a6     BCF       0xa6,0x4,0x0   		EECON1bits.FREE = 0;									//perform a write only                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
0053e4   98a1     BCF       0xa1,0x4,0x0   		PIR2bits.EEIF = 0;										//clear the write completion flag                  C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
0053e6   5144     MOVF      0x44,0x0,0x1   		EEADR = ((unsigned char)(eeprom_address[eeprom_write_slot]));  //Sarah: placing the address in the place in EEPROM that will hold it C:\FIRST\ATLcode\WorkHere\eeprom.c
0053e8   6ee9     MOVWF     0xe9,0x0                                                                                        
0053ea   6aea     CLRF      0xea,0x0                                                                                        
0053ec   90d8     BCF       0xd8,0x0,0x0                                                                                    
0053ee   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0053f0   36ea     RLCF      0xea,0x1,0x0                                                                                    
0053f2   0e20     MOVLW     0x20                                                                                            
0053f4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0053f6   0e0f     MOVLW     0xf                                                                                             
0053f8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0053fa   50ef     MOVF      0xef,0x0,0x0                                                                                    
0053fc   6ea9     MOVWF     0xa9,0x0                                                                                        
0053fe   5144     MOVF      0x44,0x0,0x1   		EEADRH = ((unsigned char)(((unsigned int)(eeprom_address[eeprom_write_slot])>>8)&0xFF)); //Sarah: Places the address in the place in EEPROM to hold it                                                                                   //first must be moved back eight places C:\FIRST\ATLcode\WorkHere\eeprom.c
005400   6ee9     MOVWF     0xe9,0x0                                                                                        
005402   6aea     CLRF      0xea,0x0                                                                                        
005404   90d8     BCF       0xd8,0x0,0x0                                                                                    
005406   36e9     RLCF      0xe9,0x1,0x0                                                                                    
005408   36ea     RLCF      0xea,0x1,0x0                                                                                    
00540a   0e20     MOVLW     0x20                                                                                            
00540c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00540e   0e0f     MOVLW     0xf                                                                                             
005410   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005412   cfee     MOVFF     0xfee,0x2b                                                                                      
005414   f02b                                                                                                               
005416   cfef     MOVFF     0xfef,0x2c                                                                                      
005418   f02c                                                                                                               
00541a   c02c     MOVFF     0x2c,0x2b                                                                                       
00541c   f02b                                                                                                               
00541e   6a2c     CLRF      0x2c,0x0                                                                                        
005420   502b     MOVF      0x2b,0x0,0x0                                                                                    
005422   6eaa     MOVWF     0xaa,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005424   5144     MOVF      0x44,0x0,0x1   		EEDATA = eeprom_data[eeprom_write_slot]; 				//Move data to loading platform for EEPROM C:\FIRST\ATLcode\WorkHere\eeprom.c
005426   6aea     CLRF      0xea,0x0                                                                                        
005428   0f00     ADDLW     0x0                                                                                             
00542a   6ee9     MOVWF     0xe9,0x0                                                                                        
00542c   0e0f     MOVLW     0xf                                                                                             
00542e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005430   50ef     MOVF      0xef,0x0,0x0                                                                                    
005432   6ea8     MOVWF     0xa8,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005434   84a6     BSF       0xa6,0x2,0x0   		EECON1bits.WREN = 1;									//Allow a write. ONLY keep on during writethis write! IMPORTATNT  C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005436   9ef2     BCF       0xf2,0x7,0x0   		INTCONbits.GIEH = 0;									//turn off interrupts		                           C:\FIRST\ATLcode\WorkHere\eeprom.c
005438   9cf2     BCF       0xf2,0x6,0x0   		INTCONbits.GIEL = 0;									//turn off interrupt                              C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           		/*The next three lines of code MUST be completed exactly in this order. This is why the interrupts are disabled for this section, C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           		  to ensure that nothing blocks these lines. */                                C:\FIRST\ATLcode\WorkHere\eeprom.c
00543a   0e55     MOVLW     0x55           		EECON2 = 0x55;											//pre-write sequence                                  C:\FIRST\ATLcode\WorkHere\eeprom.c
00543c   6ea7     MOVWF     0xa7,0x0                                                                                        
00543e   0eaa     MOVLW     0xaa           		EECON2 = 0xAA;											//pre-write sequence                                  C:\FIRST\ATLcode\WorkHere\eeprom.c
005440   6ea7     MOVWF     0xa7,0x0                                                                                        
005442   82a6     BSF       0xa6,0x1,0x0   		EECON1bits.WR  = 1; 									//begin writing to the eeprom, will be cleared in hardware C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
005444   50df     MOVF      0xdf,0x0,0x0   		INTCONbits.GIEH = temp_GIEH;							//restore global interrupts to their correct states C:\FIRST\ATLcode\WorkHere\eeprom.c
005446   0b01     ANDLW     0x1                                                                                             
005448   6ef3     MOVWF     0xf3,0x0                                                                                        
00544a   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
00544c   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
00544e   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
005450   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
005452   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
005454   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
005456   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
005458   0e7f     MOVLW     0x7f                                                                                            
00545a   14f2     ANDWF     0xf2,0x0,0x0                                                                                    
00545c   10f3     IORWF     0xf3,0x0,0x0                                                                                    
00545e   6ef2     MOVWF     0xf2,0x0                                                                                        
005460   0e01     MOVLW     0x1            		INTCONbits.GIEL = temp_GIEL;							//restore interrupts to their correct states C:\FIRST\ATLcode\WorkHere\eeprom.c
005462   50db     MOVF      0xdb,0x0,0x0                                                                                    
005464   0b01     ANDLW     0x1                                                                                             
005466   6ef3     MOVWF     0xf3,0x0                                                                                        
005468   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
00546a   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
00546c   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
00546e   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
005470   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
005472   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
005474   0ebf     MOVLW     0xbf                                                                                            
005476   14f2     ANDWF     0xf2,0x0,0x0                                                                                    
005478   10f3     IORWF     0xf3,0x0,0x0                                                                                    
00547a   6ef2     MOVWF     0xf2,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
00547c   0741     DECF      0x41,0x1,0x1   		eeprom_queue_count--;									//the number of items to write is now 1 less     C:\FIRST\ATLcode\WorkHere\eeprom.c
00547e   2b44     INCF      0x44,0x1,0x1   		eeprom_write_slot++;									//move to the next write slot                     C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005480   0e1f     MOVLW     0x1f           		eeprom_write_slot &= EEPROM_QUEUE_INDEX_MASK;  //Sarah: (gets this because Per explained it, but can't re-explain it) C:\FIRST\ATLcode\WorkHere\eeprom.c
005482   1744     ANDWF     0x44,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005484   5145     MOVF      0x45,0x0,0x1   	if(eeprom_write_slot == eeprom_prep_slot)  					//if the read slot has caught up with the write slot, stop C:\FIRST\ATLcode\WorkHere\eeprom.c
005486   5d44     SUBWF     0x44,0x0,0x1                                                                                    
005488   e102     BNZ       0x548e                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\eeprom.c
00548a   0e01     MOVLW     0x1            			eeprom_queue_empty = 1;								//informs computer the queue is now empty      C:\FIRST\ATLcode\WorkHere\eeprom.c
00548c   6f43     MOVWF     0x43,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
00548e   6b42     CLRF      0x42,0x1       	eeprom_queue_full = 0;										//a write has finished so the queue can not be full C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005490   a8a1     BTFSS     0xa1,0x4,0x0   	while(PIR2bits.EEIF == 0);									//wait for the write to be complete          C:\FIRST\ATLcode\WorkHere\eeprom.c
005492   d7fe     BRA       0x5490                                                                                          
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005494   98a1     BCF       0xa1,0x4,0x0   	PIR2bits.EEIF = 0;											//clear the EEPROM complete flag										         C:\FIRST\ATLcode\WorkHere\eeprom.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\eeprom.c
005496   94a6     BCF       0xa6,0x2,0x0   	EECON1bits.WREN = 0;										//do not allow writes to EEPROM to continue       C:\FIRST\ATLcode\WorkHere\eeprom.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\eeprom.c
005498   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\eeprom.c
00549a   ffe1                                                                                                               
00549c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00549e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0054a0   ffd9                                                                                                               
0054a2   0012     RETURN    0x0                                                                                             
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           #include "chopshop.h"                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           #include "eeprom.h"                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           /*This file has nothing it it. This is our do nothing autonomous program.        C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           Do not add stuff to this plz.                                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           void User_Autonomous_Code_0(void)                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005ba0   0102     MOVLB     0x2            while (autonomous_mode)   /* DO NOT CHANGE! */                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005ba2   ad79     BTFSS     0x79,0x6,0x1                                                                                    
005ba4   d02a     BRA       0x5bfa                                                                                          
005bf8   d7d3     BRA       0x5ba0                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005ba6   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005ba8   a198     BTFSS     0x98,0x0,0x1                                                                                    
005baa   d026     BRA       0x5bf8                                                                                          
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005bac   0e78     MOVLW     0x78                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005bae   6ee6     MOVWF     0xe6,0x0                                                                                        
005bb0   0e02     MOVLW     0x2                                                                                             
005bb2   6ee6     MOVWF     0xe6,0x0                                                                                        
005bb4   ec30     CALL      0x2e60,0x0                                                                                      
005bb6   f017                                                                                                               
005bb8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005bba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005bbc   5081     MOVF      0x81,0x0,0x0   		pressure_control(PRESSURE_SENSOR);                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005bbe   0b10     ANDLW     0x10                                                                                            
005bc0   e001     BZ        0x5bc4                                                                                          
005bc2   0e01     MOVLW     0x1                                                                                             
005bc4   6ee6     MOVWF     0xe6,0x0                                                                                        
005bc6   ec5e     CALL      0x14bc,0x0                                                                                      
005bc8   f00a                                                                                                               
005bca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                   /* Add your own autonomous code here. */                                 C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005bcc   c26b     MOVFF     0x26b,0xfe6            Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005bce   ffe6                                                                                                               
005bd0   c26a     MOVFF     0x26a,0xfe6                                                                                     
005bd2   ffe6                                                                                                               
005bd4   c269     MOVFF     0x269,0xfe6                                                                                     
005bd6   ffe6                                                                                                               
005bd8   c268     MOVFF     0x268,0xfe6                                                                                     
005bda   ffe6                                                                                                               
005bdc   ec02     CALL      0x4404,0x0                                                                                      
005bde   f022                                                                                                               
005be0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005be2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005be4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005be6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           //Add in the sperate autonomous files                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005be8   0e58     MOVLW     0x58                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005bea   6ee6     MOVWF     0xe6,0x0                                                                                        
005bec   0e02     MOVLW     0x2                                                                                             
005bee   6ee6     MOVWF     0xe6,0x0                                                                                        
005bf0   ec49     CALL      0x2e92,0x0                                                                                      
005bf2   f017                                                                                                               
005bf4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005bf6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
005bfa   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_0.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #include "chopshop.h"                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #include "eeprom.h"                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           /*Currently, everything for the right sensor is commented out. It is unnecessary information that will add to the amount of  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           error that we experience. We only need to turn right thus making the extra sensor unnecessary*/ C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           extern long temp_gyro_angle;                                                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           //this typedef defines the steps that we are going to take on the journey        C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           typedef enum{MOVE_FOWARD_SLOW,                                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			 MOVE_FOWARD,                                                                 C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			 SLOW_DOWN,                                                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			 TURN,                                                                        C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			 PREPARE_TO_SHOOT,	                                                           C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			 FIRE,                                                                        C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		     STAND_BY                                                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			}status_flags;                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           status_flags stat = MOVE_FOWARD_SLOW;		//set the stat flag to the beginning of the journey C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           /*                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           These tables are the amount of revlotions that are needed to move foward the correct distance. Each acceleration and C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           deacceleration is split into steps to prevent the wheels from sliding out        C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           The journey steps are     MFS , MF, SD,  TURN, */                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           int left_journey[5] = {   5,    48,  58, 75,  120};                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           //int right_journey[5] = {5,    75,  82, 85,  170};                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           int JOURNEY_POINTER = 0;                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           void User_Autonomous_Code_1(void)                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           static char last_val_left = 0;				//records last value of the banner sensor on left drive wheel C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           static char last_val_right = 0;				//records last value of the banner sensor on right drive wheel C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           static int counter_L = 0;					//counts the number of clicks from the left banner sensor C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           static int counter_R = 0;					//counts the number of clicks from the right banner sensor C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           static int counter = 0;                                                          C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           static int last_val = 0;                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           //timer_data(1,2);                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003da4   0102     MOVLB     0x2            while (autonomous_mode)   /* DO NOT CHANGE! */                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003da6   ad79     BTFSS     0x79,0x6,0x1                                                                                    
003da8   d1dd     BRA       0x4164                                                                                          
004162   d620     BRA       0x3da4                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003daa   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dac   a198     BTFSS     0x98,0x0,0x1                                                                                    
003dae   d1d9     BRA       0x4162                                                                                          
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003db0   0e78     MOVLW     0x78                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003db2   6ee6     MOVWF     0xe6,0x0                                                                                        
003db4   0e02     MOVLW     0x2                                                                                             
003db6   6ee6     MOVWF     0xe6,0x0                                                                                        
003db8   ec30     CALL      0x2e60,0x0                                                                                      
003dba   f017                                                                                                               
003dbc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003dbe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003dc0   5081     MOVF      0x81,0x0,0x0   		pressure_control(PRESSURE_SENSOR);                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dc2   0b10     ANDLW     0x10                                                                                            
003dc4   e001     BZ        0x3dc8                                                                                          
003dc6   0e01     MOVLW     0x1                                                                                             
003dc8   6ee6     MOVWF     0xe6,0x0                                                                                        
003dca   ec5e     CALL      0x14bc,0x0                                                                                      
003dcc   f00a                                                                                                               
003dce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		//printf("rotations r: %d Rotations L: %d", counter_R, counter_L);             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #if 0                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           	if (timer_data(1,1) > 38)                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           				if(stat == FIRE)                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           					shoot(0);                                                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           				stat = STAND_BY;                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #endif                                                                           C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dd0   c2f2     MOVFF     0x2f2,0x273    		User_Byte6 = counter_L;                                                        C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dd2   f273                                                                                                               
                                           		/*the following code is used to determine if we have a count on the banner sensors*/ C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dd4   5081     MOVF      0x81,0x0,0x0   		if(L_encoder != last_val_left)		//has the value of the encoder changed?		      C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dd6   0b40     ANDLW     0x40                                                                                            
003dd8   e001     BZ        0x3ddc                                                                                          
003dda   0e01     MOVLW     0x1                                                                                             
003ddc   0102     MOVLB     0x2                                                                                             
003dde   5df0     SUBWF     0xf0,0x0,0x1                                                                                    
003de0   e008     BZ        0x3df2                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003de2   2bf2     INCF      0xf2,0x1,0x1   			counter_L++;					//if so, add one to counter                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003de4   0e00     MOVLW     0x0                                                                                             
003de6   23f3     ADDWFC    0xf3,0x1,0x1                                                                                    
003de8   5081     MOVF      0x81,0x0,0x0   			last_val_left = L_encoder;		//save the value                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dea   0b40     ANDLW     0x40                                                                                            
003dec   e001     BZ        0x3df0                                                                                          
003dee   0e01     MOVLW     0x1                                                                                             
003df0   6ff0     MOVWF     0xf0,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           /*                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		if(R_encoder != last_val_right)		//has the value of the encoder changed?       C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			counter_R++;					//if so, add one to the counter                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			last_val_right = R_encoder;		//record the value of the encoder                C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           */		                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003df2   0e05     MOVLW     0x5            		if(stat == FIRE)                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003df4   5de3     SUBWF     0xe3,0x0,0x1                                                                                    
003df6   e103     BNZ       0x3dfe                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003df8   2bf6     INCF      0xf6,0x1,0x1   			counter++;                                                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dfa   0e00     MOVLW     0x0                                                                                             
003dfc   23f7     ADDWFC    0xf7,0x1,0x1                                                                                    
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003dfe   0102     MOVLB     0x2            		flywheel = BASE_FIRE_SPEED;                                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e00   0ed7     MOVLW     0xd7                                                                                            
003e02   6f5f     MOVWF     0x5f,0x1                                                                                        
                                           		/*This determines where in the journey we are currently at. This will take us through each step and  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		stop the robot when we have reached the end of the journey*/                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e04   0102     MOVLB     0x2            		switch(stat)                                                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e06   51e3     MOVF      0xe3,0x0,0x1                                                                                    
003e08   0a06     XORLW     0x6                                                                                             
003e0a   e101     BNZ       0x3e0e                                                                                          
003e0c   d148     BRA       0x409e                                                                                          
003e0e   0a03     XORLW     0x3                                                                                             
003e10   e101     BNZ       0x3e14                                                                                          
003e12   d0db     BRA       0x3fca                                                                                          
003e14   0a06     XORLW     0x6                                                                                             
003e16   e101     BNZ       0x3e1a                                                                                          
003e18   d0a3     BRA       0x3f60                                                                                          
003e1a   0a01     XORLW     0x1                                                                                             
003e1c   e06d     BZ        0x3ef8                                                                                          
003e1e   0a03     XORLW     0x3                                                                                             
003e20   e037     BZ        0x3e90                                                                                          
003e22   0a01     XORLW     0x1                                                                                             
003e24   e001     BZ        0x3e28                                                                                          
003e26   d156     BRA       0x40d4                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		case MOVE_FOWARD_SLOW:                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		//this step is to begin moving the robot forward. This is done to prevent the wheels from skidding C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e28   0e64     MOVLW     0x64           		two_stick_drive(170, 170, &pwm01, &pwm02, 100);			//set the drive motors to move foward	 C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e2a   6ee6     MOVWF     0xe6,0x0                                                                                        
003e2c   0e5d     MOVLW     0x5d                                                                                            
003e2e   6ee6     MOVWF     0xe6,0x0                                                                                        
003e30   0e02     MOVLW     0x2                                                                                             
003e32   6ee6     MOVWF     0xe6,0x0                                                                                        
003e34   0e5c     MOVLW     0x5c                                                                                            
003e36   6ee6     MOVWF     0xe6,0x0                                                                                        
003e38   0e02     MOVLW     0x2                                                                                             
003e3a   6ee6     MOVWF     0xe6,0x0                                                                                        
003e3c   0eaa     MOVLW     0xaa                                                                                            
003e3e   6ee6     MOVWF     0xe6,0x0                                                                                        
003e40   6ee6     MOVWF     0xe6,0x0                                                                                        
003e42   ec58     CALL      0x8b0,0x0                                                                                       
003e44   f004                                                                                                               
003e46   6ef5     MOVWF     0xf5,0x0                                                                                        
003e48   0e07     MOVLW     0x7                                                                                             
003e4a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003e4c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003e4e   c2ee     MOVFF     0x2ee,0xfe9    		if(counter_L >= left_journey[JOURNEY_POINTER])			//have we reached our destination?								// || (counter_R >= right_journey[JOURNEY_POINTER])) C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e50   ffe9                                                                                                               
003e52   c2ef     MOVFF     0x2ef,0xfea                                                                                     
003e54   ffea                                                                                                               
003e56   90d8     BCF       0xd8,0x0,0x0                                                                                    
003e58   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003e5a   36ea     RLCF      0xea,0x1,0x0                                                                                    
003e5c   0ee4     MOVLW     0xe4                                                                                            
003e5e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003e60   0e02     MOVLW     0x2                                                                                             
003e62   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003e64   cfee     MOVFF     0xfee,0x2b                                                                                      
003e66   f02b                                                                                                               
003e68   cfef     MOVFF     0xfef,0x2c                                                                                      
003e6a   f02c                                                                                                               
003e6c   0102     MOVLB     0x2                                                                                             
003e6e   51f3     MOVF      0xf3,0x0,0x1                                                                                    
003e70   182c     XORWF     0x2c,0x0,0x0                                                                                    
003e72   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
003e74   d002     BRA       0x3e7a                                                                                          
003e76   342c     RLCF      0x2c,0x0,0x0                                                                                    
003e78   d004     BRA       0x3e82                                                                                          
003e7a   502b     MOVF      0x2b,0x0,0x0                                                                                    
003e7c   5df2     SUBWF     0xf2,0x0,0x1                                                                                    
003e7e   502c     MOVF      0x2c,0x0,0x0                                                                                    
003e80   59f3     SUBWFB    0xf3,0x0,0x1                                                                                    
003e82   e305     BNC       0x3e8e                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e84   2bee     INCF      0xee,0x1,0x1   				JOURNEY_POINTER++;									//add one to the journey pointer                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e86   0e00     MOVLW     0x0                                                                                             
003e88   23ef     ADDWFC    0xef,0x1,0x1                                                                                    
003e8a   0e01     MOVLW     0x1            				stat = MOVE_FOWARD;									//on to the next step of the journey             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e8c   6fe3     MOVWF     0xe3,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e8e   d122     BRA       0x40d4         		break;                                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		case MOVE_FOWARD:                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e90   0e64     MOVLW     0x64           			two_stick_drive(190, 190, &pwm01, &pwm02, 100);			//power on to full strength C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003e92   6ee6     MOVWF     0xe6,0x0                                                                                        
003e94   0e5d     MOVLW     0x5d                                                                                            
003e96   6ee6     MOVWF     0xe6,0x0                                                                                        
003e98   0e02     MOVLW     0x2                                                                                             
003e9a   6ee6     MOVWF     0xe6,0x0                                                                                        
003e9c   0e5c     MOVLW     0x5c                                                                                            
003e9e   6ee6     MOVWF     0xe6,0x0                                                                                        
003ea0   0e02     MOVLW     0x2                                                                                             
003ea2   6ee6     MOVWF     0xe6,0x0                                                                                        
003ea4   0ebe     MOVLW     0xbe                                                                                            
003ea6   6ee6     MOVWF     0xe6,0x0                                                                                        
003ea8   6ee6     MOVWF     0xe6,0x0                                                                                        
003eaa   ec58     CALL      0x8b0,0x0                                                                                       
003eac   f004                                                                                                               
003eae   6ef5     MOVWF     0xf5,0x0                                                                                        
003eb0   0e07     MOVLW     0x7                                                                                             
003eb2   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003eb4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003eb6   c2ee     MOVFF     0x2ee,0xfe9    			if(counter_L >= left_journey[JOURNEY_POINTER])			//have we reached our destination?								// || (counter_R >= right_journey[JOURNEY_POINTER])) C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003eb8   ffe9                                                                                                               
003eba   c2ef     MOVFF     0x2ef,0xfea                                                                                     
003ebc   ffea                                                                                                               
003ebe   90d8     BCF       0xd8,0x0,0x0                                                                                    
003ec0   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003ec2   36ea     RLCF      0xea,0x1,0x0                                                                                    
003ec4   0ee4     MOVLW     0xe4                                                                                            
003ec6   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003ec8   0e02     MOVLW     0x2                                                                                             
003eca   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003ecc   cfee     MOVFF     0xfee,0x2b                                                                                      
003ece   f02b                                                                                                               
003ed0   cfef     MOVFF     0xfef,0x2c                                                                                      
003ed2   f02c                                                                                                               
003ed4   0102     MOVLB     0x2                                                                                             
003ed6   51f3     MOVF      0xf3,0x0,0x1                                                                                    
003ed8   182c     XORWF     0x2c,0x0,0x0                                                                                    
003eda   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
003edc   d002     BRA       0x3ee2                                                                                          
003ede   342c     RLCF      0x2c,0x0,0x0                                                                                    
003ee0   d004     BRA       0x3eea                                                                                          
003ee2   502b     MOVF      0x2b,0x0,0x0                                                                                    
003ee4   5df2     SUBWF     0xf2,0x0,0x1                                                                                    
003ee6   502c     MOVF      0x2c,0x0,0x0                                                                                    
003ee8   59f3     SUBWFB    0xf3,0x0,0x1                                                                                    
003eea   e305     BNC       0x3ef6                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003eec   2bee     INCF      0xee,0x1,0x1   				JOURNEY_POINTER++;									//add one to the journey pointer                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003eee   0e00     MOVLW     0x0                                                                                             
003ef0   23ef     ADDWFC    0xef,0x1,0x1                                                                                    
003ef2   0e02     MOVLW     0x2            				stat = SLOW_DOWN;									//on to the next step of the journey               C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003ef4   6fe3     MOVWF     0xe3,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003ef6   d0ee     BRA       0x40d4         		break;                                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		case SLOW_DOWN:                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003ef8   0e64     MOVLW     0x64           			two_stick_drive(170, 170, &pwm01, &pwm02, 100);			//start slowing down        C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003efa   6ee6     MOVWF     0xe6,0x0                                                                                        
003efc   0e5d     MOVLW     0x5d                                                                                            
003efe   6ee6     MOVWF     0xe6,0x0                                                                                        
003f00   0e02     MOVLW     0x2                                                                                             
003f02   6ee6     MOVWF     0xe6,0x0                                                                                        
003f04   0e5c     MOVLW     0x5c                                                                                            
003f06   6ee6     MOVWF     0xe6,0x0                                                                                        
003f08   0e02     MOVLW     0x2                                                                                             
003f0a   6ee6     MOVWF     0xe6,0x0                                                                                        
003f0c   0eaa     MOVLW     0xaa                                                                                            
003f0e   6ee6     MOVWF     0xe6,0x0                                                                                        
003f10   6ee6     MOVWF     0xe6,0x0                                                                                        
003f12   ec58     CALL      0x8b0,0x0                                                                                       
003f14   f004                                                                                                               
003f16   6ef5     MOVWF     0xf5,0x0                                                                                        
003f18   0e07     MOVLW     0x7                                                                                             
003f1a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003f1c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003f1e   c2ee     MOVFF     0x2ee,0xfe9    			if(counter_L >= left_journey[JOURNEY_POINTER])			//have we reached our destination?								// || (counter_R >= right_journey[JOURNEY_POINTER])) C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003f20   ffe9                                                                                                               
003f22   c2ef     MOVFF     0x2ef,0xfea                                                                                     
003f24   ffea                                                                                                               
003f26   90d8     BCF       0xd8,0x0,0x0                                                                                    
003f28   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003f2a   36ea     RLCF      0xea,0x1,0x0                                                                                    
003f2c   0ee4     MOVLW     0xe4                                                                                            
003f2e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003f30   0e02     MOVLW     0x2                                                                                             
003f32   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003f34   cfee     MOVFF     0xfee,0x2b                                                                                      
003f36   f02b                                                                                                               
003f38   cfef     MOVFF     0xfef,0x2c                                                                                      
003f3a   f02c                                                                                                               
003f3c   0102     MOVLB     0x2                                                                                             
003f3e   51f3     MOVF      0xf3,0x0,0x1                                                                                    
003f40   182c     XORWF     0x2c,0x0,0x0                                                                                    
003f42   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
003f44   d002     BRA       0x3f4a                                                                                          
003f46   342c     RLCF      0x2c,0x0,0x0                                                                                    
003f48   d004     BRA       0x3f52                                                                                          
003f4a   502b     MOVF      0x2b,0x0,0x0                                                                                    
003f4c   5df2     SUBWF     0xf2,0x0,0x1                                                                                    
003f4e   502c     MOVF      0x2c,0x0,0x0                                                                                    
003f50   59f3     SUBWFB    0xf3,0x0,0x1                                                                                    
003f52   e305     BNC       0x3f5e                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003f54   2bee     INCF      0xee,0x1,0x1   				JOURNEY_POINTER++;									//add one to the journey pointer                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003f56   0e00     MOVLW     0x0                                                                                             
003f58   23ef     ADDWFC    0xef,0x1,0x1                                                                                    
003f5a   0e03     MOVLW     0x3            				stat = TURN;										//on to the next step of the journey                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003f5c   6fe3     MOVWF     0xe3,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003f5e   d0ba     BRA       0x40d4         		break;                                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		case TURN:                                                                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003f60   0e64     MOVLW     0x64           			two_stick_drive(95, 170, &pwm01, &pwm02, 100);			//start slowing down         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003f62   6ee6     MOVWF     0xe6,0x0                                                                                        
003f64   0e5d     MOVLW     0x5d                                                                                            
003f66   6ee6     MOVWF     0xe6,0x0                                                                                        
003f68   0e02     MOVLW     0x2                                                                                             
003f6a   6ee6     MOVWF     0xe6,0x0                                                                                        
003f6c   0e5c     MOVLW     0x5c                                                                                            
003f6e   6ee6     MOVWF     0xe6,0x0                                                                                        
003f70   0e02     MOVLW     0x2                                                                                             
003f72   6ee6     MOVWF     0xe6,0x0                                                                                        
003f74   0eaa     MOVLW     0xaa                                                                                            
003f76   6ee6     MOVWF     0xe6,0x0                                                                                        
003f78   0e5f     MOVLW     0x5f                                                                                            
003f7a   6ee6     MOVWF     0xe6,0x0                                                                                        
003f7c   ec58     CALL      0x8b0,0x0                                                                                       
003f7e   f004                                                                                                               
003f80   6ef5     MOVWF     0xf5,0x0                                                                                        
003f82   0e07     MOVLW     0x7                                                                                             
003f84   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003f86   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003f88   c2ee     MOVFF     0x2ee,0xfe9    			if(counter_L >= left_journey[JOURNEY_POINTER])			//have we reached our destination?								// || (counter_R >= right_journey[JOURNEY_POINTER])) C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003f8a   ffe9                                                                                                               
003f8c   c2ef     MOVFF     0x2ef,0xfea                                                                                     
003f8e   ffea                                                                                                               
003f90   90d8     BCF       0xd8,0x0,0x0                                                                                    
003f92   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003f94   36ea     RLCF      0xea,0x1,0x0                                                                                    
003f96   0ee4     MOVLW     0xe4                                                                                            
003f98   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003f9a   0e02     MOVLW     0x2                                                                                             
003f9c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003f9e   cfee     MOVFF     0xfee,0x2b                                                                                      
003fa0   f02b                                                                                                               
003fa2   cfef     MOVFF     0xfef,0x2c                                                                                      
003fa4   f02c                                                                                                               
003fa6   0102     MOVLB     0x2                                                                                             
003fa8   51f3     MOVF      0xf3,0x0,0x1                                                                                    
003faa   182c     XORWF     0x2c,0x0,0x0                                                                                    
003fac   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
003fae   d002     BRA       0x3fb4                                                                                          
003fb0   342c     RLCF      0x2c,0x0,0x0                                                                                    
003fb2   d004     BRA       0x3fbc                                                                                          
003fb4   502b     MOVF      0x2b,0x0,0x0                                                                                    
003fb6   5df2     SUBWF     0xf2,0x0,0x1                                                                                    
003fb8   502c     MOVF      0x2c,0x0,0x0                                                                                    
003fba   59f3     SUBWFB    0xf3,0x0,0x1                                                                                    
003fbc   e305     BNC       0x3fc8                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003fbe   2bee     INCF      0xee,0x1,0x1   				JOURNEY_POINTER++;									//add one to the journey pointer                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003fc0   0e00     MOVLW     0x0                                                                                             
003fc2   23ef     ADDWFC    0xef,0x1,0x1                                                                                    
003fc4   0e05     MOVLW     0x5            				stat = FIRE;										//on to the next step of the journey                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003fc6   6fe3     MOVWF     0xe3,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003fc8   d085     BRA       0x40d4         		break;                                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		case FIRE:                                                                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003fca   0e64     MOVLW     0x64           			two_stick_drive(127, 127, &pwm01, &pwm02, 100);			//start slowing down        C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003fcc   6ee6     MOVWF     0xe6,0x0                                                                                        
003fce   0e5d     MOVLW     0x5d                                                                                            
003fd0   6ee6     MOVWF     0xe6,0x0                                                                                        
003fd2   0e02     MOVLW     0x2                                                                                             
003fd4   6ee6     MOVWF     0xe6,0x0                                                                                        
003fd6   0e5c     MOVLW     0x5c                                                                                            
003fd8   6ee6     MOVWF     0xe6,0x0                                                                                        
003fda   0e02     MOVLW     0x2                                                                                             
003fdc   6ee6     MOVWF     0xe6,0x0                                                                                        
003fde   0e7f     MOVLW     0x7f                                                                                            
003fe0   6ee6     MOVWF     0xe6,0x0                                                                                        
003fe2   6ee6     MOVWF     0xe6,0x0                                                                                        
003fe4   ec58     CALL      0x8b0,0x0                                                                                       
003fe6   f004                                                                                                               
003fe8   6ef5     MOVWF     0xf5,0x0                                                                                        
003fea   0e07     MOVLW     0x7                                                                                             
003fec   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003fee   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           			//counter++;                                                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003ff0   0102     MOVLB     0x2            				flywheel = BASE_FIRE_SPEED;                                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003ff2   0ed7     MOVLW     0xd7                                                                                            
003ff4   6f5f     MOVWF     0x5f,0x1                                                                                        
                                           			                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003ff6   c2f6     MOVFF     0x2f6,0x2b     			if(counter % 32 == 0)                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
003ff8   f02b                                                                                                               
003ffa   c2f7     MOVFF     0x2f7,0x2c                                                                                      
003ffc   f02c                                                                                                               
003ffe   0e20     MOVLW     0x20                                                                                            
004000   6e22     MOVWF     0x22,0x0                                                                                        
004002   6a23     CLRF      0x23,0x0                                                                                        
004004   c02b     MOVFF     0x2b,0x1d                                                                                       
004006   f01d                                                                                                               
004008   c02c     MOVFF     0x2c,0x1e                                                                                       
00400a   f01e                                                                                                               
00400c   ecad     CALL      0x4b5a,0x0                                                                                      
00400e   f025                                                                                                               
004010   c019     MOVFF     0x19,0x2b                                                                                       
004012   f02b                                                                                                               
004014   c01a     MOVFF     0x1a,0x2c                                                                                       
004016   f02c                                                                                                               
004018   502b     MOVF      0x2b,0x0,0x0                                                                                    
00401a   102c     IORWF     0x2c,0x0,0x0                                                                                    
00401c   e109     BNZ       0x4030                                                                                          
                                           			{	                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
00401e   0e01     MOVLW     0x1            				shoot(1);                                                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004020   6ee6     MOVWF     0xe6,0x0                                                                                        
004022   eca8     CALL      0x2b50,0x0                                                                                      
004024   f015                                                                                                               
004026   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004028   c2f6     MOVFF     0x2f6,0x2f8    				last_val = counter;                                                          C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
00402a   f2f8                                                                                                               
00402c   c2f7     MOVFF     0x2f7,0x2f9                                                                                     
00402e   f2f9                                                                                                               
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           			                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004030   0e0a     MOVLW     0xa            			 if(!(counter % (10 + last_val)))                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004032   0102     MOVLB     0x2                                                                                             
004034   6a2e     CLRF      0x2e,0x0                                                                                        
004036   25f8     ADDWF     0xf8,0x0,0x1                                                                                    
004038   6e2d     MOVWF     0x2d,0x0                                                                                        
00403a   51f9     MOVF      0xf9,0x0,0x1                                                                                    
00403c   222e     ADDWFC    0x2e,0x1,0x0                                                                                    
00403e   c2f6     MOVFF     0x2f6,0x1d                                                                                      
004040   f01d                                                                                                               
004042   c2f7     MOVFF     0x2f7,0x1e                                                                                      
004044   f01e                                                                                                               
004046   c02d     MOVFF     0x2d,0x22                                                                                       
004048   f022                                                                                                               
00404a   c02e     MOVFF     0x2e,0x23                                                                                       
00404c   f023                                                                                                               
00404e   ecad     CALL      0x4b5a,0x0                                                                                      
004050   f025                                                                                                               
004052   ae2e     BTFSS     0x2e,0x7,0x0                                                                                    
004054   d004     BRA       0x405e                                                                                          
004056   6c19     NEGF      0x19,0x0                                                                                        
004058   1e1a     COMF      0x1a,0x1,0x0                                                                                    
00405a   0e00     MOVLW     0x0                                                                                             
00405c   221a     ADDWFC    0x1a,0x1,0x0                                                                                    
00405e   c019     MOVFF     0x19,0x2b                                                                                       
004060   f02b                                                                                                               
004062   c01a     MOVFF     0x1a,0x2c                                                                                       
004064   f02c                                                                                                               
004066   502b     MOVF      0x2b,0x0,0x0                                                                                    
004068   102c     IORWF     0x2c,0x0,0x0                                                                                    
00406a   e109     BNZ       0x407e                                                                                          
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
00406c   6ae6     CLRF      0xe6,0x0       					shoot(0);                                                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
00406e   eca8     CALL      0x2b50,0x0                                                                                      
004070   f015                                                                                                               
004072   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004074   0e02     MOVLW     0x2            					last_val += 2;                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004076   0102     MOVLB     0x2                                                                                             
004078   27f8     ADDWF     0xf8,0x1,0x1                                                                                    
00407a   0e00     MOVLW     0x0                                                                                             
00407c   23f9     ADDWFC    0xf9,0x1,0x1                                                                                    
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
00407e   0102     MOVLB     0x2            			if(counter > 200)                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004080   35f7     RLCF      0xf7,0x0,0x1                                                                                    
004082   e204     BC        0x408c                                                                                          
004084   51f6     MOVF      0xf6,0x0,0x1                                                                                    
004086   08c8     SUBLW     0xc8                                                                                            
004088   0e00     MOVLW     0x0                                                                                             
00408a   55f7     SUBFWB    0xf7,0x0,0x1                                                                                    
00408c   e207     BC        0x409c                                                                                          
                                           			{                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
00408e   6ae6     CLRF      0xe6,0x0       				shoot(0);                                                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004090   eca8     CALL      0x2b50,0x0                                                                                      
004092   f015                                                                                                               
004094   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004096   0102     MOVLB     0x2            				stat = STAND_BY;                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004098   0e06     MOVLW     0x6                                                                                             
00409a   6fe3     MOVWF     0xe3,0x1                                                                                        
                                           			}                                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
00409c   d01b     BRA       0x40d4         		break;                                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		case STAND_BY:                                                                 C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
00409e   0e64     MOVLW     0x64           			two_stick_drive(127, 127, &pwm01, &pwm02, 100);		//stop the robot             C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
0040a0   6ee6     MOVWF     0xe6,0x0                                                                                        
0040a2   0e5d     MOVLW     0x5d                                                                                            
0040a4   6ee6     MOVWF     0xe6,0x0                                                                                        
0040a6   0e02     MOVLW     0x2                                                                                             
0040a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0040aa   0e5c     MOVLW     0x5c                                                                                            
0040ac   6ee6     MOVWF     0xe6,0x0                                                                                        
0040ae   0e02     MOVLW     0x2                                                                                             
0040b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0040b2   0e7f     MOVLW     0x7f                                                                                            
0040b4   6ee6     MOVWF     0xe6,0x0                                                                                        
0040b6   6ee6     MOVWF     0xe6,0x0                                                                                        
0040b8   ec58     CALL      0x8b0,0x0                                                                                       
0040ba   f004                                                                                                               
0040bc   6ef5     MOVWF     0xf5,0x0                                                                                        
0040be   0e07     MOVLW     0x7                                                                                             
0040c0   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0040c2   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0040c4   0102     MOVLB     0x2            			flywheel = 127;                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
0040c6   0e7f     MOVLW     0x7f                                                                                            
0040c8   6f5f     MOVWF     0x5f,0x1                                                                                        
0040ca   6ae6     CLRF      0xe6,0x0       			shoot(0);                                                                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
0040cc   eca8     CALL      0x2b50,0x0                                                                                      
0040ce   f015                                                                                                               
0040d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0040d2   d000     BRA       0x40d4         		break;                                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
0040d4   c2f6     MOVFF     0x2f6,0xfe6    		printf("\rcounter_l %d case %d number to get %d counter %d", counter_L, stat, left_journey[JOURNEY_POINTER], counter); C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
0040d6   ffe6                                                                                                               
0040d8   c2f7     MOVFF     0x2f7,0xfe6                                                                                     
0040da   ffe6                                                                                                               
0040dc   c2ee     MOVFF     0x2ee,0xfe9                                                                                     
0040de   ffe9                                                                                                               
0040e0   c2ef     MOVFF     0x2ef,0xfea                                                                                     
0040e2   ffea                                                                                                               
0040e4   90d8     BCF       0xd8,0x0,0x0                                                                                    
0040e6   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0040e8   36ea     RLCF      0xea,0x1,0x0                                                                                    
0040ea   0ee4     MOVLW     0xe4                                                                                            
0040ec   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0040ee   0e02     MOVLW     0x2                                                                                             
0040f0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0040f2   cfee     MOVFF     0xfee,0xfe6                                                                                     
0040f4   ffe6                                                                                                               
0040f6   cfef     MOVFF     0xfef,0xfe6                                                                                     
0040f8   ffe6                                                                                                               
0040fa   c2e3     MOVFF     0x2e3,0x2b                                                                                      
0040fc   f02b                                                                                                               
0040fe   6a2c     CLRF      0x2c,0x0                                                                                        
004100   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
004102   682c     SETF      0x2c,0x0                                                                                        
004104   c02b     MOVFF     0x2b,0xfe6                                                                                      
004106   ffe6                                                                                                               
004108   c02c     MOVFF     0x2c,0xfe6                                                                                      
00410a   ffe6                                                                                                               
00410c   c2f2     MOVFF     0x2f2,0xfe6                                                                                     
00410e   ffe6                                                                                                               
004110   c2f3     MOVFF     0x2f3,0xfe6                                                                                     
004112   ffe6                                                                                                               
004114   0eb8     MOVLW     0xb8                                                                                            
004116   6e2d     MOVWF     0x2d,0x0                                                                                        
004118   0e55     MOVLW     0x55                                                                                            
00411a   6e2e     MOVWF     0x2e,0x0                                                                                        
00411c   6a2f     CLRF      0x2f,0x0                                                                                        
00411e   c02d     MOVFF     0x2d,0xfe6                                                                                      
004120   ffe6                                                                                                               
004122   c02e     MOVFF     0x2e,0xfe6                                                                                      
004124   ffe6                                                                                                               
004126   c02f     MOVFF     0x2f,0xfe6                                                                                      
004128   ffe6                                                                                                               
00412a   ecfd     CALL      0x57fa,0x0                                                                                      
00412c   f02b                                                                                                               
00412e   6ef5     MOVWF     0xf5,0x0                                                                                        
004130   0e0b     MOVLW     0xb                                                                                             
004132   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004134   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004136   c26b     MOVFF     0x26b,0xfe6            Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004138   ffe6                                                                                                               
00413a   c26a     MOVFF     0x26a,0xfe6                                                                                     
00413c   ffe6                                                                                                               
00413e   c269     MOVFF     0x269,0xfe6                                                                                     
004140   ffe6                                                                                                               
004142   c268     MOVFF     0x268,0xfe6                                                                                     
004144   ffe6                                                                                                               
004146   ec02     CALL      0x4404,0x0                                                                                      
004148   f022                                                                                                               
00414a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00414c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00414e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004150   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           //Add in the sperate autonomous files                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004152   0e58     MOVLW     0x58                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004154   6ee6     MOVWF     0xe6,0x0                                                                                        
004156   0e02     MOVLW     0x2                                                                                             
004158   6ee6     MOVWF     0xe6,0x0                                                                                        
00415a   ec49     CALL      0x2e92,0x0                                                                                      
00415c   f017                                                                                                               
00415e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004160   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
004164   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_1.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           #include "chopshop.h"                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           #include "eeprom.h"                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           /*Currently, everything for the right sensor is commented out. It is unnecessary information that will add to the amount of  C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           error that we experience. We only need to turn right thus making the extra sensor unnecessary*/ C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           extern long temp_gyro_angle;                                                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           //this typedef defines the steps that we are going to take on the journey        C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           static char flag = 0;                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           void User_Autonomous_Code_2(void)                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           static int counter = 0;                                                          C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
00588e   0102     MOVLB     0x2            while (autonomous_mode)   /* DO NOT CHANGE! */                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
005890   ad79     BTFSS     0x79,0x6,0x1                                                                                    
005892   d044     BRA       0x591c                                                                                          
00591a   d7b9     BRA       0x588e                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
005894   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
005896   a198     BTFSS     0x98,0x0,0x1                                                                                    
005898   d040     BRA       0x591a                                                                                          
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
00589a   0e78     MOVLW     0x78                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
00589c   6ee6     MOVWF     0xe6,0x0                                                                                        
00589e   0e02     MOVLW     0x2                                                                                             
0058a0   6ee6     MOVWF     0xe6,0x0                                                                                        
0058a2   ec30     CALL      0x2e60,0x0                                                                                      
0058a4   f017                                                                                                               
0058a6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0058a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0058aa   5081     MOVF      0x81,0x0,0x0   		pressure_control(PRESSURE_SENSOR);                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058ac   0b10     ANDLW     0x10                                                                                            
0058ae   e001     BZ        0x58b2                                                                                          
0058b0   0e01     MOVLW     0x1                                                                                             
0058b2   6ee6     MOVWF     0xe6,0x0                                                                                        
0058b4   ec5e     CALL      0x14bc,0x0                                                                                      
0058b6   f00a                                                                                                               
0058b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058ba   0101     MOVLB     0x1            		if(!flag)                                                                      C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058bc   51fd     MOVF      0xfd,0x0,0x1                                                                                    
0058be   e102     BNZ       0x58c4                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058c0   8091     BSF       0x91,0x0,0x0   			gear_in = 1;                                                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058c2   d002     BRA       0x58c8         		else                                                                           C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058c4   9091     BCF       0x91,0x0,0x0   			gear_in = 0;                                                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058c6   908d     BCF       0x8d,0x0,0x0   			gear_out = 0;                                                                 C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           		//go forward indefinitely                                                      C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058c8   0e64     MOVLW     0x64           		two_stick_drive(254,254,&pwm01,&pwm02,100);                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058ca   6ee6     MOVWF     0xe6,0x0                                                                                        
0058cc   0e5d     MOVLW     0x5d                                                                                            
0058ce   6ee6     MOVWF     0xe6,0x0                                                                                        
0058d0   0e02     MOVLW     0x2                                                                                             
0058d2   6ee6     MOVWF     0xe6,0x0                                                                                        
0058d4   0e5c     MOVLW     0x5c                                                                                            
0058d6   6ee6     MOVWF     0xe6,0x0                                                                                        
0058d8   0e02     MOVLW     0x2                                                                                             
0058da   6ee6     MOVWF     0xe6,0x0                                                                                        
0058dc   0efe     MOVLW     0xfe                                                                                            
0058de   6ee6     MOVWF     0xe6,0x0                                                                                        
0058e0   6ee6     MOVWF     0xe6,0x0                                                                                        
0058e2   ec58     CALL      0x8b0,0x0                                                                                       
0058e4   f004                                                                                                               
0058e6   6ef5     MOVWF     0xf5,0x0                                                                                        
0058e8   0e07     MOVLW     0x7                                                                                             
0058ea   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0058ec   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           			                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058ee   c26b     MOVFF     0x26b,0xfe6            Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
0058f0   ffe6                                                                                                               
0058f2   c26a     MOVFF     0x26a,0xfe6                                                                                     
0058f4   ffe6                                                                                                               
0058f6   c269     MOVFF     0x269,0xfe6                                                                                     
0058f8   ffe6                                                                                                               
0058fa   c268     MOVFF     0x268,0xfe6                                                                                     
0058fc   ffe6                                                                                                               
0058fe   ec02     CALL      0x4404,0x0                                                                                      
005900   f022                                                                                                               
005902   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005904   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005906   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005908   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           //Add in the sperate autonomous files                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
00590a   0e58     MOVLW     0x58                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
00590c   6ee6     MOVWF     0xe6,0x0                                                                                        
00590e   0e02     MOVLW     0x2                                                                                             
005910   6ee6     MOVWF     0xe6,0x0                                                                                        
005912   ec49     CALL      0x2e92,0x0                                                                                      
005914   f017                                                                                                               
005916   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005918   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
00591c   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_2.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           #include "chopshop.h"                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           #include "eeprom.h"                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           /*                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                             this offensive autonomous moves forward to where we want to score from,        C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           	and then score.                                                                 C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0055ea   cfd9     MOVFF     0xfd9,0xfe6    void User_Autonomous_Code_3(void)                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0055ec   ffe6                                                                                                               
0055ee   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0055f0   ffd9                                                                                                               
0055f2   0e02     MOVLW     0x2                                                                                             
0055f4   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           //counter for banner sensor                                                      C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           static int wheel_counter = 0;                                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           static char last_val = 0;                                                        C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           //rotations                                                                      C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0055f6   6adf     CLRF      0xdf,0x0       char wheel_rot = 0;                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           //which step it's on                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0055f8   0e01     MOVLW     0x1            char auto_step = 0;                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0055fa   6adb     CLRF      0xdb,0x0                                                                                        
                                           static int counter = 0;                                                          C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           static char flag = 0;                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0055fc   0102     MOVLB     0x2            while (autonomous_mode)   /* DO NOT CHANGE! */                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0055fe   ad79     BTFSS     0x79,0x6,0x1                                                                                    
005600   d05b     BRA       0x56b8                                                                                          
0056b6   d7a2     BRA       0x55fc                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005602   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005604   a198     BTFSS     0x98,0x0,0x1                                                                                    
005606   d057     BRA       0x56b6                                                                                          
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005608   0e78     MOVLW     0x78                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
00560a   6ee6     MOVWF     0xe6,0x0                                                                                        
00560c   0e02     MOVLW     0x2                                                                                             
00560e   6ee6     MOVWF     0xe6,0x0                                                                                        
005610   ec30     CALL      0x2e60,0x0                                                                                      
005612   f017                                                                                                               
005614   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005616   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005618   5081     MOVF      0x81,0x0,0x0   		pressure_control(PRESSURE_SENSOR);                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
00561a   0b10     ANDLW     0x10                                                                                            
00561c   e001     BZ        0x5620                                                                                          
00561e   0e01     MOVLW     0x1                                                                                             
005620   6ee6     MOVWF     0xe6,0x0                                                                                        
005622   ec5e     CALL      0x14bc,0x0                                                                                      
005624   f00a                                                                                                               
005626   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                   /* Add your own autonomous code here. */                                 C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005628   c26b     MOVFF     0x26b,0xfe6            Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
00562a   ffe6                                                                                                               
00562c   c26a     MOVFF     0x26a,0xfe6                                                                                     
00562e   ffe6                                                                                                               
005630   c269     MOVFF     0x269,0xfe6                                                                                     
005632   ffe6                                                                                                               
005634   c268     MOVFF     0x268,0xfe6                                                                                     
005636   ffe6                                                                                                               
005638   ec02     CALL      0x4404,0x0                                                                                      
00563a   f022                                                                                                               
00563c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00563e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005640   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005642   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005644   0102     MOVLB     0x2            	    counter++;                                                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005646   2bfd     INCF      0xfd,0x1,0x1                                                                                    
005648   0e00     MOVLW     0x0                                                                                             
00564a   23fe     ADDWFC    0xfe,0x1,0x1                                                                                    
00564c   51ff     MOVF      0xff,0x0,0x1   		if(!flag)                                                                      C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
00564e   e102     BNZ       0x5654                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005650   8091     BSF       0x91,0x0,0x0   			gear_in = 1;                                                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005652   d002     BRA       0x5658         		else                                                                           C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005654   9091     BCF       0x91,0x0,0x0   			gear_in = 0;                                                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005656   908d     BCF       0x8d,0x0,0x0   			gear_out = 0;                                                                 C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005658   35fe     RLCF      0xfe,0x0,0x1   		if(counter > 0 && counter < 2000)                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
00565a   e204     BC        0x5664                                                                                          
00565c   51fd     MOVF      0xfd,0x0,0x1                                                                                    
00565e   0800     SUBLW     0x0                                                                                             
005660   0e00     MOVLW     0x0                                                                                             
005662   55fe     SUBFWB    0xfe,0x0,0x1                                                                                    
005664   e21b     BC        0x569c                                                                                          
005666   90d8     BCF       0xd8,0x0,0x0                                                                                    
005668   51fe     MOVF      0xfe,0x0,0x1                                                                                    
00566a   e604     BN        0x5674                                                                                          
00566c   0ed0     MOVLW     0xd0                                                                                            
00566e   5dfd     SUBWF     0xfd,0x0,0x1                                                                                    
005670   0e07     MOVLW     0x7                                                                                             
005672   59fe     SUBWFB    0xfe,0x0,0x1                                                                                    
005674   e213     BC        0x569c                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005676   0e64     MOVLW     0x64           			two_stick_drive(0,0,&pwm01,&pwm02,100);                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
005678   6ee6     MOVWF     0xe6,0x0                                                                                        
00567a   0e5d     MOVLW     0x5d                                                                                            
00567c   6ee6     MOVWF     0xe6,0x0                                                                                        
00567e   0e02     MOVLW     0x2                                                                                             
005680   6ee6     MOVWF     0xe6,0x0                                                                                        
005682   0e5c     MOVLW     0x5c                                                                                            
005684   6ee6     MOVWF     0xe6,0x0                                                                                        
005686   0e02     MOVLW     0x2                                                                                             
005688   6ee6     MOVWF     0xe6,0x0                                                                                        
00568a   6ae6     CLRF      0xe6,0x0                                                                                        
00568c   6ae6     CLRF      0xe6,0x0                                                                                        
00568e   ec58     CALL      0x8b0,0x0                                                                                       
005690   f004                                                                                                               
005692   6ef5     MOVWF     0xf5,0x0                                                                                        
005694   0e07     MOVLW     0x7                                                                                             
005696   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005698   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
00569a   d003     BRA       0x56a2         		else                                                                           C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
00569c   0102     MOVLB     0x2            			gatherer_motor = GATHER_MOTOR_IN;                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
00569e   0efe     MOVLW     0xfe                                                                                            
0056a0   6f66     MOVWF     0x66,0x1                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           /*                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           	if(L_encoder != last_val)		//has the value of the encoder changed?		            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           			wheel_counter++;					//if so, add one to counter                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           			last_val = L_encoder;		//save the value                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		switch(auto_step)                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           			//step 0:                                                                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           			case 0:                                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				//go forward, 75% of full speed                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				two_stick_drive(0,0,&pwm01,&pwm02,75);                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				if(wheel_counter >= 16)                                                      C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           					wheel_rot++;                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           					wheel_counter = 0;                                                          C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				if(wheel_rot == 2)                                                           C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           					auto_step = 1;                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				break;                                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           			//step 1:	                                                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           			case 1:                                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				//go forward, 100% full speed                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				two_stick_drive(0,0,&pwm01,&pwm02,100);                                      C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				if(wheel_counter >= 16)                                                      C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           					wheel_rot++;                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           					wheel_counter = 0;                                                          C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				if(wheel_rot == 8)                                                           C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				{                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           					auto_step = 2;                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				}                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				break;                                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           			//step 2:                                                                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           			case 2:                                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				//spit out balls                                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				gatherer_motor = 0;                                                          C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           				break;                                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0056a2   0102     MOVLB     0x2            		gatherer_motor = GATHER_MOTOR_OUT;                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0056a4   6b66     CLRF      0x66,0x1                                                                                        
0056a6   0e58     MOVLW     0x58                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0056a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0056aa   0e02     MOVLW     0x2                                                                                             
0056ac   6ee6     MOVWF     0xe6,0x0                                                                                        
0056ae   ec49     CALL      0x2e92,0x0                                                                                      
0056b0   f017                                                                                                               
0056b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0056b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0056b8   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_3.c
0056ba   ffe1                                                                                                               
0056bc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0056be   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0056c0   ffd9                                                                                                               
0056c2   0012     RETURN    0x0                                                                                             
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           #include "ifi_utilities.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           #include "user_routines.h"                                                       C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           #include "chopshop.h"                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           #include "eeprom.h"                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           /*This file has nothing it it. This is our do nothing autonomous program.        C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           Do not add stuff to this plz.                                                    C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           */                                                                               C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           void User_Autonomous_Code_4(void)                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b44   0102     MOVLB     0x2            while (autonomous_mode)   /* DO NOT CHANGE! */                                   C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b46   ad79     BTFSS     0x79,0x6,0x1                                                                                    
005b48   d02a     BRA       0x5b9e                                                                                          
005b9c   d7d3     BRA       0x5b44                                                                                          
                                             {                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b4a   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b4c   a198     BTFSS     0x98,0x0,0x1                                                                                    
005b4e   d026     BRA       0x5b9c                                                                                          
                                               {                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b50   0e78     MOVLW     0x78                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b52   6ee6     MOVWF     0xe6,0x0                                                                                        
005b54   0e02     MOVLW     0x2                                                                                             
005b56   6ee6     MOVWF     0xe6,0x0                                                                                        
005b58   ec30     CALL      0x2e60,0x0                                                                                      
005b5a   f017                                                                                                               
005b5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b60   5081     MOVF      0x81,0x0,0x0   		pressure_control(PRESSURE_SENSOR);                                             C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b62   0b10     ANDLW     0x10                                                                                            
005b64   e001     BZ        0x5b68                                                                                          
005b66   0e01     MOVLW     0x1                                                                                             
005b68   6ee6     MOVWF     0xe6,0x0                                                                                        
005b6a   ec5e     CALL      0x14bc,0x0                                                                                      
005b6c   f00a                                                                                                               
005b6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                   /* Add your own autonomous code here. */                                 C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b70   c26b     MOVFF     0x26b,0xfe6            Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                  C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b72   ffe6                                                                                                               
005b74   c26a     MOVFF     0x26a,0xfe6                                                                                     
005b76   ffe6                                                                                                               
005b78   c269     MOVFF     0x269,0xfe6                                                                                     
005b7a   ffe6                                                                                                               
005b7c   c268     MOVFF     0x268,0xfe6                                                                                     
005b7e   ffe6                                                                                                               
005b80   ec02     CALL      0x4404,0x0                                                                                      
005b82   f022                                                                                                               
005b84   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b86   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b88   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b8a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           //Add in the sperate autonomous files                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b8c   0e58     MOVLW     0x58                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b8e   6ee6     MOVWF     0xe6,0x0                                                                                        
005b90   0e02     MOVLW     0x2                                                                                             
005b92   6ee6     MOVWF     0xe6,0x0                                                                                        
005b94   ec49     CALL      0x2e92,0x0                                                                                      
005b96   f017                                                                                                               
005b98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b9a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                             }                                                                              C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
005b9e   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\autonomous_mode_4.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	TITLE		gyro.c                                                                  C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	VERSION:	0.5 (Beta)                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	DATE:		10-Jan-2006                                                             C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *				use. Please do not make copies of this source code, modified                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *				or un-modified, publicly available on the internet or                       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *				elsewhere without permission. Thanks.                                       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           ******************************************************************************** C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CHANGE LOG:                                                                    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	21-Nov-2004  0.1  RKW - Original code.                                         C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	12-Jan-2005  0.2  RKW - Altered Get_Gyro_Rate() and Get_Gyro_Angle() to use    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  long integers for internal calculations, allowing larger     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  numerators and denominators in the GYRO_RATE_SCALE_FACTOR    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  and GYRO_ANGLE_SCALE_FACTOR #defines.                        C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	12-Jan-2005  0.2  RKW - GYRO_RATE_SCALE_FACTOR and GYRO_ANGLE_SCALE_FACTOR     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  #defines added for Analog Devices' ADXRS401, ADXRS150 and    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  ADXRS300 gyros.                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	16-Jan-2005  0.3  RKW - Using preprocessor directives, added the ability       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  to select the gyro type, angular units, sample rate and      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  number of averaged samples per update.                       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	21-Jan-2005  0.3  RKW - Added scaling factors for the BEI GyroChip.            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	30-Jan-2005  0.4  RKW - Revised the way bias calculations are done.            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  Instead of using only one data set as a bias, multiple       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  sample sets can now be averaged over a much longer period    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  of time to derive the gyro bias. Updated documentation.      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	04-Sep-2005  0.5  RKW - Significant overhaul of gyro code to strip-out ADC-    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  specific code and use new adc.c/.h interface. Added          C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	                  deadband option.                                             C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	21-Nov-2005  0.5  RKW - Added support for Murata's ENV-05D gyro.               C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	10-Jan-2006  0.5  RKW - Verified code works on PIC18F8722.                     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
                                           #include "adc.h"                                                                 C:\FIRST\ATLcode\WorkHere\gyro.c
                                           #include "gyro.h"                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\gyro.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\gyro.c
                                           #include <stdio.h>                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           int gyro_bias;                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           int gyro_rate;                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           long gyro_angle;                                                                 C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           unsigned long avg_accum;                                                         C:\FIRST\ATLcode\WorkHere\gyro.c
                                           unsigned int avg_samples;                                                        C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           unsigned char calc_gyro_bias;                                                    C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Initialize_Gyro()                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Initializes the gyro code.                                           C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:		Place "#include "gyro.h" in the includes section                    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					of user_routines.c then call Initialize_Gyro() in                          C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					user_routines.c/User_Initialization().                                     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					After calling Initialize_Gyro(), gyro rate and angle                       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					data will be meaningless until a gyro bias calculation                     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					has taken place by calling Start_Gyro_Bias_Calc() and                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					Stop_Gyro_Bias_Calc().                                                     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
                                           void Initialize_Gyro(void)                                                       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	// reset the heading angle to zero                                              C:\FIRST\ATLcode\WorkHere\gyro.c
0044fc   0103     MOVLB     0x3            	gyro_angle = 0;                                                                 C:\FIRST\ATLcode\WorkHere\gyro.c
0044fe   6b04     CLRF      0x4,0x1                                                                                         
004500   6b05     CLRF      0x5,0x1                                                                                         
004502   6b06     CLRF      0x6,0x1                                                                                         
004504   6b07     CLRF      0x7,0x1                                                                                         
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	// reset the bias calculation flag                                              C:\FIRST\ATLcode\WorkHere\gyro.c
004506   6b0e     CLRF      0xe,0x1        	calc_gyro_bias = 0;                                                             C:\FIRST\ATLcode\WorkHere\gyro.c
004508   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Get_Gyro_Rate()                                                     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Returns the current heading angular rate of change.                  C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Signed integer with the current heading rate of change.              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
                                           int Get_Gyro_Rate(void)                                                          C:\FIRST\ATLcode\WorkHere\gyro.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	// Return the calculated gyro rate to the caller.                               C:\FIRST\ATLcode\WorkHere\gyro.c
00450a   c302     MOVFF     0x302,0x1b     	return((int)((((long)gyro_rate * GYRO_SENSITIVITY * 5L) / ADC_RANGE)) * GYRO_CAL_FACTOR); C:\FIRST\ATLcode\WorkHere\gyro.c
00450c   f01b                                                                                                               
00450e   c303     MOVFF     0x303,0x1c                                                                                      
004510   f01c                                                                                                               
004512   6a1d     CLRF      0x1d,0x0                                                                                        
004514   6a1e     CLRF      0x1e,0x0                                                                                        
004516   ae1c     BTFSS     0x1c,0x7,0x0                                                                                    
004518   d002     BRA       0x451e                                                                                          
00451a   681d     SETF      0x1d,0x0                                                                                        
00451c   681e     SETF      0x1e,0x0                                                                                        
00451e   0e20     MOVLW     0x20                                                                                            
004520   6e20     MOVWF     0x20,0x0                                                                                        
004522   0e03     MOVLW     0x3                                                                                             
004524   6e21     MOVWF     0x21,0x0                                                                                        
004526   6a22     CLRF      0x22,0x0                                                                                        
004528   6a23     CLRF      0x23,0x0                                                                                        
00452a   ecd1     CALL      0x59a2,0x0                                                                                      
00452c   f02c                                                                                                               
00452e   c017     MOVFF     0x17,0x1b                                                                                       
004530   f01b                                                                                                               
004532   c018     MOVFF     0x18,0x1c                                                                                       
004534   f01c                                                                                                               
004536   c019     MOVFF     0x19,0x1d                                                                                       
004538   f01d                                                                                                               
00453a   c01a     MOVFF     0x1a,0x1e                                                                                       
00453c   f01e                                                                                                               
00453e   0e05     MOVLW     0x5                                                                                             
004540   6e20     MOVWF     0x20,0x0                                                                                        
004542   6a21     CLRF      0x21,0x0                                                                                        
004544   6a22     CLRF      0x22,0x0                                                                                        
004546   6a23     CLRF      0x23,0x0                                                                                        
004548   ecd1     CALL      0x59a2,0x0                                                                                      
00454a   f02c                                                                                                               
00454c   c017     MOVFF     0x17,0x1b                                                                                       
00454e   f01b                                                                                                               
004550   c018     MOVFF     0x18,0x1c                                                                                       
004552   f01c                                                                                                               
004554   c019     MOVFF     0x19,0x1d                                                                                       
004556   f01d                                                                                                               
004558   c01a     MOVFF     0x1a,0x1e                                                                                       
00455a   f01e                                                                                                               
00455c   6a20     CLRF      0x20,0x0                                                                                        
00455e   0e08     MOVLW     0x8                                                                                             
004560   6e21     MOVWF     0x21,0x0                                                                                        
004562   6a22     CLRF      0x22,0x0                                                                                        
004564   6a23     CLRF      0x23,0x0                                                                                        
004566   ecd3     CALL      0x4ba6,0x0                                                                                      
004568   f025                                                                                                               
00456a   c01b     MOVFF     0x1b,0x2b                                                                                       
00456c   f02b                                                                                                               
00456e   c01c     MOVFF     0x1c,0x2c                                                                                       
004570   f02c                                                                                                               
004572   0ee8     MOVLW     0xe8                                                                                            
004574   022c     MULWF     0x2c,0x0                                                                                        
004576   cff3     MOVFF     0xff3,0x2c                                                                                      
004578   f02c                                                                                                               
00457a   0e03     MOVLW     0x3                                                                                             
00457c   022b     MULWF     0x2b,0x0                                                                                        
00457e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004580   262c     ADDWF     0x2c,0x1,0x0                                                                                    
004582   0ee8     MOVLW     0xe8                                                                                            
004584   022b     MULWF     0x2b,0x0                                                                                        
004586   cff3     MOVFF     0xff3,0x2b                                                                                      
004588   f02b                                                                                                               
00458a   50f4     MOVF      0xf4,0x0,0x0                                                                                    
00458c   262c     ADDWF     0x2c,0x1,0x0                                                                                    
00458e   0ee8     MOVLW     0xe8                                                                                            
004590   6e22     MOVWF     0x22,0x0                                                                                        
004592   0e03     MOVLW     0x3                                                                                             
004594   6e23     MOVWF     0x23,0x0                                                                                        
004596   c02b     MOVFF     0x2b,0x1d                                                                                       
004598   f01d                                                                                                               
00459a   c02c     MOVFF     0x2c,0x1e                                                                                       
00459c   f01e                                                                                                               
00459e   ecad     CALL      0x4b5a,0x0                                                                                      
0045a0   f025                                                                                                               
0045a2   c01d     MOVFF     0x1d,0x2b                                                                                       
0045a4   f02b                                                                                                               
0045a6   c01e     MOVFF     0x1e,0x2c                                                                                       
0045a8   f02c                                                                                                               
0045aa   c02b     MOVFF     0x2b,0xff3                                                                                      
0045ac   fff3                                                                                                               
0045ae   c02c     MOVFF     0x2c,0xff4                                                                                      
0045b0   fff4                                                                                                               
0045b2   d000     BRA       0x45b4                                                                                          
0045b4   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Get_Gyro_Angle()                                                    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Returns the current heading angle.                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Signed long with the current heading angle.                          C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
0045b6   cfd9     MOVFF     0xfd9,0xfe6    long Get_Gyro_Angle(void)                                                        C:\FIRST\ATLcode\WorkHere\gyro.c
0045b8   ffe6                                                                                                               
0045ba   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0045bc   ffd9                                                                                                               
0045be   0e04     MOVLW     0x4                                                                                             
0045c0   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                             	long angle_with_formula;                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
0045c2   c304     MOVFF     0x304,0x1b     	angle_with_formula = (((gyro_angle * GYRO_SENSITIVITY * 5L) / (ADC_RANGE * ADC_UPDATE_RATE)) * GYRO_CAL_FACTOR); C:\FIRST\ATLcode\WorkHere\gyro.c
0045c4   f01b                                                                                                               
0045c6   c305     MOVFF     0x305,0x1c                                                                                      
0045c8   f01c                                                                                                               
0045ca   c306     MOVFF     0x306,0x1d                                                                                      
0045cc   f01d                                                                                                               
0045ce   c307     MOVFF     0x307,0x1e                                                                                      
0045d0   f01e                                                                                                               
0045d2   0e20     MOVLW     0x20                                                                                            
0045d4   6e20     MOVWF     0x20,0x0                                                                                        
0045d6   0e03     MOVLW     0x3                                                                                             
0045d8   6e21     MOVWF     0x21,0x0                                                                                        
0045da   6a22     CLRF      0x22,0x0                                                                                        
0045dc   6a23     CLRF      0x23,0x0                                                                                        
0045de   ecd1     CALL      0x59a2,0x0                                                                                      
0045e0   f02c                                                                                                               
0045e2   c017     MOVFF     0x17,0x1b                                                                                       
0045e4   f01b                                                                                                               
0045e6   c018     MOVFF     0x18,0x1c                                                                                       
0045e8   f01c                                                                                                               
0045ea   c019     MOVFF     0x19,0x1d                                                                                       
0045ec   f01d                                                                                                               
0045ee   c01a     MOVFF     0x1a,0x1e                                                                                       
0045f0   f01e                                                                                                               
0045f2   0e05     MOVLW     0x5                                                                                             
0045f4   6e20     MOVWF     0x20,0x0                                                                                        
0045f6   6a21     CLRF      0x21,0x0                                                                                        
0045f8   6a22     CLRF      0x22,0x0                                                                                        
0045fa   6a23     CLRF      0x23,0x0                                                                                        
0045fc   ecd1     CALL      0x59a2,0x0                                                                                      
0045fe   f02c                                                                                                               
004600   c017     MOVFF     0x17,0x1b                                                                                       
004602   f01b                                                                                                               
004604   c018     MOVFF     0x18,0x1c                                                                                       
004606   f01c                                                                                                               
004608   c019     MOVFF     0x19,0x1d                                                                                       
00460a   f01d                                                                                                               
00460c   c01a     MOVFF     0x1a,0x1e                                                                                       
00460e   f01e                                                                                                               
004610   0e92     MOVLW     0x92                                                                                            
004612   6e20     MOVWF     0x20,0x0                                                                                        
004614   0e1c     MOVLW     0x1c                                                                                            
004616   6e21     MOVWF     0x21,0x0                                                                                        
004618   6a22     CLRF      0x22,0x0                                                                                        
00461a   6a23     CLRF      0x23,0x0                                                                                        
00461c   ecd3     CALL      0x4ba6,0x0                                                                                      
00461e   f025                                                                                                               
004620   0ee8     MOVLW     0xe8                                                                                            
004622   6e20     MOVWF     0x20,0x0                                                                                        
004624   0e03     MOVLW     0x3                                                                                             
004626   6e21     MOVWF     0x21,0x0                                                                                        
004628   6a22     CLRF      0x22,0x0                                                                                        
00462a   6a23     CLRF      0x23,0x0                                                                                        
00462c   ecd1     CALL      0x59a2,0x0                                                                                      
00462e   f02c                                                                                                               
004630   c017     MOVFF     0x17,0x1b                                                                                       
004632   f01b                                                                                                               
004634   c018     MOVFF     0x18,0x1c                                                                                       
004636   f01c                                                                                                               
004638   c019     MOVFF     0x19,0x1d                                                                                       
00463a   f01d                                                                                                               
00463c   c01a     MOVFF     0x1a,0x1e                                                                                       
00463e   f01e                                                                                                               
004640   0ee8     MOVLW     0xe8                                                                                            
004642   6e20     MOVWF     0x20,0x0                                                                                        
004644   0e03     MOVLW     0x3                                                                                             
004646   6e21     MOVWF     0x21,0x0                                                                                        
004648   6a22     CLRF      0x22,0x0                                                                                        
00464a   6a23     CLRF      0x23,0x0                                                                                        
00464c   ecd3     CALL      0x4ba6,0x0                                                                                      
00464e   f025                                                                                                               
004650   c01b     MOVFF     0x1b,0xfde                                                                                      
004652   ffde                                                                                                               
004654   c01c     MOVFF     0x1c,0xfde                                                                                      
004656   ffde                                                                                                               
004658   c01d     MOVFF     0x1d,0xfde                                                                                      
00465a   ffde                                                                                                               
00465c   c01e     MOVFF     0x1e,0xfdd                                                                                      
00465e   ffdd                                                                                                               
004660   52dd     MOVF      0xdd,0x1,0x0                                                                                    
004662   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                           	//printf("Angle AFTER formula %li \r\r", angle_with_formula);                   C:\FIRST\ATLcode\WorkHere\gyro.c
004664   c304     MOVFF     0x304,0x1b     	return(((gyro_angle * GYRO_SENSITIVITY * 5L) / (ADC_RANGE * ADC_UPDATE_RATE)) * GYRO_CAL_FACTOR); C:\FIRST\ATLcode\WorkHere\gyro.c
004666   f01b                                                                                                               
004668   c305     MOVFF     0x305,0x1c                                                                                      
00466a   f01c                                                                                                               
00466c   c306     MOVFF     0x306,0x1d                                                                                      
00466e   f01d                                                                                                               
004670   c307     MOVFF     0x307,0x1e                                                                                      
004672   f01e                                                                                                               
004674   0e20     MOVLW     0x20                                                                                            
004676   6e20     MOVWF     0x20,0x0                                                                                        
004678   0e03     MOVLW     0x3                                                                                             
00467a   6e21     MOVWF     0x21,0x0                                                                                        
00467c   6a22     CLRF      0x22,0x0                                                                                        
00467e   6a23     CLRF      0x23,0x0                                                                                        
004680   ecd1     CALL      0x59a2,0x0                                                                                      
004682   f02c                                                                                                               
004684   c017     MOVFF     0x17,0x1b                                                                                       
004686   f01b                                                                                                               
004688   c018     MOVFF     0x18,0x1c                                                                                       
00468a   f01c                                                                                                               
00468c   c019     MOVFF     0x19,0x1d                                                                                       
00468e   f01d                                                                                                               
004690   c01a     MOVFF     0x1a,0x1e                                                                                       
004692   f01e                                                                                                               
004694   0e05     MOVLW     0x5                                                                                             
004696   6e20     MOVWF     0x20,0x0                                                                                        
004698   6a21     CLRF      0x21,0x0                                                                                        
00469a   6a22     CLRF      0x22,0x0                                                                                        
00469c   6a23     CLRF      0x23,0x0                                                                                        
00469e   ecd1     CALL      0x59a2,0x0                                                                                      
0046a0   f02c                                                                                                               
0046a2   c017     MOVFF     0x17,0x1b                                                                                       
0046a4   f01b                                                                                                               
0046a6   c018     MOVFF     0x18,0x1c                                                                                       
0046a8   f01c                                                                                                               
0046aa   c019     MOVFF     0x19,0x1d                                                                                       
0046ac   f01d                                                                                                               
0046ae   c01a     MOVFF     0x1a,0x1e                                                                                       
0046b0   f01e                                                                                                               
0046b2   0e92     MOVLW     0x92                                                                                            
0046b4   6e20     MOVWF     0x20,0x0                                                                                        
0046b6   0e1c     MOVLW     0x1c                                                                                            
0046b8   6e21     MOVWF     0x21,0x0                                                                                        
0046ba   6a22     CLRF      0x22,0x0                                                                                        
0046bc   6a23     CLRF      0x23,0x0                                                                                        
0046be   ecd3     CALL      0x4ba6,0x0                                                                                      
0046c0   f025                                                                                                               
0046c2   0ee8     MOVLW     0xe8                                                                                            
0046c4   6e20     MOVWF     0x20,0x0                                                                                        
0046c6   0e03     MOVLW     0x3                                                                                             
0046c8   6e21     MOVWF     0x21,0x0                                                                                        
0046ca   6a22     CLRF      0x22,0x0                                                                                        
0046cc   6a23     CLRF      0x23,0x0                                                                                        
0046ce   ecd1     CALL      0x59a2,0x0                                                                                      
0046d0   f02c                                                                                                               
0046d2   c017     MOVFF     0x17,0x1b                                                                                       
0046d4   f01b                                                                                                               
0046d6   c018     MOVFF     0x18,0x1c                                                                                       
0046d8   f01c                                                                                                               
0046da   c019     MOVFF     0x19,0x1d                                                                                       
0046dc   f01d                                                                                                               
0046de   c01a     MOVFF     0x1a,0x1e                                                                                       
0046e0   f01e                                                                                                               
0046e2   0ee8     MOVLW     0xe8                                                                                            
0046e4   6e20     MOVWF     0x20,0x0                                                                                        
0046e6   0e03     MOVLW     0x3                                                                                             
0046e8   6e21     MOVWF     0x21,0x0                                                                                        
0046ea   6a22     CLRF      0x22,0x0                                                                                        
0046ec   6a23     CLRF      0x23,0x0                                                                                        
0046ee   ecd3     CALL      0x4ba6,0x0                                                                                      
0046f0   f025                                                                                                               
0046f2   d000     BRA       0x46f4                                                                                          
0046f4   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
0046f6   ffe1                                                                                                               
0046f8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0046fa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0046fc   ffd9                                                                                                               
0046fe   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Start_Gyro_Bias_Calc()                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Starts an ongoing gyro bias calculation.                             C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:		IMPORTANT NOTE: Only call this function when your                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					robot will be absolutely still and free of vibration                       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					(e.g., the air compressor is off) until the call to                        C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					Stop_Gyro_Bias_Calc() is made.                                             C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
                                           void Start_Gyro_Bias_Calc(void)                                                  C:\FIRST\ATLcode\WorkHere\gyro.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
004700   0103     MOVLB     0x3            	if(calc_gyro_bias == 0)                                                         C:\FIRST\ATLcode\WorkHere\gyro.c
004702   510e     MOVF      0xe,0x0,0x1                                                                                     
004704   e108     BNZ       0x4716                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// reset the averaging accumulator                                             C:\FIRST\ATLcode\WorkHere\gyro.c
004706   6b08     CLRF      0x8,0x1        		avg_accum = 0;                                                                 C:\FIRST\ATLcode\WorkHere\gyro.c
004708   6b09     CLRF      0x9,0x1                                                                                         
00470a   6b0a     CLRF      0xa,0x1                                                                                         
00470c   6b0b     CLRF      0xb,0x1                                                                                         
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// reset the number of number of average samples counters                      C:\FIRST\ATLcode\WorkHere\gyro.c
00470e   6b0c     CLRF      0xc,0x1        		avg_samples = 0;                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
004710   6b0d     CLRF      0xd,0x1                                                                                         
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// set flag informing the Process_Gyro_Data()                                  C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// function to start a gyro bias calculation                                   C:\FIRST\ATLcode\WorkHere\gyro.c
004712   0e01     MOVLW     0x1            		calc_gyro_bias = 1;                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
004714   6f0e     MOVWF     0xe,0x1                                                                                         
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
004716   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Stop_Gyro_Bias_Calc()                                               C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Ends the current ongoing gyro bias calculation                       C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *					and updates the internal gyro_bias variable.                               C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
                                           void Stop_Gyro_Bias_Calc(void)                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
004718   0103     MOVLB     0x3            	if(calc_gyro_bias == 1)                                                         C:\FIRST\ATLcode\WorkHere\gyro.c
00471a   050e     DECF      0xe,0x0,0x1                                                                                     
00471c   e11e     BNZ       0x475a                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// Update the gyro bias                                                        C:\FIRST\ATLcode\WorkHere\gyro.c
00471e   c30c     MOVFF     0x30c,0x2b     		gyro_bias = (int)(avg_accum / avg_samples);                                    C:\FIRST\ATLcode\WorkHere\gyro.c
004720   f02b                                                                                                               
004722   c30d     MOVFF     0x30d,0x2c                                                                                      
004724   f02c                                                                                                               
004726   6a2d     CLRF      0x2d,0x0                                                                                        
004728   6a2e     CLRF      0x2e,0x0                                                                                        
00472a   c308     MOVFF     0x308,0x1b                                                                                      
00472c   f01b                                                                                                               
00472e   c309     MOVFF     0x309,0x1c                                                                                      
004730   f01c                                                                                                               
004732   c30a     MOVFF     0x30a,0x1d                                                                                      
004734   f01d                                                                                                               
004736   c30b     MOVFF     0x30b,0x1e                                                                                      
004738   f01e                                                                                                               
00473a   c02b     MOVFF     0x2b,0x20                                                                                       
00473c   f020                                                                                                               
00473e   c02c     MOVFF     0x2c,0x21                                                                                       
004740   f021                                                                                                               
004742   c02d     MOVFF     0x2d,0x22                                                                                       
004744   f022                                                                                                               
004746   c02e     MOVFF     0x2e,0x23                                                                                       
004748   f023                                                                                                               
00474a   ecfe     CALL      0x5bfc,0x0                                                                                      
00474c   f02d                                                                                                               
00474e   c01b     MOVFF     0x1b,0x300                                                                                      
004750   f300                                                                                                               
004752   c01c     MOVFF     0x1c,0x301                                                                                      
004754   f301                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// inform Process_Gyro_Data() function that                                    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// the ongoing bias calculation needs to stop                                  C:\FIRST\ATLcode\WorkHere\gyro.c
004756   0103     MOVLB     0x3            		calc_gyro_bias = 0;                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
004758   6b0e     CLRF      0xe,0x1                                                                                         
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
00475a   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Get_Gyro_Bias()                                                     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Returns the current gyro bias.		                                     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Signed integer with the current gyro bias.                           C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
                                           int Get_Gyro_Bias(void)                                                          C:\FIRST\ATLcode\WorkHere\gyro.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	// return the gyro bias to the caller                                           C:\FIRST\ATLcode\WorkHere\gyro.c
00475c   c300     MOVFF     0x300,0xff3    	return(gyro_bias);                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
00475e   fff3                                                                                                               
004760   c301     MOVFF     0x301,0xff4                                                                                     
004762   fff4                                                                                                               
004764   d000     BRA       0x4766                                                                                          
004766   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Set_Gyro_Bias()                                                     C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Manually sets the gyro bias.                                         C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
004768   cfd9     MOVFF     0xfd9,0xfe6    void Set_Gyro_Bias(int new_gyro_bias)                                            C:\FIRST\ATLcode\WorkHere\gyro.c
00476a   ffe6                                                                                                               
00476c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00476e   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	// update gyro_bias                                                             C:\FIRST\ATLcode\WorkHere\gyro.c
004770   0efd     MOVLW     0xfd           	gyro_bias = new_gyro_bias;                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
004772   cfdb     MOVFF     0xfdb,0x300                                                                                     
004774   f300                                                                                                               
004776   0efe     MOVLW     0xfe                                                                                            
004778   cfdb     MOVFF     0xfdb,0x301                                                                                     
00477a   f301                                                                                                               
00477c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
00477e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004780   ffd9                                                                                                               
004782   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Reset_Gyro_Angle()                                                  C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Resets the heading angle to zero.                                    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
                                           void Reset_Gyro_Angle(void)                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	// zero out gyro_angle                                                          C:\FIRST\ATLcode\WorkHere\gyro.c
004784   0103     MOVLB     0x3            	gyro_angle = 0L;                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
004786   6b04     CLRF      0x4,0x1                                                                                         
004788   6b05     CLRF      0x5,0x1                                                                                         
00478a   6b06     CLRF      0x6,0x1                                                                                         
00478c   6b07     CLRF      0x7,0x1                                                                                         
00478e   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	FUNCTION:		Process_Gyro_Data()                                                 C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\gyro.c
004790   cfd9     MOVFF     0xfd9,0xfe6    void Process_Gyro_Data(void)                                                     C:\FIRST\ATLcode\WorkHere\gyro.c
004792   ffe6                                                                                                               
004794   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004796   ffd9                                                                                                               
004798   0e02     MOVLW     0x2                                                                                             
00479a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	int temp_gyro_rate;                                                             C:\FIRST\ATLcode\WorkHere\gyro.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	// should the completed sample set be used to calculate the gyro bias?          C:\FIRST\ATLcode\WorkHere\gyro.c
00479c   0103     MOVLB     0x3            	if(calc_gyro_bias == 1)                                                         C:\FIRST\ATLcode\WorkHere\gyro.c
00479e   050e     DECF      0xe,0x0,0x1                                                                                     
0047a0   e117     BNZ       0x47d0                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// convert the accumulator to an integer and update gyro_bias                  C:\FIRST\ATLcode\WorkHere\gyro.c
0047a2   0e01     MOVLW     0x1            		avg_accum += Get_ADC_Result(GYRO_CHANNEL);                                     C:\FIRST\ATLcode\WorkHere\gyro.c
0047a4   6ee6     MOVWF     0xe6,0x0                                                                                        
0047a6   ec77     CALL      0x3aee,0x0                                                                                      
0047a8   f01d                                                                                                               
0047aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0047ac   cff3     MOVFF     0xff3,0x2b                                                                                      
0047ae   f02b                                                                                                               
0047b0   cff4     MOVFF     0xff4,0x2c                                                                                      
0047b2   f02c                                                                                                               
0047b4   0100     MOVLB     0x0                                                                                             
0047b6   502b     MOVF      0x2b,0x0,0x0                                                                                    
0047b8   0103     MOVLB     0x3                                                                                             
0047ba   2708     ADDWF     0x8,0x1,0x1                                                                                     
0047bc   0100     MOVLB     0x0                                                                                             
0047be   502c     MOVF      0x2c,0x0,0x0                                                                                    
0047c0   0103     MOVLB     0x3                                                                                             
0047c2   2309     ADDWFC    0x9,0x1,0x1                                                                                     
0047c4   0e00     MOVLW     0x0                                                                                             
0047c6   230a     ADDWFC    0xa,0x1,0x1                                                                                     
0047c8   230b     ADDWFC    0xb,0x1,0x1                                                                                     
0047ca   2b0c     INCF      0xc,0x1,0x1    		avg_samples++;                                                                 C:\FIRST\ATLcode\WorkHere\gyro.c
0047cc   230d     ADDWFC    0xd,0x1,0x1                                                                                     
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
0047ce   d040     BRA       0x4850         	else                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// get the latest measured gyro rate                                           C:\FIRST\ATLcode\WorkHere\gyro.c
0047d0   0e01     MOVLW     0x1            		temp_gyro_rate = (int)Get_ADC_Result(GYRO_CHANNEL) - gyro_bias;                C:\FIRST\ATLcode\WorkHere\gyro.c
0047d2   6ee6     MOVWF     0xe6,0x0                                                                                        
0047d4   ec77     CALL      0x3aee,0x0                                                                                      
0047d6   f01d                                                                                                               
0047d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0047da   0103     MOVLB     0x3                                                                                             
0047dc   5100     MOVF      0x0,0x0,0x1                                                                                     
0047de   5cf3     SUBWF     0xf3,0x0,0x0                                                                                    
0047e0   6e2b     MOVWF     0x2b,0x0                                                                                        
0047e2   5101     MOVF      0x1,0x0,0x1                                                                                     
0047e4   58f4     SUBWFB    0xf4,0x0,0x0                                                                                    
0047e6   6e2c     MOVWF     0x2c,0x0                                                                                        
0047e8   c02b     MOVFF     0x2b,0xfde                                                                                      
0047ea   ffde                                                                                                               
0047ec   c02c     MOVFF     0x2c,0xfdd                                                                                      
0047ee   ffdd                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// update reported gyro rate and angle only if                                 C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		// measured gyro rate lies outside the deadband                                C:\FIRST\ATLcode\WorkHere\gyro.c
0047f0   cfde     MOVFF     0xfde,0x2b     		if(temp_gyro_rate < -GYRO_DEADBAND || temp_gyro_rate > GYRO_DEADBAND)          C:\FIRST\ATLcode\WorkHere\gyro.c
0047f2   f02b                                                                                                               
0047f4   cfdd     MOVFF     0xfdd,0x2c                                                                                      
0047f6   f02c                                                                                                               
0047f8   80d8     BSF       0xd8,0x0,0x0                                                                                    
0047fa   502c     MOVF      0x2c,0x0,0x0                                                                                    
0047fc   e704     BNN       0x4806                                                                                          
0047fe   0ef4     MOVLW     0xf4                                                                                            
004800   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
004802   0eff     MOVLW     0xff                                                                                            
004804   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
004806   e30b     BNC       0x481e                                                                                          
004808   cfde     MOVFF     0xfde,0x2d                                                                                      
00480a   f02d                                                                                                               
00480c   cfdd     MOVFF     0xfdd,0x2e                                                                                      
00480e   f02e                                                                                                               
004810   342e     RLCF      0x2e,0x0,0x0                                                                                    
004812   e204     BC        0x481c                                                                                          
004814   502d     MOVF      0x2d,0x0,0x0                                                                                    
004816   080c     SUBLW     0xc                                                                                             
004818   0e00     MOVLW     0x0                                                                                             
00481a   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
00481c   e217     BC        0x484c                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           			// update the gyro rate                                                       C:\FIRST\ATLcode\WorkHere\gyro.c
00481e   cfde     MOVFF     0xfde,0x302    			gyro_rate = temp_gyro_rate;                                                   C:\FIRST\ATLcode\WorkHere\gyro.c
004820   f302                                                                                                               
004822   cfdd     MOVFF     0xfdd,0x303                                                                                     
004824   f303                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\gyro.c
                                           			// integrate the gyro rate to derive the heading                              C:\FIRST\ATLcode\WorkHere\gyro.c
004826   cfde     MOVFF     0xfde,0x2b     			gyro_angle += (long)temp_gyro_rate;                                           C:\FIRST\ATLcode\WorkHere\gyro.c
004828   f02b                                                                                                               
00482a   cfdd     MOVFF     0xfdd,0x2c                                                                                      
00482c   f02c                                                                                                               
00482e   6a2d     CLRF      0x2d,0x0                                                                                        
004830   6a2e     CLRF      0x2e,0x0                                                                                        
004832   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
004834   d002     BRA       0x483a                                                                                          
004836   682d     SETF      0x2d,0x0                                                                                        
004838   682e     SETF      0x2e,0x0                                                                                        
00483a   502b     MOVF      0x2b,0x0,0x0                                                                                    
00483c   2704     ADDWF     0x4,0x1,0x1                                                                                     
00483e   502c     MOVF      0x2c,0x0,0x0                                                                                    
004840   2305     ADDWFC    0x5,0x1,0x1                                                                                     
004842   502d     MOVF      0x2d,0x0,0x0                                                                                    
004844   2306     ADDWFC    0x6,0x1,0x1                                                                                     
004846   502e     MOVF      0x2e,0x0,0x0                                                                                    
004848   2307     ADDWFC    0x7,0x1,0x1                                                                                     
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
00484a   d002     BRA       0x4850         		else                                                                           C:\FIRST\ATLcode\WorkHere\gyro.c
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
00484c   6b02     CLRF      0x2,0x1        			gyro_rate = 0;                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
00484e   6b03     CLRF      0x3,0x1                                                                                         
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
                                           	}	                                                                              C:\FIRST\ATLcode\WorkHere\gyro.c
004850   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\gyro.c
004852   ffe1                                                                                                               
004854   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004856   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004858   ffd9                                                                                                               
00485a   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	TITLE		adc.c                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	DATE:		10-Jan-2006                                                             C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\FIRST\ATLcode\WorkHere\adc.c
                                           *				use. Please do not make copies of this source code, modified                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *				or un-modified, publicly available on the internet or                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *				elsewhere without permission. Thanks.                                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           ******************************************************************************** C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CHANGE LOG:                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	10-Jul-2005  0.1  RKW - Original code.                                         C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	17-Jul-2005  0.2  RKW - Added x128 and x256 oversampling options.              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	13-Dec-2005  0.3  RKW - Altered code to use the "special event trigger"        C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	                  functionality of the CCP2 hardware to initiate ADC           C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	                  conversions. This was formally done using timer 2.           C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	10-Jan-2006  0.4  RKW - Ported to PIC18F8722, which required going back        C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	                  to using timer 2 to initiate an analog to digital            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	                  conversion due to a bug in the PIC18F8722 design.            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	                  Modified #pragma interruptlow statement to include           C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	                  .tmpdata section.                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           #include "adc.h"                                                                 C:\FIRST\ATLcode\WorkHere\adc.c
                                           #include "ifi_aliases.h"                                                         C:\FIRST\ATLcode\WorkHere\adc.c
                                           #include "ifi_default.h"                                                         C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           unsigned int adc_sample_rate;                                                    C:\FIRST\ATLcode\WorkHere\adc.c
                                           unsigned int adc_samples_per_update;                                             C:\FIRST\ATLcode\WorkHere\adc.c
                                           unsigned char num_adc_channels;                                                  C:\FIRST\ATLcode\WorkHere\adc.c
                                           unsigned char adc_result_divisor;                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           volatile unsigned long accum[NUM_ADC_CHANNELS]; // sample accumulator            C:\FIRST\ATLcode\WorkHere\adc.c
                                           volatile unsigned int adc_result[NUM_ADC_CHANNELS]; // ADC recults               C:\FIRST\ATLcode\WorkHere\adc.c
                                           volatile unsigned int samples; // current number of samples accumulated          C:\FIRST\ATLcode\WorkHere\adc.c
                                           volatile unsigned char channel; // current ADC channel                           C:\FIRST\ATLcode\WorkHere\adc.c
                                           volatile unsigned char adc_update_count = 0; // ADC update flag                  C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Initialize_ADC()                                                    C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		Initializes the Analog to Digital Conversion (ADC) hardware.         C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:		Place "#include "adc.h" in the includes section                     C:\FIRST\ATLcode\WorkHere\adc.c
                                           *					of user_routines.c then call Initialize_ADC() in                           C:\FIRST\ATLcode\WorkHere\adc.c
                                           *					user_routines.c/User_Initialization().                                     C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
0039a8   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_ADC(void)                                                        C:\FIRST\ATLcode\WorkHere\adc.c
0039aa   ffe6                                                                                                               
0039ac   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0039ae   ffd9                                                                                                               
0039b0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	unsigned char i;                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// Initialize ADC related global variables using default values from adc.h.     C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// Another way to do this would be to pass the values in, read them from        C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// values stored in EEPROM or perhaps set them via a menu-based terminal        C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// interface.                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
0039b2   0ec8     MOVLW     0xc8           	adc_sample_rate = ADC_SAMPLE_RATE;                                              C:\FIRST\ATLcode\WorkHere\adc.c
0039b4   0101     MOVLB     0x1                                                                                             
0039b6   6f80     MOVWF     0x80,0x1                                                                                        
0039b8   6b81     CLRF      0x81,0x1                                                                                        
0039ba   0e0e     MOVLW     0xe            	num_adc_channels = NUM_ADC_CHANNELS;                                            C:\FIRST\ATLcode\WorkHere\adc.c
0039bc   6f84     MOVWF     0x84,0x1                                                                                        
0039be   0e01     MOVLW     0x1            	adc_result_divisor = ADC_RESULT_DIVISOR;                                        C:\FIRST\ATLcode\WorkHere\adc.c
0039c0   6f85     MOVWF     0x85,0x1                                                                                        
0039c2   0e04     MOVLW     0x4            	adc_samples_per_update = ADC_SAMPLES_PER_UPDATE;                                C:\FIRST\ATLcode\WorkHere\adc.c
0039c4   6f82     MOVWF     0x82,0x1                                                                                        
0039c6   6b83     CLRF      0x83,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// reset the sample accumulator(s) to zero                                      C:\FIRST\ATLcode\WorkHere\adc.c
0039c8   6adf     CLRF      0xdf,0x0       	for(i=0; i < num_adc_channels; i++)                                             C:\FIRST\ATLcode\WorkHere\adc.c
0039ca   5184     MOVF      0x84,0x0,0x1                                                                                    
0039cc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0039ce   e210     BC        0x39f0                                                                                          
0039ec   2adf     INCF      0xdf,0x1,0x0                                                                                    
0039ee   d7ed     BRA       0x39ca                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
0039d0   50df     MOVF      0xdf,0x0,0x0   		accum[i] = 0L;                                                                 C:\FIRST\ATLcode\WorkHere\adc.c
0039d2   0d04     MULLW     0x4                                                                                             
0039d4   cff3     MOVFF     0xff3,0xfe9                                                                                     
0039d6   ffe9                                                                                                               
0039d8   cff4     MOVFF     0xff4,0xfea                                                                                     
0039da   ffea                                                                                                               
0039dc   0e86     MOVLW     0x86                                                                                            
0039de   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0039e0   0e01     MOVLW     0x1                                                                                             
0039e2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0039e4   6aee     CLRF      0xee,0x0                                                                                        
0039e6   6aee     CLRF      0xee,0x0                                                                                        
0039e8   6aee     CLRF      0xee,0x0                                                                                        
0039ea   6aee     CLRF      0xee,0x0                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// start a new sample set                                                       C:\FIRST\ATLcode\WorkHere\adc.c
0039f0   6bda     CLRF      0xda,0x1       	samples = 0;                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
0039f2   6bdb     CLRF      0xdb,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// start at ADC channel zero                                                    C:\FIRST\ATLcode\WorkHere\adc.c
0039f4   6bdc     CLRF      0xdc,0x1       	channel = 0;                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// enable the ADC hardware and select ADC channel 0                             C:\FIRST\ATLcode\WorkHere\adc.c
0039f6   0e01     MOVLW     0x1            	ADCON0 = 0b00000001;                                                            C:\FIRST\ATLcode\WorkHere\adc.c
0039f8   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	#ifdef _FRC_BOARD                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// If this is being built for the FRC-RC, enable all sixteen analog             C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// inputs. This shouldn't be changed because the FRC-RC has sixteen             C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// dedicated analog inputs. The VCFG0 and VCFG1 bits are also set to            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// select Vdd and Vss as the reference voltages                                 C:\FIRST\ATLcode\WorkHere\adc.c
0039fa   6ac1     CLRF      0xc1,0x0       	ADCON1 = 0;                                                                     C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	#else                                                                           C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// If this is being built for the EDU-RC, enable NUM_ADC_CHANNELS               C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// analog inputs (NUM_ADC_CHANNELS is documented in adc.h). This must           C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// match the default value used in user_routines.c/User_Initialization()/       C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// Set_Number_of_Analog_Channels(). The VCFG0 and VCFG1 bits are also           C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// set to select Vdd and Vss as the reference voltages                          C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	if(num_adc_channels >= 1 && num_adc_channels <= 14)                             C:\FIRST\ATLcode\WorkHere\adc.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           		ADCON1 = 15 - num_adc_channels;                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                            	else                                                                           C:\FIRST\ATLcode\WorkHere\adc.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           		ADCON1 = 0; // sixteen channnels or out of range                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	#endif                                                                          C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// select Fosc/64 as the ADC Conversion Clock and right justify data            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// in the conversion result register                                            C:\FIRST\ATLcode\WorkHere\adc.c
0039fc   0e86     MOVLW     0x86           	ADCON2 = 0b10000110;                                                            C:\FIRST\ATLcode\WorkHere\adc.c
0039fe   6ec0     MOVWF     0xc0,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// ADC interrupt is low priority                                                C:\FIRST\ATLcode\WorkHere\adc.c
003a00   9c9f     BCF       0x9f,0x6,0x0   	IPR1bits.ADIP = 0;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\FIRST\ATLcode\WorkHere\adc.c
003a02   9c9e     BCF       0x9e,0x6,0x0   	PIR1bits.ADIF = 0;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// enable the ADC interrupt                                                     C:\FIRST\ATLcode\WorkHere\adc.c
003a04   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// initialize and start timer 2, which is responsible for starting              C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// analog to digital conversions                                                C:\FIRST\ATLcode\WorkHere\adc.c
003a06   c180     MOVFF     0x180,0xfe6    	Initialize_Timer_2(adc_sample_rate);                                            C:\FIRST\ATLcode\WorkHere\adc.c
003a08   ffe6                                                                                                               
003a0a   c181     MOVFF     0x181,0xfe6                                                                                     
003a0c   ffe6                                                                                                               
003a0e   d814     RCALL     0x3a38                                                                                          
003a10   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003a12   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003a14   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003a16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003a18   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003a1a   ffd9                                                                                                               
003a1c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Disable_ADC()                                                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		Disables the Analog to Digital Conversion (ADC) hardware.            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
003a1e   cfd9     MOVFF     0xfd9,0xfe6    void Disable_ADC(void)                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003a20   ffe6                                                                                                               
003a22   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003a24   ffd9                                                                                                               
003a26   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	unsigned char i;                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// disable timer 2                                                              C:\FIRST\ATLcode\WorkHere\adc.c
003a28   d85f     RCALL     0x3ae8         	Disable_Timer_2();                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// disable the ADC interrupt                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003a2a   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// disable the ADC hardware and select ADC channel 0                            C:\FIRST\ATLcode\WorkHere\adc.c
003a2c   6ac2     CLRF      0xc2,0x0       	ADCON0 = 0b00000000;                                                            C:\FIRST\ATLcode\WorkHere\adc.c
003a2e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003a30   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003a32   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003a34   ffd9                                                                                                               
003a36   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Initialize_Timer_2()                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		Initializes the timer 2 hardware, which is responsible for           C:\FIRST\ATLcode\WorkHere\adc.c
                                           *					periodically starting analog to digital conversions.                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:	adc.c/Initialize_ADC()                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		Unsigned integer containing the sample rate expressed in Hz       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:		The only supported sample rates are 200Hz, 400Hz, 800Hz,            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *					1600Hz, 3200Hz and 6400Hz.                                                 C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
003a38   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_Timer_2(unsigned int adc_sample_rate)                            C:\FIRST\ATLcode\WorkHere\adc.c
003a3a   ffe6                                                                                                               
003a3c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003a3e   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003a40   0efd     MOVLW     0xfd           	switch(adc_sample_rate)                                                         C:\FIRST\ATLcode\WorkHere\adc.c
003a42   cfdb     MOVFF     0xfdb,0x1d                                                                                      
003a44   f01d                                                                                                               
003a46   0efe     MOVLW     0xfe                                                                                            
003a48   cfdb     MOVFF     0xfdb,0x1e                                                                                      
003a4a   f01e                                                                                                               
003a4c   501d     MOVF      0x1d,0x0,0x0                                                                                    
003a4e   e102     BNZ       0x3a54                                                                                          
003a50   0e19     MOVLW     0x19                                                                                            
003a52   181e     XORWF     0x1e,0x0,0x0                                                                                    
003a54   e03b     BZ        0x3acc                                                                                          
003a56   0e80     MOVLW     0x80                                                                                            
003a58   181d     XORWF     0x1d,0x0,0x0                                                                                    
003a5a   e102     BNZ       0x3a60                                                                                          
003a5c   0e0c     MOVLW     0xc                                                                                             
003a5e   181e     XORWF     0x1e,0x0,0x0                                                                                    
003a60   e030     BZ        0x3ac2                                                                                          
003a62   0e40     MOVLW     0x40                                                                                            
003a64   181d     XORWF     0x1d,0x0,0x0                                                                                    
003a66   e102     BNZ       0x3a6c                                                                                          
003a68   0e06     MOVLW     0x6                                                                                             
003a6a   181e     XORWF     0x1e,0x0,0x0                                                                                    
003a6c   e025     BZ        0x3ab8                                                                                          
003a6e   0e20     MOVLW     0x20                                                                                            
003a70   181d     XORWF     0x1d,0x0,0x0                                                                                    
003a72   e102     BNZ       0x3a78                                                                                          
003a74   0e03     MOVLW     0x3                                                                                             
003a76   181e     XORWF     0x1e,0x0,0x0                                                                                    
003a78   e01a     BZ        0x3aae                                                                                          
003a7a   0e90     MOVLW     0x90                                                                                            
003a7c   181d     XORWF     0x1d,0x0,0x0                                                                                    
003a7e   e102     BNZ       0x3a84                                                                                          
003a80   0e01     MOVLW     0x1                                                                                             
003a82   181e     XORWF     0x1e,0x0,0x0                                                                                    
003a84   e00f     BZ        0x3aa4                                                                                          
003a86   0ec8     MOVLW     0xc8                                                                                            
003a88   181d     XORWF     0x1d,0x0,0x0                                                                                    
003a8a   e101     BNZ       0x3a8e                                                                                          
003a8c   501e     MOVF      0x1e,0x0,0x0                                                                                    
003a8e   e005     BZ        0x3a9a                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           		case 200:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use these parameters for a 200Hz ADC sample rate                           C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\FIRST\ATLcode\WorkHere\adc.c
003a9a   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003a9c   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\FIRST\ATLcode\WorkHere\adc.c
003a9e   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003aa0   6ecb     MOVWF     0xcb,0x0                                                                                        
003aa2   d019     BRA       0x3ad6         			break;                                                                        C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		case 400:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use these parameters for a 400Hz ADC sample rate                           C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\FIRST\ATLcode\WorkHere\adc.c
003aa4   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003aa6   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\FIRST\ATLcode\WorkHere\adc.c
003aa8   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003aaa   6ecb     MOVWF     0xcb,0x0                                                                                        
003aac   d014     BRA       0x3ad6         			break;                                                                        C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		case 800:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use these parameters for a 800Hz ADC sample rate                           C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\FIRST\ATLcode\WorkHere\adc.c
003aae   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003ab0   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\FIRST\ATLcode\WorkHere\adc.c
003ab2   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\FIRST\ATLcode\WorkHere\adc.c
003ab4   6ecb     MOVWF     0xcb,0x0                                                                                        
003ab6   d00f     BRA       0x3ad6         			break;                                                                        C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		case 1600:                                                                     C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use these parameters for a 1600Hz ADC sample rate                          C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\FIRST\ATLcode\WorkHere\adc.c
003ab8   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003aba   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\FIRST\ATLcode\WorkHere\adc.c
003abc   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003abe   6ecb     MOVWF     0xcb,0x0                                                                                        
003ac0   d00a     BRA       0x3ad6         			break;                                                                        C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		case 3200:                                                                     C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use these parameters for a 3200Hz ADC sample rate                          C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use a 1:1 prescaler and 1:11 postscaler                                    C:\FIRST\ATLcode\WorkHere\adc.c
003ac2   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003ac4   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\FIRST\ATLcode\WorkHere\adc.c
003ac6   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\FIRST\ATLcode\WorkHere\adc.c
003ac8   6ecb     MOVWF     0xcb,0x0                                                                                        
003aca   d005     BRA       0x3ad6         			break;                                                                        C:\FIRST\ATLcode\WorkHere\adc.c
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           		case 6400:                                                                     C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use these parameters for a 6400Hz ADC sample rate                          C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\FIRST\ATLcode\WorkHere\adc.c
003acc   0e50     MOVLW     0x50           			T2CON = 0b01010000;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003ace   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\FIRST\ATLcode\WorkHere\adc.c
003ad0   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003ad2   6ecb     MOVWF     0xcb,0x0                                                                                        
003ad4   d000     BRA       0x3ad6         			break;                                                                        C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		default:                                                                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// if a non-supported rate is specified,                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// default to a 200Hz ADC sample rate                                         C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\FIRST\ATLcode\WorkHere\adc.c
003a90   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003a92   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\FIRST\ATLcode\WorkHere\adc.c
003a94   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003a96   6ecb     MOVWF     0xcb,0x0                                                                                        
003a98   d01e     BRA       0x3ad6         			break;                                                                        C:\FIRST\ATLcode\WorkHere\adc.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// make sure the timer 2 register starts at zero                                C:\FIRST\ATLcode\WorkHere\adc.c
003ad6   6acc     CLRF      0xcc,0x0       	TMR2 = 0x00;                                                                    C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// timer 2 interrupt is low priority                                            C:\FIRST\ATLcode\WorkHere\adc.c
003ad8   929f     BCF       0x9f,0x1,0x0   	IPR1bits.TMR2IP = 0;                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\FIRST\ATLcode\WorkHere\adc.c
003ada   929e     BCF       0x9e,0x1,0x0   	PIR1bits.TMR2IF = 0;                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// enable the timer 2 interrupt                                                 C:\FIRST\ATLcode\WorkHere\adc.c
003adc   829d     BSF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 1;                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// enable timer 2                                                               C:\FIRST\ATLcode\WorkHere\adc.c
003ade   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 1;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003ae0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003ae2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003ae4   ffd9                                                                                                               
003ae6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Disable_Timer_2()                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		Disables the timer 2 hardware.                                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
                                           void Disable_Timer_2(void)                                                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// disable the timer 2 interrupt                                                C:\FIRST\ATLcode\WorkHere\adc.c
003ae8   929d     BCF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 0;                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// disable timer 2                                                              C:\FIRST\ATLcode\WorkHere\adc.c
003aea   94ca     BCF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 0;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003aec   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Get_ADC_Result()                                                    C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		Given the ADC channel number, returns the last ADC result            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *					expressed in "data number" units.                                          C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		ADC channel number                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
003aee   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_ADC_Result(unsigned char channel)                               C:\FIRST\ATLcode\WorkHere\adc.c
003af0   ffe6                                                                                                               
003af2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003af4   ffd9                                                                                                               
003af6   0e02     MOVLW     0x2                                                                                             
003af8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	unsigned int temp_adc_result;                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
003afa   0efe     MOVLW     0xfe           	if(channel <= num_adc_channels)                                                 C:\FIRST\ATLcode\WorkHere\adc.c
003afc   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003afe   f02b                                                                                                               
003b00   0101     MOVLB     0x1                                                                                             
003b02   5184     MOVF      0x84,0x0,0x1                                                                                    
003b04   80d8     BSF       0xd8,0x0,0x0                                                                                    
003b06   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
003b08   e312     BNC       0x3b2e                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// disable the ADC interrupt                                                   C:\FIRST\ATLcode\WorkHere\adc.c
003b0a   9c9d     BCF       0x9d,0x6,0x0   		PIE1bits.ADIE = 0;                                                             C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// one is subtracted because analog input 1 maps to adc_result[0],             C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// input 2 maps to adc_result[1],..., input 16 maps to adc_result[15]          C:\FIRST\ATLcode\WorkHere\adc.c
003b0c   0efe     MOVLW     0xfe           		temp_adc_result = adc_result[channel - 1];                                     C:\FIRST\ATLcode\WorkHere\adc.c
003b0e   04db     DECF      0xdb,0x0,0x0                                                                                    
003b10   6ee9     MOVWF     0xe9,0x0                                                                                        
003b12   6aea     CLRF      0xea,0x0                                                                                        
003b14   90d8     BCF       0xd8,0x0,0x0                                                                                    
003b16   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003b18   36ea     RLCF      0xea,0x1,0x0                                                                                    
003b1a   0ebe     MOVLW     0xbe                                                                                            
003b1c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003b1e   0e01     MOVLW     0x1                                                                                             
003b20   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003b22   cfee     MOVFF     0xfee,0xfde                                                                                     
003b24   ffde                                                                                                               
003b26   cfed     MOVFF     0xfed,0xfdd                                                                                     
003b28   ffdd                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// enable the ADC interrupt                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003b2a   8c9d     BSF       0x9d,0x6,0x0   		PIE1bits.ADIE = 1;                                                             C:\FIRST\ATLcode\WorkHere\adc.c
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
003b2c   d002     BRA       0x3b32         	else                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// bad channel number; return zero                                             C:\FIRST\ATLcode\WorkHere\adc.c
003b2e   6ade     CLRF      0xde,0x0       		temp_adc_result = 0;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003b30   6add     CLRF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
003b32   cfde     MOVFF     0xfde,0x2b     	return(temp_adc_result);                                                        C:\FIRST\ATLcode\WorkHere\adc.c
003b34   f02b                                                                                                               
003b36   cfdd     MOVFF     0xfdd,0x2c                                                                                      
003b38   f02c                                                                                                               
003b3a   c02b     MOVFF     0x2b,0xff3                                                                                      
003b3c   fff3                                                                                                               
003b3e   c02c     MOVFF     0x2c,0xff4                                                                                      
003b40   fff4                                                                                                               
003b42   d000     BRA       0x3b44                                                                                          
003b44   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003b46   ffe1                                                                                                               
003b48   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b4a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003b4c   ffd9                                                                                                               
003b4e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Convert_ADC_to_mV()                                                 C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		Converts the raw output of the ADC to millivolts.                    C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		ADC output value to convert                                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Millivolts                                                           C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
003b50   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Convert_ADC_to_mV(unsigned int adc)                                 C:\FIRST\ATLcode\WorkHere\adc.c
003b52   ffe6                                                                                                               
003b54   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003b56   ffd9                                                                                                               
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003b58   0efd     MOVLW     0xfd           	return((unsigned int)(((long)adc * (VREF_POS_MV - VREF_NEG_MV)) / ADC_RANGE));  C:\FIRST\ATLcode\WorkHere\adc.c
003b5a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003b5c   f02b                                                                                                               
003b5e   0efe     MOVLW     0xfe                                                                                            
003b60   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003b62   f02c                                                                                                               
003b64   6a2d     CLRF      0x2d,0x0                                                                                        
003b66   6a2e     CLRF      0x2e,0x0                                                                                        
003b68   0e88     MOVLW     0x88                                                                                            
003b6a   6e20     MOVWF     0x20,0x0                                                                                        
003b6c   0e13     MOVLW     0x13                                                                                            
003b6e   6e21     MOVWF     0x21,0x0                                                                                        
003b70   6a22     CLRF      0x22,0x0                                                                                        
003b72   6a23     CLRF      0x23,0x0                                                                                        
003b74   c02b     MOVFF     0x2b,0x1b                                                                                       
003b76   f01b                                                                                                               
003b78   c02c     MOVFF     0x2c,0x1c                                                                                       
003b7a   f01c                                                                                                               
003b7c   c02d     MOVFF     0x2d,0x1d                                                                                       
003b7e   f01d                                                                                                               
003b80   c02e     MOVFF     0x2e,0x1e                                                                                       
003b82   f01e                                                                                                               
003b84   ecd1     CALL      0x59a2,0x0                                                                                      
003b86   f02c                                                                                                               
003b88   c017     MOVFF     0x17,0x2b                                                                                       
003b8a   f02b                                                                                                               
003b8c   c018     MOVFF     0x18,0x2c                                                                                       
003b8e   f02c                                                                                                               
003b90   c019     MOVFF     0x19,0x2d                                                                                       
003b92   f02d                                                                                                               
003b94   c01a     MOVFF     0x1a,0x2e                                                                                       
003b96   f02e                                                                                                               
003b98   6a20     CLRF      0x20,0x0                                                                                        
003b9a   0e08     MOVLW     0x8                                                                                             
003b9c   6e21     MOVWF     0x21,0x0                                                                                        
003b9e   6a22     CLRF      0x22,0x0                                                                                        
003ba0   6a23     CLRF      0x23,0x0                                                                                        
003ba2   c02b     MOVFF     0x2b,0x1b                                                                                       
003ba4   f01b                                                                                                               
003ba6   c02c     MOVFF     0x2c,0x1c                                                                                       
003ba8   f01c                                                                                                               
003baa   c02d     MOVFF     0x2d,0x1d                                                                                       
003bac   f01d                                                                                                               
003bae   c02e     MOVFF     0x2e,0x1e                                                                                       
003bb0   f01e                                                                                                               
003bb2   ecd3     CALL      0x4ba6,0x0                                                                                      
003bb4   f025                                                                                                               
003bb6   c01b     MOVFF     0x1b,0x2b                                                                                       
003bb8   f02b                                                                                                               
003bba   c01c     MOVFF     0x1c,0x2c                                                                                       
003bbc   f02c                                                                                                               
003bbe   c01d     MOVFF     0x1d,0x2d                                                                                       
003bc0   f02d                                                                                                               
003bc2   c01e     MOVFF     0x1e,0x2e                                                                                       
003bc4   f02e                                                                                                               
003bc6   c02b     MOVFF     0x2b,0xff3                                                                                      
003bc8   fff3                                                                                                               
003bca   c02c     MOVFF     0x2c,0xff4                                                                                      
003bcc   fff4                                                                                                               
003bce   d000     BRA       0x3bd0                                                                                          
003bd0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003bd2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003bd4   ffd9                                                                                                               
003bd6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Get_ADC_Result_Count()                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:                                                                       C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
003bd8   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_ADC_Result_Count()                                             C:\FIRST\ATLcode\WorkHere\adc.c
003bda   ffe6                                                                                                               
003bdc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003bde   ffd9                                                                                                               
003be0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	unsigned char temp_adc_update_count;                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// disable the ADC interrupt                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003be2   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
003be4   c34d     MOVFF     0x34d,0xfdf    	temp_adc_update_count = adc_update_count;                                       C:\FIRST\ATLcode\WorkHere\adc.c
003be6   ffdf                                                                                                               
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// enable the ADC interrupt                                                     C:\FIRST\ATLcode\WorkHere\adc.c
003be8   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
003bea   50df     MOVF      0xdf,0x0,0x0   	return(temp_adc_update_count);                                                  C:\FIRST\ATLcode\WorkHere\adc.c
003bec   d000     BRA       0x3bee                                                                                          
003bee   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003bf0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003bf2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003bf4   ffd9                                                                                                               
003bf6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Reset_ADC_Result_Count()                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		Resets the ADC update counter to zero                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
                                           void Reset_ADC_Result_Count()                                                    C:\FIRST\ATLcode\WorkHere\adc.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// disable the ADC interrupt                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003bf8   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
003bfa   0103     MOVLB     0x3            	adc_update_count = 0;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003bfc   6b4d     CLRF      0x4d,0x1                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// enable the ADC interrupt                                                     C:\FIRST\ATLcode\WorkHere\adc.c
003bfe   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
003c00   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		Timer_2_Int_Handler()                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
                                           void Timer_2_Int_Handler(void)                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// start a new analog to digital conversion                                     C:\FIRST\ATLcode\WorkHere\adc.c
003c02   82c2     BSF       0xc2,0x1,0x0   	ADCON0bits.GO = 1;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
003c04   0012     RETURN    0x0            }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           /******************************************************************************* C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	FUNCTION:		ADC_Int_Handler()                                                   C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PURPOSE:		ADC interrupt service routine                                        C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	PARAMETERS:		None                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	RETURNS:		Nothing                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *	COMMENTS:                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           *                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           *******************************************************************************/ C:\FIRST\ATLcode\WorkHere\adc.c
003c06   cfd9     MOVFF     0xfd9,0xfe6    void ADC_Int_Handler(void)                                                       C:\FIRST\ATLcode\WorkHere\adc.c
003c08   ffe6                                                                                                               
003c0a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003c0c   ffd9                                                                                                               
003c0e   0e05     MOVLW     0x5                                                                                             
003c10   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	unsigned int adc;                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           	unsigned char adcon0_temp;                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                           	int i;                                                                          C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// get conversion results                                                       C:\FIRST\ATLcode\WorkHere\adc.c
003c12   50c4     MOVF      0xc4,0x0,0x0   	adc = ADRESH;                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
003c14   6ede     MOVWF     0xde,0x0                                                                                        
003c16   6add     CLRF      0xdd,0x0                                                                                        
003c18   cfd9     MOVFF     0xfd9,0xfe9    	adc <<= 8;                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
003c1a   ffe9                                                                                                               
003c1c   cfda     MOVFF     0xfda,0xfea                                                                                     
003c1e   ffea                                                                                                               
003c20   50ee     MOVF      0xee,0x0,0x0                                                                                    
003c22   6eed     MOVWF     0xed,0x0                                                                                        
003c24   6aef     CLRF      0xef,0x0                                                                                        
003c26   50c3     MOVF      0xc3,0x0,0x0   	adc += ADRESL;                                                                  C:\FIRST\ATLcode\WorkHere\adc.c
003c28   26de     ADDWF     0xde,0x1,0x0                                                                                    
003c2a   0e00     MOVLW     0x0                                                                                             
003c2c   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// add the ADC data to the appropriate accumulator                              C:\FIRST\ATLcode\WorkHere\adc.c
003c2e   cfde     MOVFF     0xfde,0x2b     	accum[channel] += (long)adc;                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003c30   f02b                                                                                                               
003c32   cfdd     MOVFF     0xfdd,0x2c                                                                                      
003c34   f02c                                                                                                               
003c36   6a2d     CLRF      0x2d,0x0                                                                                        
003c38   6a2e     CLRF      0x2e,0x0                                                                                        
003c3a   0101     MOVLB     0x1                                                                                             
003c3c   51dc     MOVF      0xdc,0x0,0x1                                                                                    
003c3e   0d04     MULLW     0x4                                                                                             
003c40   cff3     MOVFF     0xff3,0xfe9                                                                                     
003c42   ffe9                                                                                                               
003c44   cff4     MOVFF     0xff4,0xfea                                                                                     
003c46   ffea                                                                                                               
003c48   0e86     MOVLW     0x86                                                                                            
003c4a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003c4c   0e01     MOVLW     0x1                                                                                             
003c4e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003c50   502b     MOVF      0x2b,0x0,0x0                                                                                    
003c52   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003c54   502c     MOVF      0x2c,0x0,0x0                                                                                    
003c56   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
003c58   502d     MOVF      0x2d,0x0,0x0                                                                                    
003c5a   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
003c5c   502e     MOVF      0x2e,0x0,0x0                                                                                    
003c5e   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                           	                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// increment the ADC channel index                                              C:\FIRST\ATLcode\WorkHere\adc.c
003c60   2bdc     INCF      0xdc,0x1,0x1   	channel++;                                                                      C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// do we need to wrap around to zero?                                           C:\FIRST\ATLcode\WorkHere\adc.c
003c62   5184     MOVF      0x84,0x0,0x1   	if(channel >= num_adc_channels)                                                 C:\FIRST\ATLcode\WorkHere\adc.c
003c64   5ddc     SUBWF     0xdc,0x0,0x1                                                                                    
003c66   e304     BNC       0x3c70                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
003c68   6bdc     CLRF      0xdc,0x1       		channel = 0;                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
003c6a   2bda     INCF      0xda,0x1,0x1   		samples++;                                                                     C:\FIRST\ATLcode\WorkHere\adc.c
003c6c   0e00     MOVLW     0x0                                                                                             
003c6e   23db     ADDWFC    0xdb,0x1,0x1                                                                                    
                                           	}                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// Select next ADC channel. This also starts the process whereby the ADC        C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// sample and hold capacitor is allowed to start charging, which must be        C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// completed before the next analog to digital conversion can be started.       C:\FIRST\ATLcode\WorkHere\adc.c
003c70   0e02     MOVLW     0x2            	adcon0_temp = channel;                                                          C:\FIRST\ATLcode\WorkHere\adc.c
003c72   c1dc     MOVFF     0x1dc,0xfdb                                                                                     
003c74   ffdb                                                                                                               
003c76   50db     MOVF      0xdb,0x0,0x0   	adcon0_temp <<= 2;                                                              C:\FIRST\ATLcode\WorkHere\adc.c
003c78   0d04     MULLW     0x4                                                                                             
003c7a   0e02     MOVLW     0x2                                                                                             
003c7c   cff3     MOVFF     0xff3,0xfdb                                                                                     
003c7e   ffdb                                                                                                               
003c80   80db     BSF       0xdb,0x0,0x0   	adcon0_temp |= 0b00000001;                                                      C:\FIRST\ATLcode\WorkHere\adc.c
003c82   50db     MOVF      0xdb,0x0,0x0   	ADCON0 = adcon0_temp;                                                           C:\FIRST\ATLcode\WorkHere\adc.c
003c84   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           	// check to see if we've got a full sample set                                  C:\FIRST\ATLcode\WorkHere\adc.c
003c86   5182     MOVF      0x82,0x0,0x1   	if(samples >= adc_samples_per_update)                                           C:\FIRST\ATLcode\WorkHere\adc.c
003c88   5dda     SUBWF     0xda,0x0,0x1                                                                                    
003c8a   5183     MOVF      0x83,0x0,0x1                                                                                    
003c8c   59db     SUBWFB    0xdb,0x0,0x1                                                                                    
003c8e   e201     BC        0x3c92                                                                                          
003c90   d083     BRA       0x3d98                                                                                          
                                           	{                                                                               C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// update the ADC result array                                                 C:\FIRST\ATLcode\WorkHere\adc.c
003c92   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\FIRST\ATLcode\WorkHere\adc.c
003c94   6adb     CLRF      0xdb,0x0                                                                                        
003c96   0e04     MOVLW     0x4                                                                                             
003c98   6adb     CLRF      0xdb,0x0                                                                                        
003c9a   0e03     MOVLW     0x3                                                                                             
003c9c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003c9e   f02b                                                                                                               
003ca0   0e04     MOVLW     0x4                                                                                             
003ca2   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003ca4   f02c                                                                                                               
003ca6   0101     MOVLB     0x1                                                                                             
003ca8   5184     MOVF      0x84,0x0,0x1                                                                                    
003caa   0100     MOVLB     0x0                                                                                             
003cac   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
003cae   d002     BRA       0x3cb4                                                                                          
003cb0   90d8     BCF       0xd8,0x0,0x0                                                                                    
003cb2   d003     BRA       0x3cba                                                                                          
003cb4   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
003cb6   0e00     MOVLW     0x0                                                                                             
003cb8   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
003cba   e23a     BC        0x3d30                                                                                          
003d24   0e03     MOVLW     0x3                                                                                             
003d26   2adb     INCF      0xdb,0x1,0x0                                                                                    
003d28   0e04     MOVLW     0x4                                                                                             
003d2a   e301     BNC       0x3d2e                                                                                          
003d2c   2adb     INCF      0xdb,0x1,0x0                                                                                    
003d2e   d7b5     BRA       0x3c9a                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\adc.c
003cbc   0e03     MOVLW     0x3            			adc_result[i] = (long)(accum[i] >> adc_result_divisor);                       C:\FIRST\ATLcode\WorkHere\adc.c
003cbe   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003cc0   ffe9                                                                                                               
003cc2   0e04     MOVLW     0x4                                                                                             
003cc4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
003cc6   ffea                                                                                                               
003cc8   90d8     BCF       0xd8,0x0,0x0                                                                                    
003cca   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003ccc   36ea     RLCF      0xea,0x1,0x0                                                                                    
003cce   90d8     BCF       0xd8,0x0,0x0                                                                                    
003cd0   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003cd2   36ea     RLCF      0xea,0x1,0x0                                                                                    
003cd4   0e86     MOVLW     0x86                                                                                            
003cd6   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003cd8   0e01     MOVLW     0x1                                                                                             
003cda   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003cdc   0101     MOVLB     0x1                                                                                             
003cde   5185     MOVF      0x85,0x0,0x1                                                                                    
003ce0   0b1f     ANDLW     0x1f                                                                                            
003ce2   cfee     MOVFF     0xfee,0x2b                                                                                      
003ce4   f02b                                                                                                               
003ce6   cfee     MOVFF     0xfee,0x2c                                                                                      
003ce8   f02c                                                                                                               
003cea   cfee     MOVFF     0xfee,0x2d                                                                                      
003cec   f02d                                                                                                               
003cee   cfee     MOVFF     0xfee,0x2e                                                                                      
003cf0   f02e                                                                                                               
003cf2   e007     BZ        0x3d02                                                                                          
003cf4   90d8     BCF       0xd8,0x0,0x0                                                                                    
003cf6   322e     RRCF      0x2e,0x1,0x0                                                                                    
003cf8   322d     RRCF      0x2d,0x1,0x0                                                                                    
003cfa   322c     RRCF      0x2c,0x1,0x0                                                                                    
003cfc   322b     RRCF      0x2b,0x1,0x0                                                                                    
003cfe   06e8     DECF      0xe8,0x1,0x0                                                                                    
003d00   e1f9     BNZ       0x3cf4                                                                                          
003d02   0e03     MOVLW     0x3                                                                                             
003d04   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003d06   ffe9                                                                                                               
003d08   0e04     MOVLW     0x4                                                                                             
003d0a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
003d0c   ffea                                                                                                               
003d0e   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d10   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003d12   36ea     RLCF      0xea,0x1,0x0                                                                                    
003d14   0ebe     MOVLW     0xbe                                                                                            
003d16   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003d18   0e01     MOVLW     0x1                                                                                             
003d1a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003d1c   c02b     MOVFF     0x2b,0xfee                                                                                      
003d1e   ffee                                                                                                               
003d20   c02c     MOVFF     0x2c,0xfed                                                                                      
003d22   ffed                                                                                                               
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// reset the sample accumulator(s) to zero                                     C:\FIRST\ATLcode\WorkHere\adc.c
003d30   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\FIRST\ATLcode\WorkHere\adc.c
003d32   6adb     CLRF      0xdb,0x0                                                                                        
003d34   0e04     MOVLW     0x4                                                                                             
003d36   6adb     CLRF      0xdb,0x0                                                                                        
003d38   0e03     MOVLW     0x3                                                                                             
003d3a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003d3c   f02b                                                                                                               
003d3e   0e04     MOVLW     0x4                                                                                             
003d40   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003d42   f02c                                                                                                               
003d44   0101     MOVLB     0x1                                                                                             
003d46   5184     MOVF      0x84,0x0,0x1                                                                                    
003d48   0100     MOVLB     0x0                                                                                             
003d4a   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
003d4c   d002     BRA       0x3d52                                                                                          
003d4e   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d50   d003     BRA       0x3d58                                                                                          
003d52   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
003d54   0e00     MOVLW     0x0                                                                                             
003d56   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
003d58   e21a     BC        0x3d8e                                                                                          
003d82   0e03     MOVLW     0x3                                                                                             
003d84   2adb     INCF      0xdb,0x1,0x0                                                                                    
003d86   0e04     MOVLW     0x4                                                                                             
003d88   e301     BNC       0x3d8c                                                                                          
003d8a   2adb     INCF      0xdb,0x1,0x0                                                                                    
003d8c   d7d5     BRA       0x3d38                                                                                          
                                           		{                                                                              C:\FIRST\ATLcode\WorkHere\adc.c
003d5a   0e03     MOVLW     0x3            			accum[i] = 0L;                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003d5c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003d5e   ffe9                                                                                                               
003d60   0e04     MOVLW     0x4                                                                                             
003d62   cfdb     MOVFF     0xfdb,0xfea                                                                                     
003d64   ffea                                                                                                               
003d66   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d68   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003d6a   36ea     RLCF      0xea,0x1,0x0                                                                                    
003d6c   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d6e   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003d70   36ea     RLCF      0xea,0x1,0x0                                                                                    
003d72   0e86     MOVLW     0x86                                                                                            
003d74   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003d76   0e01     MOVLW     0x1                                                                                             
003d78   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003d7a   6aee     CLRF      0xee,0x0                                                                                        
003d7c   6aee     CLRF      0xee,0x0                                                                                        
003d7e   6aee     CLRF      0xee,0x0                                                                                        
003d80   6aee     CLRF      0xee,0x0                                                                                        
                                           		}                                                                              C:\FIRST\ATLcode\WorkHere\adc.c
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// signal that a fresh sample set is available                                 C:\FIRST\ATLcode\WorkHere\adc.c
003d8e   0103     MOVLB     0x3            		adc_update_count++;                                                            C:\FIRST\ATLcode\WorkHere\adc.c
003d90   2b4d     INCF      0x4d,0x1,0x1                                                                                    
                                                                                                                            C:\FIRST\ATLcode\WorkHere\adc.c
                                           		// start a fresh sample set                                                    C:\FIRST\ATLcode\WorkHere\adc.c
003d92   0101     MOVLB     0x1            		samples = 0;                                                                   C:\FIRST\ATLcode\WorkHere\adc.c
003d94   6bda     CLRF      0xda,0x1                                                                                        
003d96   6bdb     CLRF      0xdb,0x1                                                                                        
                                           	}	                                                                              C:\FIRST\ATLcode\WorkHere\adc.c
003d98   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\FIRST\ATLcode\WorkHere\adc.c
003d9a   ffe1                                                                                                               
003d9c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003d9e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003da0   ffd9                                                                                                               
003da2   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: aarg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB3                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB7		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB2                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB6		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB1                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB5		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB0                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB4		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB0		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AEXP		RES 1       ; 8 bit biased exponent for argument A                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   LIST P=18F8722                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                           ;	RCS Header $Id: barg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB0		RES 1       ; most significant byte of argument B                        C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BEXP		RES 1       ; 8 bit biased exponent for argument B                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           /* $Id: adcbusy.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /****************************************************************                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Function Name:  BusyADC                                    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Return Value:   char: 1 - A/D busy, 0 - Done converting    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Parameters:     void                                       *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Description:    This routine checks the GO bit to see if   *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *                    the A/D conversion is done.                *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           ****************************************************************/                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           char BusyADC(void)                                                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                             /* If the GO bit is set then A/D is busy converting                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              * Otherwise A/D is done converting                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              */                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
00080e   50c2     MOVF      0xc2,0x0,0x0     return(ADCON0bits.GO);                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000810   0b02     ANDLW     0x2                                                                                             
000812   e001     BZ        0x816                                                                                           
000814   0e01     MOVLW     0x1                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000816   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                   LIST                                                                     C:\mcc18\mpasm\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\mcc18\mpasm\p18cxxx.inc
                                                   LIST                                                                     C:\mcc18\mpasm\P18F8722.INC
                                                                                                                            C:\mcc18\mpasm\P18F8722.INC
                                           ;==========================================================================      C:\mcc18\mpasm\P18F8722.INC
                                           ;  $Id: P18F8722.INC,v 1.2 2004/10/06 22:25:07 curtiss Exp $                     C:\mcc18\mpasm\P18F8722.INC
                                           ;  MPASM PIC18F8722 processor include                                            C:\mcc18\mpasm\P18F8722.INC
                                           ;                                                                                C:\mcc18\mpasm\P18F8722.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\mcc18\mpasm\P18F8722.INC
                                           ;==========================================================================      C:\mcc18\mpasm\P18F8722.INC
                                                                                                                            C:\mcc18\mpasm\P18F8722.INC
                                                   LIST                                                                     C:\mcc18\mpasm\P18F8722.INC
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\mcc18\mpasm\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\mcc18\mpasm\p18cxxx.inc
                                             ENDIF                                                                          C:\mcc18\mpasm\p18cxxx.inc
                                           /* $Id: adcclose.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /************************************************************************        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Function Name:  CloseADC                                           *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Return Value:   void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Parameters:     void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Description:    This routine turns the A/D off and disables        *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *                    the A/D interrupt                                  *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           ************************************************************************/        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           void CloseADC(void)                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005d7e   90c2     BCF       0xc2,0x0,0x0     ADCON0bits.ADON = 0;                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005d80   9c9d     BCF       0x9d,0x6,0x0     PIE1bits.ADIE = 0;                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005d82   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /* $Id: adcconv.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Function Name:  ConvertADC                                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Description:    This routine starts an A/D conversion by       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *                    setting the GO bit.                            *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           void ConvertADC(void)                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
005d84   82c2     BSF       0xc2,0x1,0x0     ADCON0bits.GO = 1;  // Set the GO bit to start a conversion                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
005d86   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d56   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d58   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d5a   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d5c   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d5e   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d60   d000     BRA       0x5d62             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d62   d000     BRA       0x5d64             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d64   d000     BRA       0x5d66             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d66   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d68   d7fa     BRA       0x5d5e             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d6a   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Function Name: Delay1KTCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Description:   This routine delays for multiples of 1000        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 1000 Tcy      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  A value of 1 to 255 to provides 1000 to          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  255000 Tcy delay.  A value of 0 will provide     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  a delay of 256000 Tcy.                           *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               EXTERN  DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1KTCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           Delay1KTCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d1a   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d1c   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d1e   6e35     MOVWF     0x35,0x0           movwf   DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d20   0e48     MOVLW     0x48               movlw   0x48                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d22   d001     BRA       0x5d26             bra     D1K_1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1Kx                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d24   0e4c     MOVLW     0x4c               movlw   0x4c                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1K_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d26   6ee7     MOVWF     0xe7,0x0           movwf   INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d28   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d2a   d7fe     BRA       0x5d28             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d2c   6ae7     CLRF      0xe7,0x0           clrf    INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d2e   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d30   d7fe     BRA       0x5d2e             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d32   2e35     DECFSZ    0x35,0x1,0x0       decfsz  DelayCounter1,1                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d34   d7f7     BRA       0x5d24             bra     D1Kx                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d36   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d38   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               GLOBAL  Delay1KTCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           DELAYDAT1      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           DelayCounter1  RES 1                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                          GLOBAL DelayCounter1                                              C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	       END                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004b3a   6c1d     NEGF      0x1d,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004b3c   1e1e     COMF      0x1e,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004b3e   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004b40   221e     ADDWFC    0x1e,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004b36   ae1e     BTFSS     0x1e,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004b38   d005     BRA       0x4b44                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; FLO1632U:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; FLO1632S:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;         Two byte integer to Float conversion                                   C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;         FLO1632U: Two byte unsigned integer in iA0,iA1                         C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;         FLO1632S: Two byte signed integer in iA0,iA1                           C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     GLOBAL FLO1632U                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     GLOBAL FLO1632S                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     EXTERN __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           FLO1632U:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b30   9e26     BCF       0x26,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW   ;; Flag as unsigned                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b32   d008     BRA       0x4b44                   bra       jI2F16Beg                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           FLO1632S:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b34   9e26     BCF       0x26,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     braClr    iA0,7,jI2F16Beg                                              C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     ;; Negate                                                              C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     Neg2      iA1,iA0                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b42   8e26     BSF       0x26,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           jI2F16Beg:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     ;; Copy integer to fW                                                  C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b44   c01e     MOVFF     0x1e,0x18                movff     iA0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b46   f018                                                                                                               
004b48   c01d     MOVFF     0x1d,0x17                movff     iA1,fW1                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b4a   f017                                                                                                               
004b4c   6a2a     CLRF      0x2a,0x0                 clrf      fW2                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b4e   6a29     CLRF      0x29,0x0                 clrf      fW3                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b50   0e8e     MOVLW     0x8e                     movlw     0x8E                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b52   6e19     MOVWF     0x19,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b54   6a1a     CLRF      0x1a,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b56   ef95     GOTO      0x4d2a                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
004b58   f026                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGSbits                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGS		RES 1       ; floating point library exception flags                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, FPFLAGS, FPFLAGSbits                                       C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;	RCS Header $Id: fxd1616s.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       16/16 Bit Signed Fixed Point Divide 16/16 -> 16.16                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Input:  16 bit fixed point dividend in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Use:    CALL    FXD1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Output: 16 bit fixed point quotient in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Timing:	28	149	85.17	clks                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       PM: 33            DM: 8                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		EXTERN	FXD1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           FXD1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		GLOBAL		FXD1616S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b5a   6a25     CLRF      0x25,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b5c   ae23     BTFSS     0x23,0x7,0x0           BTFSS   	BARGB0,MSB                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b5e   efb6     GOTO      0x4b6c                 GOTO    	DA1616S                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b60   f025                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b62   6c22     NEGF      0x22,0x0               NEGF    	BARGB1		; if BARG<0, negate and toggle sign                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b64   1e23     COMF      0x23,0x1,0x0           COMF    	BARGB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b66   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b68   2223     ADDWFC    0x23,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b6a   1e25     COMF      0x25,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           DA1616S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b6c   ae1e     BTFSS     0x1e,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b6e   efbe     GOTO      0x4b7c                 GOTO        D1616S                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b70   f025                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b72   6c1d     NEGF      0x1d,0x0               NEGF        AARGB1		; if AARG<0, negate and toggle sign                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b74   1e1e     COMF      0x1e,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b76   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b78   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b7a   1e25     COMF      0x25,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b7c   ec41     CALL      0x5c82,0x0     		CALL		FXD1616U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b7e   f02e                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b80   be1e     BTFSC     0x1e,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b82   efce     GOTO      0x4b9c         		GOTO		D1616SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b84   f025                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b86   ae25     BTFSS     0x25,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b88   0c00     RETLW     0x0            		RETLW		0x00                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b8a   6c1d     NEGF      0x1d,0x0               NEGF        AARGB1		; negate if result negative                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b8c   1e1e     COMF      0x1e,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b8e   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b90   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b92   6c19     NEGF      0x19,0x0       		NEGF        REMB1                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b94   1e1a     COMF      0x1a,0x1,0x0           COMF        REMB0,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b96   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b98   221a     ADDWFC    0x1a,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b9a   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b9c   be25     BTFSC     0x25,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004b9e   efc5     GOTO      0x4b8a         		GOTO		D1616SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004ba0   f025                                                                                                               
004ba2   8826     BSF       0x26,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x8000                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           								; with positive sign                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
004ba4   0cff     RETLW     0xff           		RETLW		0xFF                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           /*** Unsigned Integer Division: 16-bit by 16-bit                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***       for: Saved (for the worst case) at least 5*16 = 80 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           void FXD1616U (/*unsigned arg0, unsigned arg1*/)                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                 _asm                                                                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c82   6a1a     CLRF      0x1a,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c84   6a19     CLRF      0x19,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // INDF1 = 16                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c86   0e10     MOVLW     0x10               movlw 16                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c88   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c8a   90d8     BCF       0xd8,0x0,0x0   	bcf STATUS, 0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//AARG16 <<= 1; Carry is always clear at this point.                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c8c   361d     RLCF      0x1d,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c8e   361e     RLCF      0x1e,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//PROD = (PROD << 1) | (AARG16 >> 16)                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c90   3619     RLCF      0x19,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c92   361a     RLCF      0x1a,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//if (PROD >= BARG16)                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c94   5022     MOVF      0x22,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c96   5c19     SUBWF     0x19,0x0,0x0   	subwf REMB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c98   5023     MOVF      0x23,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c9a   581a     SUBWFB    0x1a,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c9c   e305     BNC       0x5ca8         	bnc endloop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //PROD -= BARG16;                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005c9e   5022     MOVF      0x22,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ca0   5e19     SUBWF     0x19,0x1,0x0   	    subwf REMB1, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ca2   5023     MOVF      0x23,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ca4   5a1a     SUBWFB    0x1a,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //++AARG16; Since AARG16 was shift to the left above, the increment will    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          simply set the LSbit. Using incf also clears the carry, which C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          means we don't have to clear the carry at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ca6   2a1d     INCF      0x1d,0x1,0x0           incf AARGB1, 1, 0                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           endloop:                                                                         C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ca8   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005caa   d7f0     BRA       0x5c8c             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cac   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           ;	RCS Header $Id: fxd3232s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       32/32 Bit Signed Fixed Point Divide 32/32 -> 32.32                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Input:  32 bit fixed point dividend in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Use:    CALL    FXD3232S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Output: 32 bit fixed point quotient in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Timing:	32	410	127.22	clks                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       PM: 50             DM: 12                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		EXTERN		FXD3232U                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           FXD3232S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		GLOBAL		FXD3232S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004ba6   6a25     CLRF      0x25,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004ba8   6ae8     CLRF      0xe8,0x0       		CLRF		WREG                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004baa   ae23     BTFSS     0x23,0x7,0x0   		BTFSS		BARGB0,MSB                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bac   efe0     GOTO      0x4bc0         		GOTO 		DA3232S                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bae   f025                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bb0   6c20     NEGF      0x20,0x0       		NEGF 		BARGB3		; if BARG<0, negate and toggle sign                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bb2   1e21     COMF      0x21,0x1,0x0   		COMF 		BARGB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bb4   1e22     COMF      0x22,0x1,0x0   		COMF 		BARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bb6   1e23     COMF      0x23,0x1,0x0   		COMF 		BARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bb8   2221     ADDWFC    0x21,0x1,0x0   		ADDWFC		BARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bba   2222     ADDWFC    0x22,0x1,0x0   		ADDWFC		BARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bbc   2223     ADDWFC    0x23,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bbe   1e25     COMF      0x25,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           DA3232S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bc0   ae1e     BTFSS     0x1e,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bc2   efeb     GOTO      0x4bd6         		GOTO        D3232S                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bc4   f025                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bc6   6c1b     NEGF      0x1b,0x0       		NEGF        AARGB3		; if AARG<0, negate and toggle sign                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bc8   1e1c     COMF      0x1c,0x1,0x0   		COMF        AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bca   1e1d     COMF      0x1d,0x1,0x0   		COMF        AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bcc   1e1e     COMF      0x1e,0x1,0x0   		COMF        AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bce   221c     ADDWFC    0x1c,0x1,0x0   		ADDWFC      AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bd0   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC      AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bd2   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC      AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bd4   1e25     COMF      0x25,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bd6   ecfe     CALL      0x5bfc,0x0     		CALL		FXD3232U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bd8   f02d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bda   be1e     BTFSC     0x1e,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bdc   ef02     GOTO      0x4c04         		GOTO		D3232SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bde   f026                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004be0   ae25     BTFSS     0x25,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004be2   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004be4   6c1b     NEGF      0x1b,0x0       		NEGF  		AARGB3		; negate if result negative                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004be6   1e1c     COMF      0x1c,0x1,0x0   		COMF  		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004be8   1e1d     COMF      0x1d,0x1,0x0   		COMF  		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bea   1e1e     COMF      0x1e,0x1,0x0   		COMF  		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bec   6ae8     CLRF      0xe8,0x0       		CLRF  		WREG                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bee   221c     ADDWFC    0x1c,0x1,0x0   		ADDWFC		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bf0   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bf2   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bf4   6c17     NEGF      0x17,0x0       		NEGF  		REMB3                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bf6   1e18     COMF      0x18,0x1,0x0   		COMF  		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bf8   1e19     COMF      0x19,0x1,0x0   		COMF  		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bfa   1e1a     COMF      0x1a,0x1,0x0   		COMF  		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bfc   2218     ADDWFC    0x18,0x1,0x0   		ADDWFC		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004bfe   2219     ADDWFC    0x19,0x1,0x0   		ADDWFC		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004c00   221a     ADDWFC    0x1a,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004c02   0c00     RETLW     0x0            		RETLW 		0x00                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004c04   be25     BTFSC     0x25,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004c06   eff2     GOTO      0x4be4         		GOTO		D3232SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004c08   f025                                                                                                               
004c0a   8826     BSF       0x26,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x800000                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
004c0c   0cff     RETLW     0xff           		RETLW		0xFF		; with positive sign                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005bfc   6a1a     CLRF      0x1a,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005bfe   6a19     CLRF      0x19,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c00   6a18     CLRF      0x18,0x0           clrf REMB2, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c02   6a17     CLRF      0x17,0x0           clrf REMB3, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c04   0e20     MOVLW     0x20               movlw 32                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c06   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c08   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c0a   361b     RLCF      0x1b,0x1,0x0   	rlcf AARGB3, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c0c   361c     RLCF      0x1c,0x1,0x0   	rlcf AARGB2, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c0e   361d     RLCF      0x1d,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c10   361e     RLCF      0x1e,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c12   3617     RLCF      0x17,0x1,0x0   	rlcf REMB3, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c14   3618     RLCF      0x18,0x1,0x0   	rlcf REMB2, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c16   3619     RLCF      0x19,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c18   361a     RLCF      0x1a,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c1a   5020     MOVF      0x20,0x0,0x0   	movf BARGB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c1c   5c17     SUBWF     0x17,0x0,0x0   	subwf REMB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c1e   5021     MOVF      0x21,0x0,0x0   	movf BARGB2, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c20   5818     SUBWFB    0x18,0x0,0x0   	subwfb REMB2, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c22   5022     MOVF      0x22,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c24   5819     SUBWFB    0x19,0x0,0x0   	subwfb REMB1, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c26   5023     MOVF      0x23,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c28   581a     SUBWFB    0x1a,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c2a   e309     BNC       0x5c3e         	bnc _false                                                                      C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c2c   5020     MOVF      0x20,0x0,0x0   	    movf BARGB3, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c2e   5e17     SUBWF     0x17,0x1,0x0   	    subwf REMB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c30   5021     MOVF      0x21,0x0,0x0   	    movf BARGB2, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c32   5a18     SUBWFB    0x18,0x1,0x0   	    subwfb REMB2, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c34   5022     MOVF      0x22,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c36   5a19     SUBWFB    0x19,0x1,0x0   	    subwfb REMB1, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c38   5023     MOVF      0x23,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c3a   5a1a     SUBWFB    0x1a,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c3c   2a1b     INCF      0x1b,0x1,0x0   	    incf AARGB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c3e   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c40   d7e4     BRA       0x5c0a             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c42   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c0e   c01e     MOVFF     0x1e,0x2a      		MOVFF	AARGB0,TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c10   f02a                                                                                                               
004c12   c01d     MOVFF     0x1d,0x29      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c14   f029                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c16   501d     MOVF      0x1d,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c18   0222     MULWF     0x22,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c1a   cff4     MOVFF     0xff4,0x1c     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c1c   f01c                                                                                                               
004c1e   cff3     MOVFF     0xff3,0x1b     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c20   f01b                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c22   501e     MOVF      0x1e,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c24   0223     MULWF     0x23,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c26   cff4     MOVFF     0xff4,0x1e     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c28   f01e                                                                                                               
004c2a   cff3     MOVFF     0xff3,0x1d     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c2c   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c2e   0222     MULWF     0x22,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c30   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c32   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c34   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c36   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c38   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c3a   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c3c   5029     MOVF      0x29,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c3e   0223     MULWF     0x23,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c40   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c42   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c44   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c46   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c48   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c4a   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c4c   ae23     BTFSS     0x23,0x7,0x0   		BTFSS	BARGB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c4e   ef2d     GOTO      0x4c5a         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c50   f026                                                                                                               
004c52   5029     MOVF      0x29,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c54   5e1d     SUBWF     0x1d,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c56   502a     MOVF      0x2a,0x0,0x0   		MOVF	TEMPB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c58   5a1e     SUBWFB    0x1e,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c5a   ae2a     BTFSS     0x2a,0x7,0x0   		BTFSS	TEMPB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c5c   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c5e   5022     MOVF      0x22,0x0,0x0   		MOVF	BARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c60   5e1d     SUBWF     0x1d,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c62   5023     MOVF      0x23,0x0,0x0   		MOVF	BARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c64   5a1e     SUBWFB    0x1e,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
004c66   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: fxm1616u.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       16x16 Bit Unsigned Fixed Point Multiply 16 x 16 -> 32                    C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Input:  16 bit unsigned fixed point multiplicand in AARGB0, AARGB1       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;               16 bit unsigned fixed point multiplier in BARGB0, BARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Use:    CALL    FXM1616U                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Output: 32 bit unsigned fixed point product in AARGB0, AARGB1,           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Max Timing:     26 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Min Timing:     26 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       PM: 25              DM: 7                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           FXM1616U                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           		GLOBAL	FXM1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c68   c01d     MOVFF     0x1d,0x29      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c6a   f029                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c6c   501d     MOVF      0x1d,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c6e   0222     MULWF     0x22,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c70   cff4     MOVFF     0xff4,0x1c     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c72   f01c                                                                                                               
004c74   cff3     MOVFF     0xff3,0x1b     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c76   f01b                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c78   501e     MOVF      0x1e,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c7a   0223     MULWF     0x23,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c7c   cff4     MOVFF     0xff4,0x1e     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c7e   f01e                                                                                                               
004c80   cff3     MOVFF     0xff3,0x1d     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c82   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c84   0222     MULWF     0x22,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c86   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c88   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c8a   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c8c   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c8e   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c90   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c92   5029     MOVF      0x29,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c94   0223     MULWF     0x23,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c96   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c98   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c9a   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c9c   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004c9e   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004ca0   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
004ca2   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           /* a signed multiply is only different from an unsigned multiply                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB3, BARGB3;                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB7;                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059a2   501b     MOVF      0x1b,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059a4   0220     MULWF     0x20,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059a6   cff3     MOVFF     0xff3,0x17         movff PRODL, AARGB7                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059a8   f017                                                                                                               
0059aa   cff4     MOVFF     0xff4,0x18         movff PRODH, AARGB7 + 1                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059ac   f018                                                                                                               
                                               // W still contains AARGB3                                                   C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059ae   0221     MULWF     0x21,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059b0   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059b2   2618     ADDWF     0x18,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059b4   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059b6   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059b8   6e19     MOVWF     0x19,0x0           movwf AARGB7 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059ba   501b     MOVF      0x1b,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059bc   0222     MULWF     0x22,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059be   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059c0   2619     ADDWF     0x19,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059c2   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059c4   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059c6   6e1a     MOVWF     0x1a,0x0           movwf AARGB7 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059c8   501b     MOVF      0x1b,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059ca   0223     MULWF     0x23,0x0           mulwf BARGB3 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059cc   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059ce   261a     ADDWF     0x1a,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059d0   501c     MOVF      0x1c,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059d2   0220     MULWF     0x20,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059d4   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059d6   2618     ADDWF     0x18,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059d8   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059da   2219     ADDWFC    0x19,0x1,0x0       addwfc AARGB7 + 2, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059dc   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059de   221a     ADDWFC    0x1a,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059e0   501c     MOVF      0x1c,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059e2   0221     MULWF     0x21,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059e4   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059e6   2619     ADDWF     0x19,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059e8   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059ea   221a     ADDWFC    0x1a,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059ec   501c     MOVF      0x1c,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059ee   0222     MULWF     0x22,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059f0   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059f2   261a     ADDWF     0x1a,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059f4   501d     MOVF      0x1d,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059f6   0220     MULWF     0x20,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059f8   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059fa   2619     ADDWF     0x19,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059fc   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0059fe   221a     ADDWFC    0x1a,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a00   501d     MOVF      0x1d,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a02   0221     MULWF     0x21,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a04   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a06   261a     ADDWF     0x1a,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a08   501e     MOVF      0x1e,0x0,0x0       movf AARGB3 + 3, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a0a   0220     MULWF     0x20,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a0c   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a0e   261a     ADDWF     0x1a,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a10   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cb4   b426     BTFSC     0x26,0x2,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cc8   b026     BTFSC     0x26,0x0,0x0                                                                                    
004cb6   d003     BRA       0x4cbe                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cca   d7fc     BRA       0x4cc4                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cb0   a226     BTFSS     0x26,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004ce6   a426     BTFSS     0x26,0x2,0x0                                                                                    
004cec   ae1e     BTFSS     0x1e,0x7,0x0                                                                                    
004cb2   d00a     BRA       0x4cc8                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004ce8   d003     BRA       0x4cf0                                                                                          
004cee   d7ea     BRA       0x4cc4                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cd8   0e86     MOVLW     0x86                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cda   5c1f     SUBWF     0x1f,0x0,0x0           subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cdc   e004     BZ        0x4ce6                 bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cd2   0e7e     MOVLW     0x7e                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cd4   641f     CPFSGT    0x1f,0x0               cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cd6   d7f6     BRA       0x4cc4                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004ccc   0e87     MOVLW     0x87                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cce   601f     CPFSLT    0x1f,0x0               cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cd0   d7f1     BRA       0x4cb4                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004caa   b626     BTFSC     0x26,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cac   ef5c     GOTO      0x4cb8                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004cae   f026                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; INT3208:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         Float to one byte integer conversion. Designed for both signed         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         and unsigned use.                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         Results for special cases:                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         In                  Out                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         NaN                 0x7F                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         +Infinity           0x7F                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         -Infinity           0x80                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         255->128            0xFF=>0x80                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         <-128               0                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         INT3208U: One byte signed integer in iA0                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     GLOBAL INT3208                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     EXTERN __FpUnPackA                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           INT3208:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;------ Unpack the operand                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004ca4   6a26     CLRF      0x26,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004ca6   ecd1     CALL      0x4da2,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004ca8   f026                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,jMaxPos                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fFlg,FLG_INF_A,jNotInf                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMax:                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braSet    fFlg,FLG_SIGN_A,jMaxNeg                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMaxPos:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cb8   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cba   6e1e     MOVWF     0x1e,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cbc   d019     BRA       0x4cf0                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMaxNeg:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cbe   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cc0   6e1e     MOVWF     0x1e,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cc2   d016     BRA       0x4cf0                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jZero:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cc4   6a1e     CLRF      0x1e,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cc6   d014     BRA       0x4cf0                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jNotInf:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braSet    fFlg,FLG_ZERO_A,jZero                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFgeL   fAexp,0x87,jMax         ;; exponent too large                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFleL   fAexp,0x7E,jZero        ;; exponent too small                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFeqL   fAexp,0x86,jLoopExit    ;; shift complete                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cde   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004ce0   321e     RRCF      0x1e,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004ce2   2a1f     INCF      0x1f,0x1,0x0             incf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004ce4   d7f9     BRA       0x4cd8                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jLoopExit:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fFlg,FLG_SIGN_A,jExit                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cea   6c1e     NEGF      0x1e,0x0                 negf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fA0,7,jZero             ;; too large                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jExit:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
004cf0   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #include <usart.h>                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #if defined(__18F6525) || defined(__18F6621) || \                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                               defined(__18F8525) || defined(__18F8621)                                     C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define RC1IE RCIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define TX1IE TXIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           // USART1 Status Structure                                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           extern union USART1 USART1_Status;                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Function Name:  Open1USART                                      *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Parameters:     config: bit definitions to configure USART1     *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    spbrg: baudrate value for register SPBRG1      *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Description:    This routine first resets the USART1 regs       *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    to the POR state. It then configures the       *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    USART1 for interrupts, synch/async, 8/9-bit,    *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    sync slave/master and single/cont. rx.         *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Notes:          The bit definitions for config can be found    *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    in the usart.h file.                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ae0   cfd9     MOVFF     0xfd9,0xfe6    void Open1USART( unsigned char config, char spbrg)                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ae2   ffe6                                                                                                               
005ae4   cfda     MOVFF     0xfda,0xfe6                                                                                     
005ae6   ffe6                                                                                                               
005ae8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005aea   ffd9                                                                                                               
005aec   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005aee   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005af0   6aac     CLRF      0xac,0x0         TXSTA1 = 0;           // Reset USART registers to POR state                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005af2   6aab     CLRF      0xab,0x0         RCSTA1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005af4   0efd     MOVLW     0xfd             if(config&0x01)      // Sync or async operation                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005af6   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
005af8   88ac     BSF       0xac,0x4,0x0       TXSTA1bits.SYNC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005afa   a2db     BTFSS     0xdb,0x1,0x0     if(config&0x02)      // 8- or 9-bit mode                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005afc   d002     BRA       0x5b02                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005afe   8cac     BSF       0xac,0x6,0x0       TXSTA1bits.TX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b00   8cab     BSF       0xab,0x6,0x0       RCSTA1bits.RX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b02   b4db     BTFSC     0xdb,0x2,0x0     if(config&0x04)      // Master or Slave (sync only)                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b04   8eac     BSF       0xac,0x7,0x0       TXSTA1bits.CSRC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b06   a6db     BTFSS     0xdb,0x3,0x0     if(config&0x08)      // Continuous or single reception                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b08   d002     BRA       0x5b0e                                                                                          
005b0a   88ab     BSF       0xab,0x4,0x0       RCSTA1bits.CREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b0c   d001     BRA       0x5b10           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b0e   8aab     BSF       0xab,0x5,0x0       RCSTA1bits.SREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b10   a8db     BTFSS     0xdb,0x4,0x0     if(config&0x10)      // Baud rate select (asychronous mode only)               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b12   d002     BRA       0x5b18                                                                                          
005b14   84ac     BSF       0xac,0x2,0x0       TXSTA1bits.BRGH = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b16   d001     BRA       0x5b1a           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b18   94ac     BCF       0xac,0x2,0x0       TXSTA1bits.BRGH = 0;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b1a   acdb     BTFSS     0xdb,0x6,0x0     if(config&0x40)      // Interrupt on receipt                                   C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b1c   d002     BRA       0x5b22                                                                                          
005b1e   8a9d     BSF       0x9d,0x5,0x0       PIE1bits.RC1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b20   d001     BRA       0x5b24           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b22   9a9d     BCF       0x9d,0x5,0x0       PIE1bits.RC1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b24   aedb     BTFSS     0xdb,0x7,0x0     if(config&0x80)      // Interrupt on transmission                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b26   d002     BRA       0x5b2c                                                                                          
005b28   889d     BSF       0x9d,0x4,0x0       PIE1bits.TX1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b2a   d001     BRA       0x5b2e           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b2c   989d     BCF       0x9d,0x4,0x0       PIE1bits.TX1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b2e   0efc     MOVLW     0xfc             SPBRG1 = spbrg;       // Write baudrate to SPBRG1                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b30   50db     MOVF      0xdb,0x0,0x0                                                                                    
005b32   6eaf     MOVWF     0xaf,0x0                                                                                        
005b34   8aac     BSF       0xac,0x5,0x0     TXSTA1bits.TXEN = 1;  // Enable transmitter                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b36   8eab     BSF       0xab,0x7,0x0     RCSTA1bits.SPEN = 1;  // Enable receiver                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b38   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005b3a   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005b3c   ffda                                                                                                               
005b3e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005b40   ffd9                                                                                                               
005b42   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcopen.c,v 1.2 2004/02/10 22:11:33 sealep Exp $ */                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Function Name:  OpenADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Parameters:     config: bit definitions to configure A/D       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    channel: channel selection                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Description:    This routine first resets the A/D registers    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    to the POR state and then configures the       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    A/D clock, interrupt, justification, vref      *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    source, and I/O.  It also sets the channel.    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Notes:          The bit definitions for config and channel     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    can be found in the adc16.h file.              *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #if !defined(ADC_INTERFACE_OLD) && \                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C601)  && !defined(__18C801)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C658)  && !defined(__18C858)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F6520) && !defined(__18F6620) && !defined(__18F6720) && \       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F8520) && !defined(__18F8620) && !defined(__18F8720)            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a12   cfd9     MOVFF     0xfd9,0xfe6    void OpenADC( unsigned char config,                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a14   ffe6                                                                                                               
005a16   cfda     MOVFF     0xfda,0xfe6                                                                                     
005a18   ffe6                                                                                                               
005a1a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005a1c   ffd9                                                                                                               
005a1e   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005a20   ffda                                                                                                               
                                                         unsigned char config2,                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                         unsigned char portconfig)                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               // Reset A/D Registers to POR state                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a22   6ac2     CLRF      0xc2,0x0           ADCON0 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a24   6ac1     CLRF      0xc1,0x0           ADCON1 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a26   6ac0     CLRF      0xc0,0x0           ADCON2 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a28   0efc     MOVLW     0xfc               ADCON0 = (config2 >> 1) & 0b00111100;     // Analog channel selection        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a2a   40db     RRNCF     0xdb,0x0,0x0                                                                                    
005a2c   0b7f     ANDLW     0x7f                                                                                            
005a2e   0b3c     ANDLW     0x3c                                                                                            
005a30   6ec2     MOVWF     0xc2,0x0                                                                                        
005a32   0efb     MOVLW     0xfb               ADCON1 = portconfig;                      // Port configuration              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a34   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a36   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           #if defined(__18F1220) || defined(__18F1320)                                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 |= (config2 << 6) & 0b11000000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a38   0efc     MOVLW     0xfc               ADCON1 |= (config2 << 4) & 0b00110000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a3a   38db     SWAPF     0xdb,0x0,0x0                                                                                    
005a3c   0bf0     ANDLW     0xf0                                                                                            
005a3e   0b30     ANDLW     0x30                                                                                            
005a40   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a42   0efd     MOVLW     0xfd               ADCON2 = config & 0b10000000;             // Result format                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a44   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a46   0b80     ANDLW     0x80                                                                                            
005a48   6ec0     MOVWF     0xc0,0x0                                                                                        
005a4a   0efd     MOVLW     0xfd               ADCON2 |= (config >> 4) & 0b00000111;     // Conversion clock select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a4c   38db     SWAPF     0xdb,0x0,0x0                                                                                    
005a4e   0b0f     ANDLW     0xf                                                                                             
005a50   0b07     ANDLW     0x7                                                                                             
005a52   12c0     IORWF     0xc0,0x1,0x0                                                                                    
005a54   0efd     MOVLW     0xfd               ADCON2 |= (config << 2) & 0b00111000;     // Acquisition time select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a56   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a58   0d04     MULLW     0x4                                                                                             
005a5a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
005a5c   0b38     ANDLW     0x38                                                                                            
005a5e   12c0     IORWF     0xc0,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a60   0efc     MOVLW     0xfc               if( config2 & 0b10000000 )   // Test the interrupt on/off                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a62   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
005a64   d003     BRA       0x5a6c                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a66   9c9e     BCF       0x9e,0x6,0x0         PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a68   8c9d     BSF       0x9d,0x6,0x0         PIE1bits.ADIE = 1;         // Enable the A/D interrupt                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a6a   8cf2     BSF       0xf2,0x6,0x0         INTCONbits.PEIE = 1;       // Enable peripheral interrupts                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a6c   80c2     BSF       0xc2,0x0,0x0       ADCON0bits.ADON = 1;         // Enable the A/D                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a6e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005a70   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005a72   ffda                                                                                                               
005a74   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005a76   ffd9                                                                                                               
005a78   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           void OpenADC( unsigned char config, unsigned char config2)                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Reset A/D Registers to POR state                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifndef ADC_INTERFACE_OLD                                                        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Configure ADCON registers as per config selections                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifdef ADC_INTERFACE_OLD                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = config;             // Set the A/D clock source                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config<<2) & 0xC0; // Set the I/O selection                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 |= config2 &0x3f;     // Set the channel mask out the interrupt bit.    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else // New ADC interface                                                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config2 >> 1) & 0b00111100;    // Analog channel selection           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = ((config2 << 4) & 0b00110000) | // Voltage reference configuration    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      (config & 0b00001111);          // Port configuration                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = (config & 0b10000000) |         // Result format                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      ((config >> 4) & 0b00000111);   // Conversion clock select            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             if( config2 & 0b10000000 )   // Test the interrupt on/off                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIE1bits.ADIE = 1;         // Enable the A/D interrupt                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               INTCONbits.PEIE = 1;       // Enable peripheral interrupts                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0bits.ADON = 1;         // Enable the A/D                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /* $Id:  */                                                                      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <spi.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Function Name:  OpenSPI1                                        *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Return Value:   void                                            *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Parameters:     SSP1 peripheral setup bytes                     *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Description:    This function sets up the SSP1 module on a      *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   PIC18Cxxx device for use with a Microchip SPI   *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   EEPROM device or SPI bus device.                *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a7a   cfd9     MOVFF     0xfd9,0xfe6    void OpenSPI1( unsigned char sync_mode, unsigned char bus_mode, unsigned char smp_phase) C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a7c   ffe6                                                                                                               
005a7e   cfda     MOVFF     0xfda,0xfe6                                                                                     
005a80   ffe6                                                                                                               
005a82   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005a84   ffd9                                                                                                               
005a86   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005a88   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a8a   0e3f     MOVLW     0x3f             SSP1STAT &= 0x3F;               // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a8c   16c7     ANDWF     0xc7,0x1,0x0                                                                                    
005a8e   6ac6     CLRF      0xc6,0x0         SSP1CON1 = 0x00;                // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a90   0efd     MOVLW     0xfd             SSP1CON1 |= sync_mode;          // select serial mode                          C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a92   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a94   12c6     IORWF     0xc6,0x1,0x0                                                                                    
005a96   0efb     MOVLW     0xfb             SSP1STAT |= smp_phase;          // select data input sample phase              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a98   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a9a   12c7     IORWF     0xc7,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a9c   0efc     MOVLW     0xfc             switch( bus_mode )                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a9e   50db     MOVF      0xdb,0x0,0x0                                                                                    
005aa0   0a03     XORLW     0x3                                                                                             
005aa2   e009     BZ        0x5ab6                                                                                          
005aa4   0a01     XORLW     0x1                                                                                             
005aa6   e004     BZ        0x5ab0                                                                                          
005aa8   0a02     XORLW     0x2                                                                                             
005aaa   e106     BNZ       0x5ab8                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 0:                       // SPI1 bus mode 0,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005aac   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on rising edge             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005aae   d004     BRA       0x5ab8               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 2:                       // SPI1 bus mode 1,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ab0   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on falling edge            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ab2   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ab4   d001     BRA       0x5ab8               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 3:                       // SPI1 bus mode 1,1                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ab6   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // default SPI1 bus mode 0,1                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ab8   0efd     MOVLW     0xfd             switch( sync_mode )                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005aba   50db     MOVF      0xdb,0x0,0x0                                                                                    
005abc   0a05     XORLW     0x5                                                                                             
005abe   e003     BZ        0x5ac6                                                                                          
005ac0   0a01     XORLW     0x1                                                                                             
005ac2   e104     BNZ       0x5acc                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 4:                       // slave mode w /SS enable                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ac4   8e97     BSF       0x97,0x7,0x0         TRISFbits.TRISF7 = 1;       // define /SS pin as input                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 5:                       // slave mode w/o /SS enable                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ac6   8694     BSF       0x94,0x3,0x0         TRISCbits.TRISC3 = 1;       // define clock pin as input                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ac8   9ec7     BCF       0xc7,0x7,0x0         SSP1STATbits.SMP = 0;       // must be cleared in slave SPI mode           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005aca   d001     BRA       0x5ace               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // master mode, define clock pin as output     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005acc   9694     BCF       0x94,0x3,0x0         TRISCbits.TRISC3 = 0;       // define clock pin as output                  C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ace   9a94     BCF       0x94,0x5,0x0     TRISC &= 0xDF;                  // define SDO as output (master or slave)      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ad0   8894     BSF       0x94,0x4,0x0     TRISC |= 0x10;                  // define SDI as input (master or slave)       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ad2   8ac6     BSF       0xc6,0x5,0x0     SSP1CON1 |= SSPENB;             // enable synchronous serial port              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ad4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ad6   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005ad8   ffda                                                                                                               
005ada   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005adc   ffd9                                                                                                               
005ade   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcread.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Function Name:  ReadADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Return Value:   int, A/D result                                *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Description:    This routine reads the ADRESL and ADRESH       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *                    and returns these as a long.                   *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c44   cfd9     MOVFF     0xfd9,0xfe6    int ReadADC(void)                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c46   ffe6                                                                                                               
005c48   cfda     MOVFF     0xfda,0xfe6                                                                                     
005c4a   ffe6                                                                                                               
005c4c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005c4e   ffd9                                                                                                               
005c50   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005c52   ffda                                                                                                               
005c54   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005c56   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                             union ADCResult i; // A union is used to read the                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // A/D result due to issues with                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // handling long variables                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c58   50c3     MOVF      0xc3,0x0,0x0     i.br[0] = ADRESL;  // Read ADRESL into the lower byte                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c5a   6edf     MOVWF     0xdf,0x0                                                                                        
005c5c   0e01     MOVLW     0x1              i.br[1] = ADRESH;  // Read ADRESH into the high byte                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c5e   cfc4     MOVFF     0xfc4,0xfdb                                                                                     
005c60   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c62   cfde     MOVFF     0xfde,0x2b       return (i.lr);     // Return the long variable                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c64   f02b                                                                                                               
005c66   cfdd     MOVFF     0xfdd,0x2c                                                                                      
005c68   f02c                                                                                                               
005c6a   c02b     MOVFF     0x2b,0xff3                                                                                      
005c6c   fff3                                                                                                               
005c6e   c02c     MOVFF     0x2c,0xff4                                                                                      
005c70   fff4                                                                                                               
005c72   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005c76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005c78   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005c7a   ffda                                                                                                               
005c7c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005c7e   ffd9                                                                                                               
005c80   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: temparg.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMP                                                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB0		RES 1       ; temporary storage                                          C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d44   3629     RLCF      0x29,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d46   362a     RLCF      0x2a,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d48   3617     RLCF      0x17,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d4a   3618     RLCF      0x18,0x1,0x0           rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d76   3218     RRCF      0x18,0x1,0x0           rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d78   3217     RRCF      0x17,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d7a   322a     RRCF      0x2a,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d6a   2a2a     INCF      0x2a,0x1,0x0           incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d6c   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d6e   2217     ADDWFC    0x17,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d70   2218     ADDWFC    0x18,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d4c   0619     DECF      0x19,0x1,0x0           decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d4e   a0d8     BTFSS     0xd8,0x0,0x0           btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d50   061a     DECF      0x1a,0x1,0x0           decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d34   be1a     BTFSC     0x1a,0x7,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d38   be18     BTFSC     0x18,0x7,0x0                                                                                    
004d36   d7f0     BRA       0x4d18                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d3a   d00c     BRA       0x4d54                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d18   ae26     BTFSS     0x26,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d5c   ae29     BTFSS     0x29,0x7,0x0                                                                                    
004d66   a02a     BTFSS     0x2a,0x0,0x0                                                                                    
004d1a   d004     BRA       0x4d24                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004d5e   d011     BRA       0x4d82                                                                                          
004d68   d00c     BRA       0x4d82                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnW                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;************ C O M M O M    E N T R I E S *****************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNaN:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return NaN                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004cf2   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004cf4   6e1f     MOVWF     0x1f,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004cf6   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004cf8   6e1e     MOVWF     0x1e,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004cfa   6e1d     MOVWF     0x1d,0x0                 movwf     fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004cfc   6e1c     MOVWF     0x1c,0x0                 movwf     fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpExit:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004cfe   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignInf:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return infinite with sign in FLG_SIGN_ABW                           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d00   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d02   be26     BTFSC     0x26,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegInf:            ;; return negative infinite                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d04   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d06   6e1f     MOVWF     0x1f,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d08   d002     BRA       0x4d0e                   bra       jReturnPosInf0                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosInf:                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return positive infinite                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d0a   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d0c   6e1f     MOVWF     0x1f,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jReturnPosInf0:                                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d0e   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d10   6e1e     MOVWF     0x1e,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jZero1and2:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d12   6a1d     CLRF      0x1d,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d14   6a1c     CLRF      0x1c,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d16   d7f3     BRA       0x4cfe                   bra       __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignZero:                                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return Zero with sign in FLG_SIGN_ABW                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fFlg,FLG_SIGN_ABW,__FpReturnPosZero                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d1c   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d1e   6e1f     MOVWF     0x1f,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d20   6a1e     CLRF      0x1e,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d22   d7f7     BRA       0x4d12                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return zero                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d24   6a1f     CLRF      0x1f,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d26   6a1e     CLRF      0x1e,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d28   d7f4     BRA       0x4d12                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; __Fppack:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Rounds and packs a float                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Assumes significant, round bit and sticky bits in fW0 -> fW3.            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Biased exponent in fWexp,fWexpHi.                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Exponent must be adjusted for significant left-justified in fW0.         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Sign in FLAG_SIGN_ABW.                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Packed, signed float in fAexp...fA2                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Notes:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpPack                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d2a   5018     MOVF      0x18,0x0,0x0             movf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d2c   1017     IORWF     0x17,0x0,0x0             iorwf     fW1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d2e   102a     IORWF     0x2a,0x0,0x0             iorwf     fW2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d30   1029     IORWF     0x29,0x0,0x0             iorwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d32   e0f8     BZ        0x4d24                   bz        __FpReturnPosZero             ;; Pure zero                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fWexpHi,7,__FpReturnSignZero  ;; Subnormal. Treat as signed zero C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkLoop:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fW0,7,jPkShiftDone            ;; Significant left-justified  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0 && fWexpHi == 0 )goto __FpReturnZero;                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d3c   5019     MOVF      0x19,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d3e   101a     IORWF     0x1a,0x0,0x0             iorwf     fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d40   e0eb     BZ        0x4d18                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d42   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftL4C  fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Dec2      fWexp,fWexpHi                 ;; corrected exponent          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d52   d7f2     BRA       0x4d38                   bra       jPkLoop                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkShiftDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexpHi ) goto __FpReturnSignInf                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d54   501a     MOVF      0x1a,0x0,0x0             movf      fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d56   e1d4     BNZ       0x4d00                   bnz       __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d58   2819     INCF      0x19,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d5a   e0d2     BZ        0x4d00                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;;------ Round up if (round && (sticky || (significand & 1)))          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW3 & 0x80)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW3,7,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if(  fW3 & 0x7F)   goto jPkRoundIt;                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d60   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d62   1429     ANDWF     0x29,0x0,0x0             andwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d64   e102     BNZ       0x4d6a                   bnz       jPkRoundIt          ;; Rounding required ...                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW2 & 0x01)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW2,0,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundIt:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; ---------- Do Rounding ----------------                             C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Inc3      fW2,fW1,fW0         ;; Significand++                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d72   e307     BNC       0x4d82                   bnc       jPkRoundDone        ;; No need to adjust exponent            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; Renormalize                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d74   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftR3C  fW2,fW1,fW0                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d7c   2a19     INCF      0x19,0x1,0x0             incf      fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d7e   2819     INCF      0x19,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d80   e0bf     BZ        0x4d00                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnW:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d82   5019     MOVF      0x19,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d84   e0c9     BZ        0x4d18                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d86   c02a     MOVFF     0x2a,0x1c                movff     fW2,fA2                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d88   f01c                                                                                                               
004d8a   c017     MOVFF     0x17,0x1d                movff     fW1,fA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d8c   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d8e   3418     RLCF      0x18,0x0,0x0             rlcf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d90   6e1e     MOVWF     0x1e,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d92   3019     RRCF      0x19,0x0,0x0             rrcf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d94   6e1f     MOVWF     0x1f,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d96   321e     RRCF      0x1e,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d98   9e1f     BCF       0x1f,0x7,0x0             bcf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d9a   be26     BTFSC     0x26,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d9c   8e1f     BSF       0x1f,0x7,0x0             bsf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004d9e   ef7f     GOTO      0x4cfe                   goto      __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004da0   f026                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackA                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackB                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpack floats fA and fB                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         IEEE 754 format float in fAexp...fA2.                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Same for fBexp...fB2.                                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Requires flags to be zero on entry.                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpacks exponent into fAexp and Significant into fA0,fA1,fA2.          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets .0f => .1f, i.e. makes msb of Significant explict                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets Zero, Infinite and NaN flags.                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On entry: IEEE 754 format                   Address increasing down            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     E0  D22 D21 D20 D19 D18 D17 D16             |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   Sn  E7  E6  E5  E4  E3  E2  E1              V                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On exit                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     1   D22 D21 D20 D19 D18 D17 D16                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   E7  E6  E5  E4  E3  E2  E1  E0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     GLOBAL __FpUnPackA, __FpUnPackB                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackA:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004da2   361e     RLCF      0x1e,0x1,0x0             rlcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004da4   361f     RLCF      0x1f,0x1,0x0             rlcf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004da6   e302     BNC       0x4dac                   bnc       jUnpkA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004da8   8426     BSF       0x26,0x2,0x0             bsf       fFlg,FLG_SIGN_A    ; Signal negative                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004daa   7e26     BTG       0x26,0x7,0x0             btg       fFlg,FLG_SIGN_ABW  ; Toggle combined sign                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dac   e106     BNZ       0x4dba                   bnz       jUnpkANZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dae   8026     BSF       0x26,0x0,0x0             bsf       fFlg,FLG_ZERO_A    ; Signal Zero                             C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004db0   6a1f     CLRF      0x1f,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004db2   6a1e     CLRF      0x1e,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004db4   6a1d     CLRF      0x1d,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004db6   6a1c     CLRF      0x1c,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004db8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkANZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dba   281f     INCF      0x1f,0x0,0x0             incf      fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dbc   e003     BZ        0x4dc4                   bz        jUnpkA2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dbe   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dc0   321e     RRCF      0x1e,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dc2   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dc4   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dc6   321e     RRCF      0x1e,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dc8   e102     BNZ       0x4dce                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dca   8226     BSF       0x26,0x1,0x0             bsf       fFlg,FLG_INF_A      ; A: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dcc   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkNaN:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either A or B is a NaN                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dce   8626     BSF       0x26,0x3,0x0             bsf       fFlg,FLG_NaN_AorB   ; Signal NaN for A or B                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dd0   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackB                                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dd2   3623     RLCF      0x23,0x1,0x0             rlcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dd4   3624     RLCF      0x24,0x1,0x0             rlcf      fBexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dd6   e302     BNC       0x4ddc                   bnc       jUnpkB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dd8   8c26     BSF       0x26,0x6,0x0             bsf       fFlg,FLG_SIGN_B       ; Signal negative                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dda   7e26     BTG       0x26,0x7,0x0             btg       fFlg,FLG_SIGN_ABW     ; Toggle combined sign                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004ddc   e106     BNZ       0x4dea                   bnz       jUnpkBNZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dde   8826     BSF       0x26,0x4,0x0             bsf       fFlg,FLG_ZERO_B       ; Signal Zero                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004de0   6a24     CLRF      0x24,0x0                 clrf      fBexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004de2   6a23     CLRF      0x23,0x0                 clrf      fB0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004de4   6a22     CLRF      0x22,0x0                 clrf      fB1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004de6   6a21     CLRF      0x21,0x0                 clrf      fB2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004de8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkBNZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dea   2824     INCF      0x24,0x0,0x0             incf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dec   e003     BZ        0x4df4                   bz        jUnpkB2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dee   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004df0   3223     RRCF      0x23,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004df2   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004df4   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004df6   3223     RRCF      0x23,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004df8   e1ea     BNZ       0x4dce                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dfa   8a26     BSF       0x26,0x5,0x0             bsf       fFlg,FLG_INF_B      ; B: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004dfc   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\printf.c
0057fa   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
0057fc   ffe6                                                                                                               
0057fe   cfda     MOVFF     0xfda,0xfe6                                                                                     
005800   ffe6                                                                                                               
005802   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005804   ffd9                                                                                                               
005806   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005808   ffda                                                                                                               
00580a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00580c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00580e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005810   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\mcc18\src\TRADIT~1\stdclib\printf.c
005812   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
005814   0ffb     ADDLW     0xfb                                                                                            
005816   6e2b     MOVWF     0x2b,0x0                                                                                        
005818   0eff     MOVLW     0xff                                                                                            
00581a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00581c   6e2c     MOVWF     0x2c,0x0                                                                                        
00581e   c02b     MOVFF     0x2b,0xfde                                                                                      
005820   ffde                                                                                                               
005822   6edd     MOVWF     0xdd,0x0                                                                                        
005824   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
005826   ffe6                                                                                                               
005828   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
00582a   ffe6                                                                                                               
00582c   0efb     MOVLW     0xfb                                                                                            
00582e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005830   ffe6                                                                                                               
005832   0efc     MOVLW     0xfc                                                                                            
005834   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005836   ffe6                                                                                                               
005838   0efd     MOVLW     0xfd                                                                                            
00583a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00583c   ffe6                                                                                                               
00583e   c34a     MOVFF     0x34a,0xfe6                                                                                     
005840   ffe6                                                                                                               
005842   c34b     MOVFF     0x34b,0xfe6                                                                                     
005844   ffe6                                                                                                               
005846   ec4f     CALL      0x169e,0x0                                                                                      
005848   f00b                                                                                                               
00584a   6ef5     MOVWF     0xf5,0x0                                                                                        
00584c   0e07     MOVLW     0x7                                                                                             
00584e   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
005850   e202     BC        0x5856                                                                                          
005852   6ae1     CLRF      0xe1,0x0                                                                                        
005854   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005856   6ee1     MOVWF     0xe1,0x0                                                                                        
005858   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00585a   0e02     MOVLW     0x2                                                                                             
00585c   cff3     MOVFF     0xff3,0xfdb                                                                                     
00585e   ffdb                                                                                                               
005860   0e03     MOVLW     0x3                                                                                             
005862   cff4     MOVFF     0xff4,0xfdb                                                                                     
005864   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\mcc18\src\TRADIT~1\stdclib\printf.c
005866   0e02     MOVLW     0x2              return n;                                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
005868   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00586a   f02b                                                                                                               
00586c   0e03     MOVLW     0x3                                                                                             
00586e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
005870   f02c                                                                                                               
005872   c02b     MOVFF     0x2b,0xff3                                                                                      
005874   fff3                                                                                                               
005876   c02c     MOVFF     0x2c,0xff4                                                                                      
005878   fff4                                                                                                               
00587a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
00587c   ffe1                                                                                                               
00587e   cfda     MOVFF     0xfda,0xfe2                                                                                     
005880   ffe2                                                                                                               
005882   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005884   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005886   ffda                                                                                                               
005888   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00588a   ffd9                                                                                                               
00588c   0012     RETURN    0x0                                                                                             
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           ; $Id: scpyp2r.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005774   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005776   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005778   ffe9                                                                                                               
00577a   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00577c   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00577e   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005762   0efb     MOVLW     0xfb                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005764   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005766   fff6                                                                                                               
005768   0efc     MOVLW     0xfc                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00576a   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00576c   fff7                                                                                                               
00576e   0efd     MOVLW     0xfd                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005770   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005772   fff8                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; @name strcpypgm2ram                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;The {\bf strcpypgm2ram} function performs a {\bf strcpy} where                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;{\bf s1} points to data memory and {\bf s2} points to program                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;memory.                                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;@param s1 pointer to destination in data memory                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;@param s2 pointer to source in program memory                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; char *strcpypgm2ram (char *s1, const rom char *s2);                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           strcpypgm2ram                                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             global strcpypgm2ram                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            messg "strcpypgm2ram - SMALL"                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; Proceedure: Use FSR0 for 'dest' and TBLPTR for 'src'                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;         Assumes TBLPTRU = 0.                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load TBLPTR with the 'src' pointer                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -4,TBLPTRL                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load FSR0 with the 'dest' pointer                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Make a copy for the return value                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           	  movff FSR0L, PRODL                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           	  movff FSR0H, PRODH                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     movff     TABLAT, INDF0                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     tstfsz    POSTINC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            messg "strcpypgm2ram - LARGE"                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; Proceedure: Three byte rom pointer.                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;         Use FSR0 for 'dest' and TBLPTR for 'src'                               C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load TBLPTR with the 'src' pointer                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk3CpyToReg -5,TBLPTRL                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load FSR0 with the 'dest' pointer                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Make a copy for the return value                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005780   cfe9     MOVFF     0xfe9,0xff3    	  movff FSR0L, PRODL                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005782   fff3                                                                                                               
005784   cfea     MOVFF     0xfea,0xff4    	  movff FSR0H, PRODH                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005786   fff4                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005788   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00578a   cff5     MOVFF     0xff5,0xfef              movff     TABLAT, INDF0                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00578c   ffef                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00578e   66ee     TSTFSZ    0xee,0x0                 tstfsz    POSTINC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005790   d7fb     BRA       0x5788                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
005792   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005794   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005796   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005798   ffe9                                                                                                               
00579a   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00579c   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00579e   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0057a0   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0057a2   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0057a4   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0057a6   e003     BZ        0x57ae                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0057a8   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0057aa   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0057ac   d7fb     BRA       0x57a4                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
0057ae   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001672   ec75     CALL      0x20ea,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001674   f010                                                                                                               
0020ea   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
0020ec   ffe6                                                                                                               
0020ee   cfda     MOVFF     0xfda,0xfe6                                                                                     
0020f0   ffe6                                                                                                               
0020f2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0020f4   ffd9                                                                                                               
0020f6   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0020f8   ffda                                                                                                               
0020fa   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001676   0efb     MOVLW     0xfb             while (n--)                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001678   cfdb     MOVFF     0xfdb,0xff3                                                                                     
00167a   fff3                                                                                                               
00167c   06db     DECF      0xdb,0x1,0x0                                                                                    
00167e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001680   0900     IORLW     0x0                                                                                             
001682   e00a     BZ        0x1698                                                                                          
001684   ecc3     CALL      0x2186,0x0         if (putc (c, handle) == EOF)                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001686   f010                                                                                                               
001688   0efa     MOVLW     0xfa                                                                                            
00168a   ec2e     CALL      0x225c,0x0                                                                                      
00168c   f011                                                                                                               
00168e   e1f3     BNZ       0x1676                                                                                          
001690   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001692   e1f1     BNZ       0x1676                                                                                          
001694   0e01     MOVLW     0x1                  return 1;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001696   d001     BRA       0x169a                                                                                          
001698   0e00     MOVLW     0x0              return 0;                                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00169a   efa4     GOTO      0x2148         }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00169c   f010                                                                                                               
002148   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00214a   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00214c   ffda                                                                                                               
00214e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002150   ffd9                                                                                                               
002152   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00169e   ec75     CALL      0x20ea,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016a0   f010                                                                                                               
0016a2   0e3b     MOVLW     0x3b                                                                                            
0016a4   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
0016a6   e302     BNC       0x16ac                                                                                          
0016a8   68e1     SETF      0xe1,0x0                                                                                        
0016aa   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0016ac   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016ae   0e01     MOVLW     0x1              int count = 0;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016b0   6adb     CLRF      0xdb,0x0                                                                                        
0016b2   0e02     MOVLW     0x2                                                                                             
0016b4   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016b6   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016b8   cfdb     MOVFF     0xfdb,0xff6                                                                                     
0016ba   fff6                                                                                                               
0016bc   0efa     MOVLW     0xfa                                                                                            
0016be   cfdb     MOVFF     0xfdb,0xff7                                                                                     
0016c0   fff7                                                                                                               
0016c2   0efb     MOVLW     0xfb                                                                                            
0016c4   cfdb     MOVFF     0xfdb,0xff8                                                                                     
0016c6   fff8                                                                                                               
0016c8   0008     TBLRD                                                                                                     
0016ca   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0016cc   6edf     MOVWF     0xdf,0x0                                                                                        
0016ce   50df     MOVF      0xdf,0x0,0x0                                                                                    
0016d0   e102     BNZ       0x16d6                                                                                          
0016d2   efca     GOTO      0x1f94                                                                                          
0016d4   f00f                                                                                                               
001f8e   d977     RCALL     0x227e                                                                                          
001f90   ef64     GOTO      0x16c8                                                                                          
001f92   f00b                                                                                                               
00227e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002280   0ff9     ADDLW     0xf9                                                                                            
002282   6ee9     MOVWF     0xe9,0x0                                                                                        
002284   0eff     MOVLW     0xff                                                                                            
002286   efd8     GOTO      0x21b0                                                                                          
002288   f010                                                                                                               
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016d6   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016d8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0016da   e002     BZ        0x16e0                                                                                          
0016dc   efbd     GOTO      0x1f7a                                                                                          
0016de   f00f                                                                                                               
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016e0   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016e2   6adb     CLRF      0xdb,0x0                                                                                        
0016e4   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016e6   6adb     CLRF      0xdb,0x0                                                                                        
0016e8   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016ea   6adb     CLRF      0xdb,0x0                                                                                        
0016ec   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016ee   6adb     CLRF      0xdb,0x0                                                                                        
0016f0   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016f2   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016f4   ecdd     CALL      0x1fba,0x0               c = *++f;                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016f6   f00f                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016f8   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016fa   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0016fc   e00c     BZ        0x1716                                                                                          
0016fe   0e2b     MOVLW     0x2b                                                                                            
001700   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001702   e009     BZ        0x1716                                                                                          
001704   0e20     MOVLW     0x20                                                                                            
001706   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001708   e006     BZ        0x1716                                                                                          
00170a   0e23     MOVLW     0x23                                                                                            
001748   d7d5     BRA       0x16f4                                                                                          
00170c   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00170e   e003     BZ        0x1716                                                                                          
001710   0e30     MOVLW     0x30                                                                                            
001712   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001714   e11a     BNZ       0x174a                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001716   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001718   0a30     XORLW     0x30                                                                                            
00171a   e014     BZ        0x1744                                                                                          
00171c   0a13     XORLW     0x13                                                                                            
00171e   e00f     BZ        0x173e                                                                                          
001720   0a03     XORLW     0x3                                                                                             
001722   e00a     BZ        0x1738                                                                                          
001724   0a0b     XORLW     0xb                                                                                             
001726   e005     BZ        0x1732                                                                                          
001728   0a06     XORLW     0x6                                                                                             
00172a   e1e4     BNZ       0x16f4                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00172c   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00172e   80db     BSF       0xdb,0x0,0x0                                                                                    
001730   d7e1     BRA       0x16f4                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001732   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001734   82db     BSF       0xdb,0x1,0x0                                                                                    
001736   d7de     BRA       0x16f4                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001738   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00173a   84db     BSF       0xdb,0x2,0x0                                                                                    
00173c   d7db     BRA       0x16f4                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00173e   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001740   86db     BSF       0xdb,0x3,0x0                                                                                    
001742   d7d8     BRA       0x16f4                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001744   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001746   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00174a   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00174c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00174e   e11b     BNZ       0x1786                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001750   ecd9     CALL      0x1fb2,0x0                   n = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001752   f00f                                                                                                               
001754   ec27     CALL      0x204e,0x0                                                                                      
001756   f010                                                                                                               
00204e   0e13     MOVLW     0x13                                                                                            
002050   cfee     MOVFF     0xfee,0xfdb                                                                                     
002052   ffdb                                                                                                               
002054   0e14     MOVLW     0x14                                                                                            
002056   cfed     MOVFF     0xfed,0xfdb                                                                                     
002058   ffdb                                                                                                               
001758   e010     BZ        0x177a                       if (n < 0)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00205a   0e13     MOVLW     0x13                                                                                            
00205c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00205e   f02b                                                                                                               
002060   0e14     MOVLW     0x14                                                                                            
002062   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002064   f02c                                                                                                               
002066   0100     MOVLB     0x0                                                                                             
002068   0e80     MOVLW     0x80                                                                                            
00206a   142c     ANDWF     0x2c,0x0,0x0                                                                                    
00206c   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00175a   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00175c   80db     BSF       0xdb,0x0,0x0                                                                                    
00175e   681d     SETF      0x1d,0x0                         width = -n;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001760   681e     SETF      0x1e,0x0                                                                                        
001762   0e13     MOVLW     0x13                                                                                            
001764   cfdb     MOVFF     0xfdb,0x22                                                                                      
001766   f022                                                                                                               
001768   0e14     MOVLW     0x14                                                                                            
00176a   cfdb     MOVFF     0xfdb,0x23                                                                                      
00176c   f023                                                                                                               
00176e   ec07     CALL      0x4c0e,0x0                                                                                      
001770   f026                                                                                                               
001772   0e04     MOVLW     0x4                                                                                             
001774   c01b     MOVFF     0x1b,0xfdb                                                                                      
001776   ffdb                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001778   d003     BRA       0x1780                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00177a   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00177c   ec10     CALL      0x2020,0x0                                                                                      
00177e   f010                                                                                                               
001780   ecdd     CALL      0x1fba,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001782   f00f                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001784   d00b     BRA       0x179c                   else                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001786   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001788   6adb     CLRF      0xdb,0x0                                                                                        
00178a   ec7e     CALL      0x20fc,0x0                   while ((unsigned char) isdigit (c))                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00178c   f010                                                                                                               
00178e   e003     BZ        0x1796                                                                                          
001794   d7fa     BRA       0x178a                                                                                          
0020fc   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0020fe   ffe6                                                                                                               
002100   6ae6     CLRF      0xe6,0x0                                                                                        
002102   ec6b     CALL      0x5cd6,0x0                                                                                      
002104   f02e                                                                                                               
002106   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002108   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00210a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00210c   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001790   ecf2     CALL      0x21e4,0x0                       cval = cval * 10 + c - '0';                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001792   f010                                                                                                               
0021e4   0e09     MOVLW     0x9                                                                                             
0021e6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021e8   0d0a     MULLW     0xa                                                                                             
0021ea   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0021ec   24df     ADDWF     0xdf,0x0,0x0                                                                                    
0021ee   0fd0     ADDLW     0xd0                                                                                            
0021f0   6ee7     MOVWF     0xe7,0x0                                                                                        
0021f2   0e09     MOVLW     0x9                                                                                             
0021f4   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0021f6   ffdb                                                                                                               
0021f8   efdd     GOTO      0x1fba                           c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021fa   f00f                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001796   0e09     MOVLW     0x9                          width = cval;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001798   ec10     CALL      0x2020,0x0                                                                                      
00179a   f010                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00179c   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00179e   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
0017a0   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017a2   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017a4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017a6   e11b     BNZ       0x17de                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017a8   ecdd     CALL      0x1fba,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017aa   f00f                                                                                                               
0017ac   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017ae   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017b0   e10b     BNZ       0x17c8                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017b2   ecd9     CALL      0x1fb2,0x0                       n = va_arg (ap, int);                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017b4   f00f                                                                                                               
0017b6   ec27     CALL      0x204e,0x0                                                                                      
0017b8   f010                                                                                                               
001fb2   d929     RCALL     0x2206                                                                                          
001fb4   0e02     MOVLW     0x2                                                                                             
001fb6   efca     GOTO      0x2194                                                                                          
001fb8   f010                                                                                                               
002194   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
002196   0e00     MOVLW     0x0                                                                                             
002198   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
00219a   0ef7     MOVLW     0xf7                                                                                            
00219c   c02b     MOVFF     0x2b,0xfdb                                                                                      
00219e   ffdb                                                                                                               
0021a0   0ef8     MOVLW     0xf8                                                                                            
0021a2   c02c     MOVFF     0x2c,0xfdb                                                                                      
0021a4   ffdb                                                                                                               
0021a6   c02b     MOVFF     0x2b,0xfe9                                                                                      
0021a8   ffe9                                                                                                               
0021aa   c02c     MOVFF     0x2c,0xfea                                                                                      
0021ac   ffea                                                                                                               
0021ae   0012     RETURN    0x0                                                                                             
002206   0ef7     MOVLW     0xf7                                                                                            
002208   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00220a   f02b                                                                                                               
00220c   0ef8     MOVLW     0xf8                                                                                            
00220e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002210   f02c                                                                                                               
002212   0012     RETURN    0x0                                                                                             
0017ba   e103     BNZ       0x17c2                           if (n >= 0)                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017bc   0e13     MOVLW     0x13                                 precision = n;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017be   ec62     CALL      0x20c4,0x0                                                                                      
0017c0   f010                                                                                                               
0020c4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0020c6   d8ce     RCALL     0x2264                                                                                          
002264   6ee7     MOVWF     0xe7,0x0                                                                                        
002266   0e05     MOVLW     0x5                                                                                             
002268   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00226a   ffdb                                                                                                               
00226c   0012     RETURN    0x0                                                                                             
0020c8   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020ca   6ef3     MOVWF     0xf3,0x0                                                                                        
0020cc   0e06     MOVLW     0x6                                                                                             
0020ce   cff3     MOVFF     0xff3,0xfdb                                                                                     
0020d0   ffdb                                                                                                               
0020d2   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017c2   ecdd     CALL      0x1fba,0x0                       c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017c4   f00f                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017c6   d00b     BRA       0x17de                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017c8   0e09     MOVLW     0x9                              cval = 0;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017ca   6adb     CLRF      0xdb,0x0                                                                                        
0017cc   ec7e     CALL      0x20fc,0x0                       while ((unsigned char) isdigit (c))                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017ce   f010                                                                                                               
0017d0   e003     BZ        0x17d8                                                                                          
0017d6   d7fa     BRA       0x17cc                                                                                          
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017d2   ecf2     CALL      0x21e4,0x0                           cval = cval * 10 + c - '0';                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017d4   f010                                                                                                               
                                                                 c = *++f;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017d8   0e09     MOVLW     0x9                              precision = cval;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017da   ec62     CALL      0x20c4,0x0                                                                                      
0017dc   f010                                                                                                               
                                                             have_precision = 1;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017de   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017e0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017e2   e107     BNZ       0x17f2                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017e4   ecdd     CALL      0x1fba,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017e6   f00f                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017e8   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017ea   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017ec   e11d     BNZ       0x1828                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017ee   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f0   d018     BRA       0x1822                   else if (c == 't' || c == 'z')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f2   0e74     MOVLW     0x74                                                                                            
0017f4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017f6   e017     BZ        0x1826                                                                                          
0017f8   0e7a     MOVLW     0x7a                                                                                            
0017fa   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017fc   e014     BZ        0x1826                                                                                          
                                                       c = *++f;                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017fe   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001800   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001802   e006     BZ        0x1810                                                                                          
001804   0e54     MOVLW     0x54                                                                                            
001806   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001808   e003     BZ        0x1810                                                                                          
00180a   0e5a     MOVLW     0x5a                                                                                            
00180c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00180e   e102     BNZ       0x1814                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001810   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001812   d007     BRA       0x1822                   else if (c == 'l' || c == 'j')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001814   0e6c     MOVLW     0x6c                                                                                            
001816   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001818   e003     BZ        0x1820                                                                                          
00181a   0e6a     MOVLW     0x6a                                                                                            
00181c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00181e   e104     BNZ       0x1828                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001820   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001822   ecb5     CALL      0x216a,0x0                                                                                      
001824   f010                                                                                                               
001826   dbc9     RCALL     0x1fba                       c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fba   d961     RCALL     0x227e                                                                                          
001fbc   0008     TBLRD                                                                                                     
001fbe   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001fc0   6edf     MOVWF     0xdf,0x0                                                                                        
001fc2   0012     RETURN    0x0                                                                                             
0021b0   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0021b2   6eea     MOVWF     0xea,0x0                                                                                        
0021b4   2aef     INCF      0xef,0x1,0x0                                                                                    
0021b6   cfee     MOVFF     0xfee,0xff6                                                                                     
0021b8   fff6                                                                                                               
0021ba   0e00     MOVLW     0x0                                                                                             
0021bc   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
0021be   cfee     MOVFF     0xfee,0xff7                                                                                     
0021c0   fff7                                                                                                               
0021c2   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
0021c4   cfee     MOVFF     0xfee,0xff8                                                                                     
0021c6   fff8                                                                                                               
0021c8   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001828   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182a   0a6e     XORLW     0x6e                                                                                            
00182c   e101     BNZ       0x1830                                                                                          
00182e   d381     BRA       0x1f32                                                                                          
001830   0a1e     XORLW     0x1e                                                                                            
001832   e101     BNZ       0x1836                                                                                          
001834   d192     BRA       0x1b5a                                                                                          
001836   0a20     XORLW     0x20                                                                                            
001838   e101     BNZ       0x183c                                                                                          
00183a   d18f     BRA       0x1b5a                                                                                          
00183c   0a3f     XORLW     0x3f                                                                                            
00183e   e101     BNZ       0x1842                                                                                          
001840   d149     BRA       0x1ad4                                                                                          
001842   0a1a     XORLW     0x1a                                                                                            
001844   e101     BNZ       0x1848                                                                                          
001846   d146     BRA       0x1ad4                                                                                          
001848   0a0d     XORLW     0xd                                                                                             
00184a   e101     BNZ       0x184e                                                                                          
00184c   d143     BRA       0x1ad4                                                                                          
00184e   0a20     XORLW     0x20                                                                                            
001850   e101     BNZ       0x1854                                                                                          
001852   d140     BRA       0x1ad4                                                                                          
001854   0a3a     XORLW     0x3a                                                                                            
001856   e101     BNZ       0x185a                                                                                          
001858   d13d     BRA       0x1ad4                                                                                          
00185a   0a20     XORLW     0x20                                                                                            
00185c   e101     BNZ       0x1860                                                                                          
00185e   d13a     BRA       0x1ad4                                                                                          
001860   0a26     XORLW     0x26                                                                                            
001862   e101     BNZ       0x1866                                                                                          
001864   d135     BRA       0x1ad0                                                                                          
001866   0a0d     XORLW     0xd                                                                                             
001868   e101     BNZ       0x186c                                                                                          
00186a   d132     BRA       0x1ad0                                                                                          
00186c   0a1a     XORLW     0x1a                                                                                            
00186e   e101     BNZ       0x1872                                                                                          
001870   d0d9     BRA       0x1a24                                                                                          
001872   0a20     XORLW     0x20                                                                                            
001874   e04a     BZ        0x190a                                                                                          
001876   0a30     XORLW     0x30                                                                                            
001878   e01f     BZ        0x18b8                                                                                          
00187a   0a46     XORLW     0x46                                                                                            
00187c   e00e     BZ        0x189a                                                                                          
00187e   0a25     XORLW     0x25                                                                                            
001880   e001     BZ        0x1884                                                                                          
001882   d385     BRA       0x1f8e                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001884   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001886   0ff9     ADDLW     0xf9                                                                                            
001888   6ee9     MOVWF     0xe9,0x0                                                                                        
00188a   0eff     MOVLW     0xff                                                                                            
00188c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00188e   6eea     MOVWF     0xea,0x0                                                                                        
001890   0e01     MOVLW     0x1                                                                                             
001892   5eee     SUBWF     0xee,0x1,0x0                                                                                    
001894   0e00     MOVLW     0x0                                                                                             
001896   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
001898   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00189a   ecc3     CALL      0x2186,0x0                   if (putc ('%', handle) == EOF)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00189c   f010                                                                                                               
00189e   0e25     MOVLW     0x25                                                                                            
0018a0   6ee6     MOVWF     0xe6,0x0                                                                                        
0018a2   db95     RCALL     0x1fce                                                                                          
0018a4   e103     BNZ       0x18ac                                                                                          
0018a6   1c2c     COMF      0x2c,0x0,0x0                                                                                    
0018a8   e101     BNZ       0x18ac                                                                                          
0018aa   d36b     BRA       0x1f82                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ac   ecbf     CALL      0x217e,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ae   f010                                                                                                               
0018b0   e201     BC        0x18b4                                                                                          
0018b2   d36d     BRA       0x1f8e                                                                                          
0018b4   2adb     INCF      0xdb,0x1,0x0                                                                                    
0018b6   d36b     BRA       0x1f8e                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018b8   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ba   6adb     CLRF      0xdb,0x0                                                                                        
0018bc   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018be   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018c0   0801     SUBLW     0x1                                                                                             
0018c2   e206     BC        0x18d0                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018c4   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018c6   04db     DECF      0xdb,0x0,0x0                                                                                    
0018c8   ec87     CALL      0x210e,0x0                                                                                      
0018ca   f010                                                                                                               
0018cc   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ce   db8b     RCALL     0x1fe6                                                                                          
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018d0   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018d2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018d4   e009     BZ        0x18e8                                                                                          
0018d6   0e03     MOVLW     0x3                                                                                             
0018d8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018da   0b01     ANDLW     0x1                                                                                             
0018dc   e105     BNZ       0x18e8                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018de   db72     RCALL     0x1fc4                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018e0   e001     BZ        0x18e4                                                                                          
0018e2   d34f     BRA       0x1f82                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018e4   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018e6   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018e8   db64     RCALL     0x1fb2                       c = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ea   cfef     MOVFF     0xfef,0xfdf                                                                                     
0018ec   ffdf                                                                                                               
0018ee   ec37     CALL      0x226e,0x0                   if (putc (c, handle) == EOF)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018f0   f011                                                                                                               
0018f2   e103     BNZ       0x18fa                                                                                          
0018f4   1c2c     COMF      0x2c,0x0,0x0                                                                                    
0018f6   e101     BNZ       0x18fa                                                                                          
0018f8   d344     BRA       0x1f82                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018fa   ecbf     CALL      0x217e,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018fc   f010                                                                                                               
0018fe   e301     BNC       0x1902                                                                                          
001900   2adb     INCF      0xdb,0x1,0x0                                                                                    
001902   db60     RCALL     0x1fc4                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001904   e101     BNZ       0x1908                                                                                          
001906   d343     BRA       0x1f8e                                                                                          
001908   d33c     BRA       0x1f82                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00190a   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00190c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00190e   0802     SUBLW     0x2                                                                                             
001910   e10f     BNZ       0x1930                                                                                          
001912   ec03     CALL      0x2206,0x0                     romstring = va_arg (ap, rom far char *);                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001914   f011                                                                                                               
001916   0e03     MOVLW     0x3                                                                                             
001918   ecca     CALL      0x2194,0x0                                                                                      
00191a   f010                                                                                                               
00191c   0e0e     MOVLW     0xe                                                                                             
00191e   cfee     MOVFF     0xfee,0xfdb                                                                                     
001920   ffdb                                                                                                               
001922   0e0f     MOVLW     0xf                                                                                             
001924   cfee     MOVFF     0xfee,0xfdb                                                                                     
001926   ffdb                                                                                                               
001928   0e10     MOVLW     0x10                                                                                            
00192a   cfee     MOVFF     0xfee,0xfdb                                                                                     
00192c   ffdb                                                                                                               
00192e   d020     BRA       0x1970                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001930   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001932   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001934   f02e                                                                                                               
001936   0ef8     MOVLW     0xf8                                                                                            
001938   cfdb     MOVFF     0xfdb,0x2f                                                                                      
00193a   f02f                                                                                                               
00193c   0e02     MOVLW     0x2                                                                                             
00193e   5e2e     SUBWF     0x2e,0x1,0x0                                                                                    
001940   0e00     MOVLW     0x0                                                                                             
001942   5a2f     SUBWFB    0x2f,0x1,0x0                                                                                    
001944   0ef7     MOVLW     0xf7                                                                                            
001946   c02e     MOVFF     0x2e,0xfdb                                                                                      
001948   ffdb                                                                                                               
00194a   0ef8     MOVLW     0xf8                                                                                            
00194c   c02f     MOVFF     0x2f,0xfdb                                                                                      
00194e   ffdb                                                                                                               
001950   c02e     MOVFF     0x2e,0xfe9                                                                                      
001952   ffe9                                                                                                               
001954   c02f     MOVFF     0x2f,0xfea                                                                                      
001956   ffea                                                                                                               
001958   ecba     CALL      0x2174,0x0                                                                                      
00195a   f010                                                                                                               
00195c   6a2d     CLRF      0x2d,0x0                                                                                        
00195e   0e0e     MOVLW     0xe                                                                                             
001960   c02b     MOVFF     0x2b,0xfdb                                                                                      
001962   ffdb                                                                                                               
001964   0e0f     MOVLW     0xf                                                                                             
001966   c02c     MOVFF     0x2c,0xfdb                                                                                      
001968   ffdb                                                                                                               
00196a   0e10     MOVLW     0x10                                                                                            
00196c   c02d     MOVFF     0x2d,0xfdb                                                                                      
00196e   ffdb                                                                                                               
001970   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001972   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001974   ffe6                                                                                                               
001976   0e0f     MOVLW     0xf                                                                                             
001978   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00197a   ffe6                                                                                                               
00197c   0e10     MOVLW     0x10                                                                                            
00197e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001980   ffe6                                                                                                               
001982   ecd8     CALL      0x57b0,0x0                                                                                      
001984   f02b                                                                                                               
001986   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001988   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00198a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00198c   0e13     MOVLW     0x13                                                                                            
00198e   c01c     MOVFF     0x1c,0xfdb                                                                                      
001990   ffdb                                                                                                               
001992   0e14     MOVLW     0x14                                                                                            
001994   c01d     MOVFF     0x1d,0xfdb                                                                                      
001996   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001998   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00199a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00199c   e005     BZ        0x19a8                                                                                          
00199e   0e13     MOVLW     0x13                                                                                            
0019a0   ecfe     CALL      0x21fc,0x0                                                                                      
0019a2   f010                                                                                                               
0019a4   e201     BC        0x19a8                                                                                          
0019a6   db6a     RCALL     0x207c                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00207c   0e05     MOVLW     0x5                                                                                             
00207e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002080   6ee6     MOVWF     0xe6,0x0                                                                                        
002082   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002084   0f13     ADDLW     0x13                                                                                            
002086   d901     RCALL     0x228a                                                                                          
002088   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00208a   50e7     MOVF      0xe7,0x0,0x0                                                                                    
00208c   6eee     MOVWF     0xee,0x0                                                                                        
00208e   6aed     CLRF      0xed,0x0                                                                                        
002090   0012     RETURN    0x0                                                                                             
0019a8   ec22     CALL      0x2244,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019aa   f011                                                                                                               
0019ac   e202     BC        0x19b2                                                                                          
002244   0e13     MOVLW     0x13                                                                                            
002246   50db     MOVF      0xdb,0x0,0x0                                                                                    
002248   6ef3     MOVWF     0xf3,0x0                                                                                        
00224a   0e04     MOVLW     0x4                                                                                             
00224c   ef0b     GOTO      0x2016                                                                                          
00224e   f010                                                                                                               
0019ae   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b0   db37     RCALL     0x2020                                                                                          
0019b2   ece5     CALL      0x21ca,0x0                   space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b4   f010                                                                                                               
0021ca   0e04     MOVLW     0x4                                                                                             
0021cc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0021ce   ffe6                                                                                                               
0021d0   0e13     MOVLW     0x13                                                                                            
0021d2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021d6   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
0021d8   df9a     RCALL     0x210e                                                                                          
0021da   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021dc   df04     RCALL     0x1fe6                                                                                          
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b6   e006     BZ        0x19c4                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b8   0e04     MOVLW     0x4                                                                                             
0019ba   ecfe     CALL      0x21fc,0x0                                                                                      
0019bc   f010                                                                                                               
0019be   e202     BC        0x19c4                                                                                          
0021de   0e06     MOVLW     0x6                                                                                             
0021e0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021e2   0012     RETURN    0x0                                                                                             
0019c0   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019c2   db2e     RCALL     0x2020                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019c4   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019c6   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
0019c8   d005     BRA       0x19d4                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019ca   dafc     RCALL     0x1fc4                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019cc   e001     BZ        0x19d0                                                                                          
0019ce   d2d9     BRA       0x1f82                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019d0   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019d2   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019d4   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019d6   6adb     CLRF      0xdb,0x0                                                                                        
0019d8   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019da   cfdb     MOVFF     0xfdb,0xff6                                                                                     
0019dc   fff6                                                                                                               
0019de   0e0f     MOVLW     0xf                                                                                             
0019e0   cfdb     MOVFF     0xfdb,0xff7                                                                                     
0019e2   fff7                                                                                                               
0019e4   0e10     MOVLW     0x10                                                                                            
0019e6   cfdb     MOVFF     0xfdb,0xff8                                                                                     
0019e8   fff8                                                                                                               
0019ea   0008     TBLRD                                                                                                     
0019ec   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0019ee   6edf     MOVWF     0xdf,0x0                                                                                        
0019f0   50df     MOVF      0xdf,0x0,0x0                                                                                    
0019f2   e014     BZ        0x1a1c                                                                                          
0019f4   ec28     CALL      0x2250,0x0                                                                                      
0019f6   f011                                                                                                               
0019f8   e211     BC        0x1a1c                                                                                          
001a10   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001a12   0f0e     ADDLW     0xe                                                                                             
001a14   6ee9     MOVWF     0xe9,0x0                                                                                        
001a16   0e00     MOVLW     0x0                                                                                             
001a18   dbcb     RCALL     0x21b0                                                                                          
001a1a   d7e7     BRA       0x19ea                                                                                          
002250   0e04     MOVLW     0x4                                                                                             
002252   50db     MOVF      0xdb,0x0,0x0                                                                                    
002254   6ef3     MOVWF     0xf3,0x0                                                                                        
002256   0e09     MOVLW     0x9                                                                                             
002258   ef0b     GOTO      0x2016                                                                                          
00225a   f010                                                                                                               
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019fa   ec37     CALL      0x226e,0x0                       if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019fc   f011                                                                                                               
0019fe   e103     BNZ       0x1a06                                                                                          
001a00   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001a02   e101     BNZ       0x1a06                                                                                          
001a04   d2be     BRA       0x1f82                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a06   dbbb     RCALL     0x217e                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a08   e301     BNC       0x1a0c                                                                                          
001a0a   2adb     INCF      0xdb,0x1,0x0                                                                                    
001a0c   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a0e   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a1c   dad3     RCALL     0x1fc4                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a1e   e101     BNZ       0x1a22                                                                                          
001a20   d2b6     BRA       0x1f8e                                                                                          
001a22   d2af     BRA       0x1f82                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a24   dac6     RCALL     0x1fb2                       ramstring = va_arg (ap, char *);                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a26   0e11     MOVLW     0x11                                                                                            
001a28   cfee     MOVFF     0xfee,0xfdb                                                                                     
001a2a   ffdb                                                                                                               
001a2c   0e12     MOVLW     0x12                                                                                            
001a2e   cfed     MOVFF     0xfed,0xfdb                                                                                     
001a30   ffdb                                                                                                               
001a32   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a34   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001a36   ffe6                                                                                                               
001a38   0e12     MOVLW     0x12                                                                                            
001a3a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001a3c   ffe6                                                                                                               
001a3e   ecca     CALL      0x5794,0x0                                                                                      
001a40   f02b                                                                                                               
001a42   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a44   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a46   0e13     MOVLW     0x13                                                                                            
001a48   cff3     MOVFF     0xff3,0xfdb                                                                                     
001a4a   ffdb                                                                                                               
001a4c   0e14     MOVLW     0x14                                                                                            
001a4e   cff4     MOVFF     0xff4,0xfdb                                                                                     
001a50   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a52   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a54   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a56   e004     BZ        0x1a60                                                                                          
001a58   0e13     MOVLW     0x13                                                                                            
001a5a   dbd0     RCALL     0x21fc                                                                                          
001a5c   e201     BC        0x1a60                                                                                          
001a5e   db0e     RCALL     0x207c                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a60   ec22     CALL      0x2244,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a62   f011                                                                                                               
001a64   e202     BC        0x1a6a                                                                                          
001a66   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a68   dadb     RCALL     0x2020                                                                                          
001a6a   dbaf     RCALL     0x21ca                       space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00210e   6ee7     MOVWF     0xe7,0x0                                                                                        
002110   0e08     MOVLW     0x8                                                                                             
002112   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002114   ffdb                                                                                                               
002116   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a6c   e005     BZ        0x1a78                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a6e   0e04     MOVLW     0x4                                                                                             
001a70   dbc5     RCALL     0x21fc                                                                                          
001a72   e202     BC        0x1a78                                                                                          
0021fc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021fe   6ef3     MOVWF     0xf3,0x0                                                                                        
002200   0e05     MOVLW     0x5                                                                                             
002202   ef0b     GOTO      0x2016                                                                                          
002204   f010                                                                                                               
001a74   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a76   dad4     RCALL     0x2020                                                                                          
002020   50db     MOVF      0xdb,0x0,0x0                                                                                    
002022   6ee7     MOVWF     0xe7,0x0                                                                                        
002024   0e04     MOVLW     0x4                                                                                             
002026   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002028   ffdb                                                                                                               
00202a   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a78   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7a   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001a7c   d005     BRA       0x1a88                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7e   daa2     RCALL     0x1fc4                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a80   e001     BZ        0x1a84                                                                                          
001a82   d27f     BRA       0x1f82                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a84   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a86   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a88   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a8a   6adb     CLRF      0xdb,0x0                                                                                        
001a8c   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a8e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001a90   ffe9                                                                                                               
001a92   0e12     MOVLW     0x12                                                                                            
001a94   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001a96   ffea                                                                                                               
001a98   cfef     MOVFF     0xfef,0xfdf                                                                                     
001a9a   ffdf                                                                                                               
001a9c   50df     MOVF      0xdf,0x0,0x0                                                                                    
001a9e   e014     BZ        0x1ac8                                                                                          
001aa0   dbd7     RCALL     0x2250                                                                                          
001aa2   e212     BC        0x1ac8                                                                                          
001ab8   0e11     MOVLW     0x11                                                                                            
001aba   2adb     INCF      0xdb,0x1,0x0                                                                                    
001abc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001abe   ffe9                                                                                                               
001ac0   0e12     MOVLW     0x12                                                                                            
001ac2   e3e8     BNC       0x1a94                                                                                          
001ac4   2adb     INCF      0xdb,0x1,0x0                                                                                    
001ac6   d7e6     BRA       0x1a94                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa4   dbe4     RCALL     0x226e                           if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa6   e103     BNZ       0x1aae                                                                                          
001aa8   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001aaa   e101     BNZ       0x1aae                                                                                          
001aac   d26a     BRA       0x1f82                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aae   db67     RCALL     0x217e                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab0   e301     BNC       0x1ab4                                                                                          
001ab2   2adb     INCF      0xdb,0x1,0x0                                                                                    
001ab4   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab6   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ac8   da7d     RCALL     0x1fc4                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aca   e101     BNZ       0x1ace                                                                                          
001acc   d260     BRA       0x1f8e                                                                                          
001ace   d259     BRA       0x1f82                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ad0   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ad2   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ad4   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ad6   04db     DECF      0xdb,0x0,0x0                                                                                    
001ad8   e110     BNZ       0x1afa                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ada   db95     RCALL     0x2206                           larg = va_arg (ap, long int);                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001adc   0e04     MOVLW     0x4                                                                                             
001ade   db5a     RCALL     0x2194                                                                                          
001ae0   0e0a     MOVLW     0xa                                                                                             
001ae2   cfee     MOVFF     0xfee,0xfdb                                                                                     
001ae4   ffdb                                                                                                               
001ae6   0e0b     MOVLW     0xb                                                                                             
001ae8   cfee     MOVFF     0xfee,0xfdb                                                                                     
001aea   ffdb                                                                                                               
001aec   0e0c     MOVLW     0xc                                                                                             
001aee   cfee     MOVFF     0xfee,0xfdb                                                                                     
001af0   ffdb                                                                                                               
001af2   0e0d     MOVLW     0xd                                                                                             
001af4   cfee     MOVFF     0xfee,0xfdb                                                                                     
001af6   ffdb                                                                                                               
001af8   d06c     BRA       0x1bd2                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001afa   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001afc   50db     MOVF      0xdb,0x0,0x0                                                                                    
001afe   0803     SUBLW     0x3                                                                                             
001b00   e12c     BNZ       0x1b5a                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b02   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b04   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001b06   d00d     BRA       0x1b22                                                                                          
001b08   dab2     RCALL     0x206e                             larg = (signed char) va_arg (ap, int);                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b0a   0e02     MOVLW     0x2                                                                                             
001b0c   da76     RCALL     0x1ffa                                                                                          
001b0e   cfef     MOVFF     0xfef,0x2b                                                                                      
001b10   f02b                                                                                                               
001b12   6a2c     CLRF      0x2c,0x0                                                                                        
001b14   6a2d     CLRF      0x2d,0x0                                                                                        
001b16   6a2e     CLRF      0x2e,0x0                                                                                        
001b18   ae2b     BTFSS     0x2b,0x7,0x0                                                                                    
001b1a   d039     BRA       0x1b8e                                                                                          
001b1c   682c     SETF      0x2c,0x0                                                                                        
001b1e   682d     SETF      0x2d,0x0                                                                                        
001b20   d035     BRA       0x1b8c                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b22   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b24   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001b26   f02c                                                                                                               
001b28   0ef8     MOVLW     0xf8                                                                                            
001b2a   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001b2c   f02d                                                                                                               
001b2e   0e02     MOVLW     0x2                                                                                             
001b30   5e2c     SUBWF     0x2c,0x1,0x0                                                                                    
001b32   0e00     MOVLW     0x0                                                                                             
001b34   5a2d     SUBWFB    0x2d,0x1,0x0                                                                                    
001b36   0ef7     MOVLW     0xf7                                                                                            
001b38   c02c     MOVFF     0x2c,0xfdb                                                                                      
001b3a   ffdb                                                                                                               
001b3c   0ef8     MOVLW     0xf8                                                                                            
001b3e   c02d     MOVFF     0x2d,0xfdb                                                                                      
001b40   ffdb                                                                                                               
001b42   c02c     MOVFF     0x2c,0xfe9                                                                                      
001b44   ffe9                                                                                                               
001b46   c02d     MOVFF     0x2d,0xfea                                                                                      
001b48   ffea                                                                                                               
001b4a   cfef     MOVFF     0xfef,0x2b                                                                                      
001b4c   f02b                                                                                                               
001b4e   0e0a     MOVLW     0xa                                                                                             
001b50   c02b     MOVFF     0x2b,0xfdb                                                                                      
001b52   ffdb                                                                                                               
001b54   0e0b     MOVLW     0xb                                                                                             
001b56   6adb     CLRF      0xdb,0x0                                                                                        
001b58   d038     BRA       0x1bca                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b5a   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b5c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b5e   0802     SUBLW     0x2                                                                                             
001b60   e109     BNZ       0x1b74                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b62   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b64   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001b66   d004     BRA       0x1b70                                                                                          
001b68   db59     RCALL     0x221c                             larg = va_arg (ap, short long int);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b6a   ae2d     BTFSS     0x2d,0x7,0x0                                                                                    
001b6c   d010     BRA       0x1b8e                                                                                          
002118   cfee     MOVFF     0xfee,0x2b                                                                                      
00211a   f02b                                                                                                               
00211c   cfee     MOVFF     0xfee,0x2c                                                                                      
00211e   f02c                                                                                                               
002120   cfef     MOVFF     0xfef,0x2d                                                                                      
002122   f02d                                                                                                               
002124   6a2e     CLRF      0x2e,0x0                                                                                        
002126   0012     RETURN    0x0                                                                                             
00221c   df28     RCALL     0x206e                                                                                          
00221e   0e03     MOVLW     0x3                                                                                             
002220   deec     RCALL     0x1ffa                                                                                          
002222   ef8c     GOTO      0x2118                                                                                          
002224   f010                                                                                                               
001b6e   d00e     BRA       0x1b8c                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b70   db55     RCALL     0x221c                             larg = va_arg (ap, unsigned short long int);                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b72   d00d     BRA       0x1b8e                       else if (flags & _FLAG_SIGNED)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b74   0e03     MOVLW     0x3                                                                                             
001b76   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001b78   d012     BRA       0x1b9e                                                                                          
001b7a   da79     RCALL     0x206e                         larg = va_arg (ap, int);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7c   0e02     MOVLW     0x2                                                                                             
001b7e   da3d     RCALL     0x1ffa                                                                                          
001b80   daf9     RCALL     0x2174                                                                                          
001b82   6a2d     CLRF      0x2d,0x0                                                                                        
001b84   6a2e     CLRF      0x2e,0x0                                                                                        
001b86   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
001b88   d002     BRA       0x1b8e                                                                                          
001b8a   682d     SETF      0x2d,0x0                                                                                        
001b8c   682e     SETF      0x2e,0x0                                                                                        
001b8e   dae2     RCALL     0x2154                                                                                          
001b90   0e0c     MOVLW     0xc                                                                                             
001b92   c02d     MOVFF     0x2d,0xfdb                                                                                      
001b94   ffdb                                                                                                               
001b96   0e0d     MOVLW     0xd                                                                                             
001b98   c02e     MOVFF     0x2e,0xfdb                                                                                      
001b9a   ffdb                                                                                                               
001ffa   5e2f     SUBWF     0x2f,0x1,0x0                                                                                    
001ffc   0e00     MOVLW     0x0                                                                                             
001ffe   5a30     SUBWFB    0x30,0x1,0x0                                                                                    
002000   0ef7     MOVLW     0xf7                                                                                            
002002   c02f     MOVFF     0x2f,0xfdb                                                                                      
002004   ffdb                                                                                                               
002006   0ef8     MOVLW     0xf8                                                                                            
002008   c030     MOVFF     0x30,0xfdb                                                                                      
00200a   ffdb                                                                                                               
00200c   c02f     MOVFF     0x2f,0xfe9                                                                                      
00200e   ffe9                                                                                                               
002010   c030     MOVFF     0x30,0xfea                                                                                      
002012   ffea                                                                                                               
002014   0012     RETURN    0x0                                                                                             
00206e   0ef7     MOVLW     0xf7                                                                                            
002070   cfdb     MOVFF     0xfdb,0x2f                                                                                      
002072   f02f                                                                                                               
002074   0ef8     MOVLW     0xf8                                                                                            
002076   cfdb     MOVFF     0xfdb,0x30                                                                                      
002078   f030                                                                                                               
00207a   0012     RETURN    0x0                                                                                             
002154   0e0a     MOVLW     0xa                                                                                             
002156   c02b     MOVFF     0x2b,0xfdb                                                                                      
002158   ffdb                                                                                                               
00215a   0e0b     MOVLW     0xb                                                                                             
00215c   c02c     MOVFF     0x2c,0xfdb                                                                                      
00215e   ffdb                                                                                                               
002160   0012     RETURN    0x0                                                                                             
002174   cfee     MOVFF     0xfee,0x2b                                                                                      
002176   f02b                                                                                                               
002178   cfef     MOVFF     0xfef,0x2c                                                                                      
00217a   f02c                                                                                                               
00217c   0012     RETURN    0x0                                                                                             
001b9c   d01a     BRA       0x1bd2                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b9e   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ba0   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001ba2   f02d                                                                                                               
001ba4   0ef8     MOVLW     0xf8                                                                                            
001ba6   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001ba8   f02e                                                                                                               
001baa   0e02     MOVLW     0x2                                                                                             
001bac   5e2d     SUBWF     0x2d,0x1,0x0                                                                                    
001bae   0e00     MOVLW     0x0                                                                                             
001bb0   5a2e     SUBWFB    0x2e,0x1,0x0                                                                                    
001bb2   0ef7     MOVLW     0xf7                                                                                            
001bb4   c02d     MOVFF     0x2d,0xfdb                                                                                      
001bb6   ffdb                                                                                                               
001bb8   0ef8     MOVLW     0xf8                                                                                            
001bba   c02e     MOVFF     0x2e,0xfdb                                                                                      
001bbc   ffdb                                                                                                               
001bbe   c02d     MOVFF     0x2d,0xfe9                                                                                      
001bc0   ffe9                                                                                                               
001bc2   c02e     MOVFF     0x2e,0xfea                                                                                      
001bc4   ffea                                                                                                               
001bc6   dad6     RCALL     0x2174                                                                                          
001bc8   dac5     RCALL     0x2154                                                                                          
001bca   0e0c     MOVLW     0xc                                                                                             
001bcc   6adb     CLRF      0xdb,0x0                                                                                        
001bce   0e0d     MOVLW     0xd                                                                                             
001bd0   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bd2   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bd4   50db     MOVF      0xdb,0x0,0x0                                                                                    
001bd6   e105     BNZ       0x1be2                                                                                          
001bd8   0e01     MOVLW     0x1                            precision = 1;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bda   6ef3     MOVWF     0xf3,0x0                                                                                        
001bdc   0e05     MOVLW     0x5                                                                                             
001bde   cff3     MOVFF     0xff3,0xfdb                                                                                     
001be0   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be2   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be4   6adb     CLRF      0xdb,0x0                                                                                        
001be6   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be8   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bea   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bec   0f37     ADDLW     0x37                                                                                            
001bee   6e2b     MOVWF     0x2b,0x0                                                                                        
001bf0   0e00     MOVLW     0x0                                                                                             
001bf2   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001bf4   6e2c     MOVWF     0x2c,0x0                                                                                        
001bf6   0e39     MOVLW     0x39                                                                                            
001bf8   c02b     MOVFF     0x2b,0xfdb                                                                                      
001bfa   ffdb                                                                                                               
001bfc   0e3a     MOVLW     0x3a                                                                                            
001bfe   c02c     MOVFF     0x2c,0xfdb                                                                                      
001c00   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c02   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c04   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c06   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c08   6adb     CLRF      0xdb,0x0                                                                                        
001c0a   0e0a     MOVLW     0xa                            size = 10;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0c   daae     RCALL     0x216a                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0e   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c10   0a78     XORLW     0x78                                                                                            
001c12   e012     BZ        0x1c38                                                                                          
001c14   0a20     XORLW     0x20                                                                                            
001c16   e010     BZ        0x1c38                                                                                          
001c18   0a28     XORLW     0x28                                                                                            
001c1a   e00c     BZ        0x1c34                                                                                          
001c1c   0a20     XORLW     0x20                                                                                            
001c1e   e00a     BZ        0x1c34                                                                                          
001c20   0a3f     XORLW     0x3f                                                                                            
001c22   e006     BZ        0x1c30                                                                                          
001c24   0a0d     XORLW     0xd                                                                                             
001c26   e002     BZ        0x1c2c                                                                                          
001c28   0a20     XORLW     0x20                                                                                            
001c2a   e108     BNZ       0x1c3c                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c2c   0e02     MOVLW     0x2                                size = 2;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c2e   d005     BRA       0x1c3a                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c30   0e08     MOVLW     0x8                                size = 8;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c32   d003     BRA       0x1c3a                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c34   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c36   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c38   0e10     MOVLW     0x10                               size = 16;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c3a   da97     RCALL     0x216a                                                                                          
00216a   6ef3     MOVWF     0xf3,0x0                                                                                        
00216c   0e07     MOVLW     0x7                                                                                             
00216e   cff3     MOVFF     0xff3,0xfdb                                                                                     
002170   ffdb                                                                                                               
002172   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c3c   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c3e   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
001c40   d002     BRA       0x1c46                                                                                          
001c42   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c44   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c46   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c48   0b80     ANDLW     0x80                                                                                            
001c4a   e026     BZ        0x1c98                                                                                          
001c4c   da8a     RCALL     0x2162                                                                                          
001c4e   0e03     MOVLW     0x3                                                                                             
001c50   50eb     MOVF      0xeb,0x0,0x0                                                                                    
001c52   0a00     XORLW     0x0                                                                                             
001c54   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001c56   d002     BRA       0x1c5c                                                                                          
001c58   90d8     BCF       0xd8,0x0,0x0                                                                                    
001c5a   d008     BRA       0x1c6c                                                                                          
001c5c   0e00     MOVLW     0x0                                                                                             
001c5e   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001c60   0e00     MOVLW     0x0                                                                                             
001c62   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001c64   0e00     MOVLW     0x0                                                                                             
001c66   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001c68   0e00     MOVLW     0x0                                                                                             
001c6a   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001c6c   e215     BC        0x1c98                                                                                          
002162   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002164   0f0a     ADDLW     0xa                                                                                             
002166   ef45     GOTO      0x228a                                                                                          
002168   f011                                                                                                               
00228a   6ee9     MOVWF     0xe9,0x0                                                                                        
00228c   0e00     MOVLW     0x0                                                                                             
00228e   20da     ADDWFC    0xda,0x0,0x0                                                                                    
002290   6eea     MOVWF     0xea,0x0                                                                                        
002292   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c6e   da11     RCALL     0x2092                             larg = -(long) larg;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c70   6820     SETF      0x20,0x0                                                                                        
001c72   6821     SETF      0x21,0x0                                                                                        
001c74   6822     SETF      0x22,0x0                                                                                        
001c76   6823     SETF      0x23,0x0                                                                                        
001c78   ecd1     CALL      0x59a2,0x0                                                                                      
001c7a   f02c                                                                                                               
001c7c   0e0a     MOVLW     0xa                                                                                             
001c7e   c017     MOVFF     0x17,0xfdb                                                                                      
001c80   ffdb                                                                                                               
001c82   0e0b     MOVLW     0xb                                                                                             
001c84   c018     MOVFF     0x18,0xfdb                                                                                      
001c86   ffdb                                                                                                               
001c88   0e0c     MOVLW     0xc                                                                                             
001c8a   c019     MOVFF     0x19,0xfdb                                                                                      
001c8c   ffdb                                                                                                               
001c8e   0e0d     MOVLW     0xd                                                                                             
001c90   c01a     MOVFF     0x1a,0xfdb                                                                                      
001c92   ffdb                                                                                                               
002092   0e0a     MOVLW     0xa                                                                                             
002094   cfdb     MOVFF     0xfdb,0x1b                                                                                      
002096   f01b                                                                                                               
002098   0e0b     MOVLW     0xb                                                                                             
00209a   cfdb     MOVFF     0xfdb,0x1c                                                                                      
00209c   f01c                                                                                                               
00209e   0e0c     MOVLW     0xc                                                                                             
0020a0   cfdb     MOVFF     0xfdb,0x1d                                                                                      
0020a2   f01d                                                                                                               
0020a4   0e0d     MOVLW     0xd                                                                                             
0020a6   cfdb     MOVFF     0xfdb,0x1e                                                                                      
0020a8   f01e                                                                                                               
0020aa   0012     RETURN    0x0                                                                                             
001c94   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c96   d008     BRA       0x1ca8                         else if (flags & _FLAG_PLUS)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c98   0e03     MOVLW     0x3                                                                                             
001c9a   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
001c9c   d002     BRA       0x1ca2                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c9e   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ca0   d003     BRA       0x1ca8                         else if (flags & _FLAG_SPACE)                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ca2   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
001ca4   d008     BRA       0x1cb6                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ca6   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ca8   6ef3     MOVWF     0xf3,0x0                                                                                        
001caa   0e17     MOVLW     0x17                                                                                            
001cac   cff3     MOVFF     0xff3,0xfdb                                                                                     
001cae   ffdb                                                                                                               
001cb0   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb2   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb4   d002     BRA       0x1cba                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb6   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb8   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cba   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cbc   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cbe   e103     BNZ       0x1cc6                                                                                          
001cc0   d9b5     RCALL     0x202c                                                                                          
001cc2   e101     BNZ       0x1cc6                                                                                          
001cc4   d089     BRA       0x1dd8                                                                                          
00202c   0e0a     MOVLW     0xa                                                                                             
00202e   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002030   f02b                                                                                                               
002032   0e0b     MOVLW     0xb                                                                                             
002034   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002036   f02c                                                                                                               
002038   0e0c     MOVLW     0xc                                                                                             
00203a   cfdb     MOVFF     0xfdb,0x2d                                                                                      
00203c   f02d                                                                                                               
00203e   0e0d     MOVLW     0xd                                                                                             
002040   cfdb     MOVFF     0xfdb,0x2e                                                                                      
002042   f02e                                                                                                               
002044   502b     MOVF      0x2b,0x0,0x0                                                                                    
002046   102c     IORWF     0x2c,0x0,0x0                                                                                    
002048   102d     IORWF     0x2d,0x0,0x0                                                                                    
00204a   102e     IORWF     0x2e,0x0,0x0                                                                                    
00204c   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cc6   0e6c     MOVLW     0x6c                                   cval = s_digits[larg % size];                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cc8   6e2b     MOVWF     0x2b,0x0                                                                                        
001cca   0e5d     MOVLW     0x5d                                                                                            
001ccc   6e2c     MOVWF     0x2c,0x0                                                                                        
001cce   0e00     MOVLW     0x0                                                                                             
001cd0   6e2d     MOVWF     0x2d,0x0                                                                                        
001cd2   0e07     MOVLW     0x7                                                                                             
001cd4   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001cd6   f02e                                                                                                               
001cd8   6a2f     CLRF      0x2f,0x0                                                                                        
001cda   6a30     CLRF      0x30,0x0                                                                                        
001cdc   6a31     CLRF      0x31,0x0                                                                                        
001cde   c02e     MOVFF     0x2e,0x20                                                                                       
001ce0   f020                                                                                                               
001ce2   c02f     MOVFF     0x2f,0x21                                                                                       
001ce4   f021                                                                                                               
001ce6   c030     MOVFF     0x30,0x22                                                                                       
001ce8   f022                                                                                                               
001cea   c031     MOVFF     0x31,0x23                                                                                       
001cec   f023                                                                                                               
001cee   d9d1     RCALL     0x2092                                                                                          
001cf0   ecfe     CALL      0x5bfc,0x0                                                                                      
001cf2   f02d                                                                                                               
001cf4   502b     MOVF      0x2b,0x0,0x0                                                                                    
001cf6   2417     ADDWF     0x17,0x0,0x0                                                                                    
001cf8   6ef3     MOVWF     0xf3,0x0                                                                                        
001cfa   502c     MOVF      0x2c,0x0,0x0                                                                                    
001cfc   2018     ADDWFC    0x18,0x0,0x0                                                                                    
001cfe   6ef4     MOVWF     0xf4,0x0                                                                                        
001d00   502d     MOVF      0x2d,0x0,0x0                                                                                    
001d02   2019     ADDWFC    0x19,0x0,0x0                                                                                    
001d04   6ef8     MOVWF     0xf8,0x0                                                                                        
001d06   cff4     MOVFF     0xff4,0xff7                                                                                     
001d08   fff7                                                                                                               
001d0a   cff3     MOVFF     0xff3,0xff6                                                                                     
001d0c   fff6                                                                                                               
001d0e   0008     TBLRD                                                                                                     
001d10   0e09     MOVLW     0x9                                                                                             
001d12   cff5     MOVFF     0xff5,0xfdb                                                                                     
001d14   ffdb                                                                                                               
001d16   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d18   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001d1a   e10f     BNZ       0x1d3a                                                                                          
001d1c   0e61     MOVLW     0x61                                                                                            
001d1e   6ef3     MOVWF     0xf3,0x0                                                                                        
001d20   0e09     MOVLW     0x9                                                                                             
001d22   d979     RCALL     0x2016                                                                                          
001d24   e30a     BNC       0x1d3a                                                                                          
002016   cfdb     MOVFF     0xfdb,0xff4                                                                                     
002018   fff4                                                                                                               
00201a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00201c   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
00201e   0012     RETURN    0x0                                                                                             
001d26   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d28   6e2b     MOVWF     0x2b,0x0                                                                                        
001d2a   0e09     MOVLW     0x9                                                                                             
001d2c   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001d2e   ffe7                                                                                                               
001d30   502b     MOVF      0x2b,0x0,0x0                                                                                    
001d32   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001d34   0e09     MOVLW     0x9                                                                                             
001d36   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001d38   ffdb                                                                                                               
001d3a   0e07     MOVLW     0x7                                    larg /= size;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d3c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001d3e   f02b                                                                                                               
001d40   6a2c     CLRF      0x2c,0x0                                                                                        
001d42   6a2d     CLRF      0x2d,0x0                                                                                        
001d44   6a2e     CLRF      0x2e,0x0                                                                                        
001d46   da0d     RCALL     0x2162                                                                                          
001d48   c02b     MOVFF     0x2b,0x20                                                                                       
001d4a   f020                                                                                                               
001d4c   c02c     MOVFF     0x2c,0x21                                                                                       
001d4e   f021                                                                                                               
001d50   c02d     MOVFF     0x2d,0x22                                                                                       
001d52   f022                                                                                                               
001d54   c02e     MOVFF     0x2e,0x23                                                                                       
001d56   f023                                                                                                               
001d58   cfee     MOVFF     0xfee,0x1b                                                                                      
001d5a   f01b                                                                                                               
001d5c   cfee     MOVFF     0xfee,0x1c                                                                                      
001d5e   f01c                                                                                                               
001d60   cfee     MOVFF     0xfee,0x1d                                                                                      
001d62   f01d                                                                                                               
001d64   cfef     MOVFF     0xfef,0x1e                                                                                      
001d66   f01e                                                                                                               
001d68   ecfe     CALL      0x5bfc,0x0                                                                                      
001d6a   f02d                                                                                                               
001d6c   c01e     MOVFF     0x1e,0xfed                                                                                      
001d6e   ffed                                                                                                               
001d70   c01d     MOVFF     0x1d,0xfed                                                                                      
001d72   ffed                                                                                                               
001d74   c01c     MOVFF     0x1c,0xfed                                                                                      
001d76   ffed                                                                                                               
001d78   c01b     MOVFF     0x1b,0xfef                                                                                      
001d7a   ffef                                                                                                               
001d7c   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d7e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001d80   ffe9                                                                                                               
001d82   06db     DECF      0xdb,0x1,0x0                                                                                    
001d84   0e3a     MOVLW     0x3a                                                                                            
001d86   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001d88   ffea                                                                                                               
001d8a   e201     BC        0x1d8e                                                                                          
001d8c   06db     DECF      0xdb,0x1,0x0                                                                                    
001d8e   0e09     MOVLW     0x9                                                                                             
001d90   cfdb     MOVFF     0xfdb,0xfef                                                                                     
001d92   ffef                                                                                                               
001d94   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d96   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d98   d949     RCALL     0x202c                             while (larg);                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d9a   e195     BNZ       0x1cc6                                                                                          
                                                               /* if the '#' flag was specified and we're dealing           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d9c   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d9e   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
001da0   d01d     BRA       0x1ddc                                                                                          
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da2   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001da6   e106     BNZ       0x1db4                                                                                          
                                                                     {                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da8   d9bf     RCALL     0x2128                                     if (precision <= digit_cnt)                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001daa   e318     BNC       0x1ddc                                                                                          
002128   0e05     MOVLW     0x5                                                                                             
00212a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00212c   f02b                                                                                                               
00212e   0e15     MOVLW     0x15                                                                                            
002130   50db     MOVF      0xdb,0x0,0x0                                                                                    
002132   80d8     BSF       0xd8,0x0,0x0                                                                                    
002134   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
002136   0012     RETURN    0x0                                                                                             
001dac   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dae   28db     INCF      0xdb,0x0,0x0                                                                                    
001db0   da59     RCALL     0x2264                                                                                          
                                                                     }                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db2   d014     BRA       0x1ddc                                 else if (c == 'x'                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db4   0e78     MOVLW     0x78                                                                                            
001db6   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db8   e009     BZ        0x1dcc                                                                                          
001dba   0e58     MOVLW     0x58                                                                                            
001dbc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001dbe   e006     BZ        0x1dcc                                                                                          
001dc0   0e62     MOVLW     0x62                                                                                            
001dc2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001dc4   e003     BZ        0x1dcc                                                                                          
001dc6   0e42     MOVLW     0x42                                                                                            
001dc8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001dca   e108     BNZ       0x1ddc                                                                                          
001dcc   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dce   6ef3     MOVWF     0xf3,0x0                                                                                        
001dd0   0e16     MOVLW     0x16                                                                                            
001dd2   cff3     MOVFF     0xff3,0xfdb                                                                                     
001dd4   ffdb                                                                                                               
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dd6   d002     BRA       0x1ddc                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dd8   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dda   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ddc   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dde   50db     MOVF      0xdb,0x0,0x0                                                                                    
001de0   0b10     ANDLW     0x10                                                                                            
001de4   0e04     MOVLW     0x4                                                                                             
001de6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001de8   f02b                                                                                                               
001dea   0e05     MOVLW     0x5                                                                                             
001dec   50db     MOVF      0xdb,0x0,0x0                                                                                    
001dee   80d8     BSF       0xd8,0x0,0x0                                                                                    
001df0   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
001de2   e00e     BZ        0x1e00                             && !have_precision)                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df2   e206     BC        0x1e00                                                                                          
001df4   0e06     MOVLW     0x6                                                                                             
001df6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001df8   e103     BNZ       0x1e00                                                                                          
001dfa   0e04     MOVLW     0x4                              precision = width;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dfc   50db     MOVF      0xdb,0x0,0x0                                                                                    
001dfe   da32     RCALL     0x2264                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e00   d993     RCALL     0x2128                         if (precision > digit_cnt)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e02   e20a     BC        0x1e18                                                                                          
001e04   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e06   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001e08   ffe7                                                                                                               
001e0a   0e15     MOVLW     0x15                                                                                            
001e0c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e0e   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001e10   0e05     MOVLW     0x5                                                                                             
001e12   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001e14   ffdb                                                                                                               
001e16   d002     BRA       0x1e1c                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e18   0e05     MOVLW     0x5                              precision = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e1a   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e1c   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e1e   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001e20   f02b                                                                                                               
001e22   0e16     MOVLW     0x16                                                                                            
001e24   d943     RCALL     0x20ac                                                                                          
001e26   80d8     BSF       0xd8,0x0,0x0                                                                                    
001e28   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
001e2a   e214     BC        0x1e54                                                                                          
0020ac   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0020ae   ffe6                                                                                                               
0020b0   0e15     MOVLW     0x15                                                                                            
0020b2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0020b4   ffe6                                                                                                               
0020b6   0e05     MOVLW     0x5                                                                                             
0020b8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0020ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020bc   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
0020be   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020c0   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
0020c2   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e2c   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e2e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001e30   ffe6                                                                                                               
001e32   0e15     MOVLW     0x15                                                                                            
001e34   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001e36   ffe6                                                                                                               
001e38   0e04     MOVLW     0x4                                                                                             
001e3a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001e3c   ffe6                                                                                                               
001e3e   0e05     MOVLW     0x5                                                                                             
001e40   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e42   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001e44   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001e46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001e48   80d8     BSF       0xd8,0x0,0x0                                                                                    
001e4a   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001e4c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001e4e   80d8     BSF       0xd8,0x0,0x0                                                                                    
001e50   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001e52   d95d     RCALL     0x210e                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e54   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e56   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e58   0b01     ANDLW     0x1                                                                                             
001e5a   e10b     BNZ       0x1e72                                                                                          
001e5c   0e08     MOVLW     0x8                                                                                             
001e5e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e60   e008     BZ        0x1e72                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e62   d8b0     RCALL     0x1fc4                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e64   e001     BZ        0x1e68                                                                                          
001e66   d08d     BRA       0x1f82                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e68   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e6a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e6c   d8bc     RCALL     0x1fe6                                                                                          
001e6e   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e70   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e72   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e74   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e76   e007     BZ        0x1e86                                                                                          
001e78   d986     RCALL     0x2186                           if (putc (sign_char, handle) == EOF)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e7a   0e17     MOVLW     0x17                                                                                            
001e7c   d9ef     RCALL     0x225c                                                                                          
001e7e   e103     BNZ       0x1e86                                                                                          
001e80   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001e82   e101     BNZ       0x1e86                                                                                          
001e84   d07e     BRA       0x1f82                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e86   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e88   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e8a   e016     BZ        0x1eb8                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e8c   d97c     RCALL     0x2186                             if (putc ('0', handle) == EOF)                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e8e   0e30     MOVLW     0x30                                                                                            
001e90   6ee6     MOVWF     0xe6,0x0                                                                                        
001e92   d89d     RCALL     0x1fce                                                                                          
001e94   e102     BNZ       0x1e9a                                                                                          
001e96   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001e98   e074     BZ        0x1f82                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e9a   d975     RCALL     0x2186                             if (putc (c, handle) == EOF)                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e9c   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
001e9e   ffe6                                                                                                               
001ea0   ec8f     CALL      0x591e,0x0                                                                                      
001ea2   f02c                                                                                                               
001ea4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ea6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ea8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001eaa   cff4     MOVFF     0xff4,0x2c                                                                                      
001eac   f02c                                                                                                               
001eae   0100     MOVLB     0x0                                                                                             
001eb0   1cf3     COMF      0xf3,0x0,0x0                                                                                    
001eb2   e102     BNZ       0x1eb8                                                                                          
001eb4   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001eb6   e065     BZ        0x1f82                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eb8   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eba   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001ebc   f02b                                                                                                               
001ebe   0e16     MOVLW     0x16                                                                                            
001ec0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ec2   80d8     BSF       0xd8,0x0,0x0                                                                                    
001ec4   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
001ec6   e209     BC        0x1eda                                                                                          
001ec8   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eca   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001ecc   ffe7                                                                                                               
001ece   0e16     MOVLW     0x16                                                                                            
001ed0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ed2   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001ed4   0e05     MOVLW     0x5                                                                                             
001ed6   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001ed8   ffdb                                                                                                               
001eda   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001edc   6ee6     MOVWF     0xe6,0x0                                                                                        
001ede   0e05     MOVLW     0x5                                                                                             
001ee0   d9c9     RCALL     0x2274                                                                                          
001ee2   e14f     BNZ       0x1f82                                                                                          
002226   ec39     CALL      0x1672,0x0                                                                                      
002228   f00b                                                                                                               
00222a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00222c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00222e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002230   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002232   0900     IORLW     0x0                                                                                             
002234   0012     RETURN    0x0                                                                                             
002274   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002276   ffe6                                                                                                               
002278   df86     RCALL     0x2186                                                                                          
00227a   ef13     GOTO      0x2226                                                                                          
00227c   f011                                                                                                               
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ee4   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ee6   2adb     INCF      0xdb,0x1,0x0                                                                                    
001ee8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001eea   ffe9                                                                                                               
001eec   0e3a     MOVLW     0x3a                                                                                            
001eee   e301     BNC       0x1ef2                                                                                          
001ef0   2adb     INCF      0xdb,0x1,0x0                                                                                    
001ef2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001ef4   ffea                                                                                                               
001ef6   0e09     MOVLW     0x9                                                                                             
001ef8   cfef     MOVFF     0xfef,0xfdb                                                                                     
001efa   ffdb                                                                                                               
001efc   50db     MOVF      0xdb,0x0,0x0                                                                                    
001efe   e00e     BZ        0x1f1c                                                                                          
001f0c   0e39     MOVLW     0x39                                                                                            
001f0e   2adb     INCF      0xdb,0x1,0x0                                                                                    
001f10   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001f12   ffe9                                                                                                               
001f14   0e3a     MOVLW     0x3a                                                                                            
001f16   e3ed     BNC       0x1ef2                                                                                          
001f18   2adb     INCF      0xdb,0x1,0x0                                                                                    
001f1a   d7eb     BRA       0x1ef2                                                                                          
001f00   d942     RCALL     0x2186                           if (putc (cval, handle) == EOF)                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f02   0e09     MOVLW     0x9                                                                                             
001f04   d9ab     RCALL     0x225c                                                                                          
001f06   e102     BNZ       0x1f0c                                                                                          
001f08   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001f0a   e03b     BZ        0x1f82                                                                                          
00225c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00225e   ffe6                                                                                                               
002260   efe7     GOTO      0x1fce                                                                                          
002262   f00f                                                                                                               
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f1c   d853     RCALL     0x1fc4                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f1e   e131     BNZ       0x1f82                                                                                          
001fc4   0e20     MOVLW     0x20                                                                                            
001fc6   6ee6     MOVWF     0xe6,0x0                                                                                        
001fc8   0e08     MOVLW     0x8                                                                                             
001fca   ef3a     GOTO      0x2274                                                                                          
001fcc   f011                                                                                                               
002186   0efc     MOVLW     0xfc                                                                                            
002188   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00218a   ffe6                                                                                                               
00218c   0efd     MOVLW     0xfd                                                                                            
00218e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002190   ffe6                                                                                                               
002192   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f20   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f22   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001f24   ffe6                                                                                                               
001f26   0e08     MOVLW     0x8                                                                                             
001f28   d8c1     RCALL     0x20ac                                                                                          
001f2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f2c   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
001f2e   d85b     RCALL     0x1fe6                                                                                          
001fe6   6e2b     MOVWF     0x2b,0x0                                                                                        
001fe8   6a2c     CLRF      0x2c,0x0                                                                                        
001fea   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001fec   0f01     ADDLW     0x1                                                                                             
001fee   d94d     RCALL     0x228a                                                                                          
001ff0   502b     MOVF      0x2b,0x0,0x0                                                                                    
001ff2   26ee     ADDWF     0xee,0x1,0x0                                                                                    
001ff4   502c     MOVF      0x2c,0x0,0x0                                                                                    
001ff6   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
001ff8   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f30   d02e     BRA       0x1f8e                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f32   0e07     MOVLW     0x7                          switch (size)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f34   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f36   0a03     XORLW     0x3                                                                                             
001f38   e01c     BZ        0x1f72                                                                                          
001f3a   0a01     XORLW     0x1                                                                                             
001f3c   e014     BZ        0x1f66                                                                                          
001f3e   0a03     XORLW     0x3                                                                                             
001f40   e007     BZ        0x1f50                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f50   d8f3     RCALL     0x2138                           *(long *) va_arg (ap, long *) = count;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f52   6a30     CLRF      0x30,0x0                                                                                        
001f54   ae2e     BTFSS     0x2e,0x7,0x0                                                                                    
001f56   d002     BRA       0x1f5c                                                                                          
001f58   682f     SETF      0x2f,0x0                                                                                        
001f5a   6830     SETF      0x30,0x0                                                                                        
001f5c   d82a     RCALL     0x1fb2                                                                                          
001f5e   d8ba     RCALL     0x20d4                                                                                          
001f60   c030     MOVFF     0x30,0xfee                                                                                      
001f62   ffee                                                                                                               
0020d4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0020d6   cfef     MOVFF     0xfef,0xfea                                                                                     
0020d8   ffea                                                                                                               
0020da   6ee9     MOVWF     0xe9,0x0                                                                                        
0020dc   c02d     MOVFF     0x2d,0xfee                                                                                      
0020de   ffee                                                                                                               
0020e0   c02e     MOVFF     0x2e,0xfee                                                                                      
0020e2   ffee                                                                                                               
0020e4   c02f     MOVFF     0x2f,0xfee                                                                                      
0020e6   ffee                                                                                                               
0020e8   0012     RETURN    0x0                                                                                             
002138   0e01     MOVLW     0x1                                                                                             
00213a   cfdb     MOVFF     0xfdb,0x2d                                                                                      
00213c   f02d                                                                                                               
00213e   0e02     MOVLW     0x2                                                                                             
002140   cfdb     MOVFF     0xfdb,0x2e                                                                                      
002142   f02e                                                                                                               
002144   6a2f     CLRF      0x2f,0x0                                                                                        
002146   0012     RETURN    0x0                                                                                             
001f64   d014     BRA       0x1f8e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f66   d8e8     RCALL     0x2138                           *(short long *) va_arg (ap, short long *) = count;             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f68   be2e     BTFSC     0x2e,0x7,0x0                                                                                    
001f6a   682f     SETF      0x2f,0x0                                                                                        
001f6c   d822     RCALL     0x1fb2                                                                                          
001f6e   d8b2     RCALL     0x20d4                                                                                          
001f70   d00e     BRA       0x1f8e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f72   d961     RCALL     0x2236                           *(signed char *) va_arg (ap, signed char *) = count;           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f74   cfdb     MOVFF     0xfdb,0xfef                                                                                     
001f76   ffef                                                                                                               
001f78   d00a     BRA       0x1f8e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f42   d979     RCALL     0x2236                           *(int *) va_arg (ap, int *) = count;                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f44   cfdb     MOVFF     0xfdb,0xfee                                                                                     
001f46   ffee                                                                                                               
001f48   0e02     MOVLW     0x2                                                                                             
001f4a   cfdb     MOVFF     0xfdb,0xfed                                                                                     
001f4c   ffed                                                                                                               
002236   debd     RCALL     0x1fb2                                                                                          
002238   50ee     MOVF      0xee,0x0,0x0                                                                                    
00223a   cfef     MOVFF     0xfef,0xfea                                                                                     
00223c   ffea                                                                                                               
00223e   6ee9     MOVWF     0xe9,0x0                                                                                        
002240   0e01     MOVLW     0x1                                                                                             
002242   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f4e   d01f     BRA       0x1f8e                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f7a   d979     RCALL     0x226e                   if (putc (c, handle) == EOF)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f7c   e105     BNZ       0x1f88                                                                                          
001f7e   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001f80   e103     BNZ       0x1f88                                                                                          
001fce   ec8f     CALL      0x591e,0x0                                                                                      
001fd0   f02c                                                                                                               
001fd2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fd4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fd6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fd8   cff3     MOVFF     0xff3,0x2b                                                                                      
001fda   f02b                                                                                                               
001fdc   cff4     MOVFF     0xff4,0x2c                                                                                      
001fde   f02c                                                                                                               
001fe0   0100     MOVLB     0x0                                                                                             
001fe2   1cf3     COMF      0xf3,0x0,0x0                                                                                    
001fe4   0012     RETURN    0x0                                                                                             
002214   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
002216   ffe6                                                                                                               
002218   efe7     GOTO      0x1fce                                                                                          
00221a   f00f                                                                                                               
00226e   df8b     RCALL     0x2186                                                                                          
002270   ef0a     GOTO      0x2214                                                                                          
002272   f011                                                                                                               
001f82   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f84   68f4     SETF      0xf4,0x0                                                                                        
001f86   d010     BRA       0x1fa8                                                                                          
001f88   d8fa     RCALL     0x217e                   ++count;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f8a   e301     BNC       0x1f8e                                                                                          
001f8c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00217e   0e01     MOVLW     0x1                                                                                             
002180   2adb     INCF      0xdb,0x1,0x0                                                                                    
002182   0e02     MOVLW     0x2                                                                                             
002184   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f94   0e01     MOVLW     0x1              return count;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f96   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001f98   f02b                                                                                                               
001f9a   0e02     MOVLW     0x2                                                                                             
001f9c   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001f9e   f02c                                                                                                               
001fa0   c02b     MOVFF     0x2b,0xff3                                                                                      
001fa2   fff3                                                                                                               
001fa4   c02c     MOVFF     0x2c,0xff4                                                                                      
001fa6   fff4                                                                                                               
001fa8   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001faa   ffe1                                                                                                               
001fac   cfda     MOVFF     0xfda,0xfe2                                                                                     
001fae   ffe2                                                                                                               
001fb0   d0cb     BRA       0x2148                                                                                          
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cda   0eff     MOVLW     0xff                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cdc   24e1     ADDWF     0xe1,0x0,0x0             addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cde   6ee9     MOVWF     0xe9,0x0                 movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ce0   0eff     MOVLW     0xff                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ce2   20e2     ADDWFC    0xe2,0x0,0x0             addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ce4   6eea     MOVWF     0xea,0x0                 movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cea   0e2f     MOVLW     0x2f                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cec   64ef     CPFSGT    0xef,0x0                 cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cee   d004     BRA       0x5cf8                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cf0   0e3a     MOVLW     0x3a                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cf2   60ef     CPFSLT    0xef,0x0                 cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005cf4   d001     BRA       0x5cf8                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005cd6   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005cd8   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005ce6   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005ce8   d007     BRA       0x5cf8                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005cf6   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005cf8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
00591e   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\mcc18\src\TRADIT~1\stdclib\putc.c
005920   ffe6                                                                                                               
005922   cfda     MOVFF     0xfda,0xfe6                                                                                     
005924   ffe6                                                                                                               
005926   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005928   ffd9                                                                                                               
00592a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00592c   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\mcc18\src\TRADIT~1\stdclib\putc.c
00592e   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005930   cfdb     MOVFF     0xfdb,0x2b                                                                                      
005932   f02b                                                                                                               
005934   0efc     MOVLW     0xfc                                                                                            
005936   cfdb     MOVFF     0xfdb,0x2c                                                                                      
005938   f02c                                                                                                               
00593a   0100     MOVLB     0x0                                                                                             
00593c   0e80     MOVLW     0x80                                                                                            
00593e   142c     ANDWF     0x2c,0x0,0x0                                                                                    
005940   e11a     BNZ       0x5976                                                                                          
005942   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005944   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
005946   ffe9                                                                                                               
005948   0efc     MOVLW     0xfc                                                                                            
00594a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00594c   ffea                                                                                                               
00594e   cfee     MOVFF     0xfee,0xff3                                                                                     
005950   fff3                                                                                                               
005952   cfed     MOVFF     0xfed,0xff4                                                                                     
005954   fff4                                                                                                               
005956   2aee     INCF      0xee,0x1,0x0                                                                                    
005958   0e00     MOVLW     0x0                                                                                             
00595a   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
00595c   cff3     MOVFF     0xff3,0xfe9                                                                                     
00595e   ffe9                                                                                                               
005960   cff4     MOVFF     0xff4,0xfea                                                                                     
005962   ffea                                                                                                               
005964   0efd     MOVLW     0xfd                                                                                            
005966   cfdb     MOVFF     0xfdb,0xfef                                                                                     
005968   ffef                                                                                                               
00596a   50ef     MOVF      0xef,0x0,0x0                                                                                    
00596c   6a2c     CLRF      0x2c,0x0                                                                                        
00596e   6ef3     MOVWF     0xf3,0x0                                                                                        
005970   c02c     MOVFF     0x2c,0xff4                                                                                      
005972   fff4                                                                                                               
005974   d010     BRA       0x5996                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005976   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\mcc18\src\TRADIT~1\stdclib\putc.c
005978   50db     MOVF      0xdb,0x0,0x0                                                                                    
00597a   08fe     SUBLW     0xfe                                                                                            
00597c   e106     BNZ       0x598a                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\mcc18\src\TRADIT~1\stdclib\putc.c
00597e   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
005980   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005982   ffe6                                                                                                               
005984   ec9d     CALL      0x5d3a,0x0                                                                                      
005986   f02e                                                                                                               
005988   d005     BRA       0x5994                                                                                          
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
00598a   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\mcc18\src\TRADIT~1\stdclib\putc.c
00598c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00598e   ffe6                                                                                                               
005990   ec7c     CALL      0x4af8,0x0                                                                                      
005992   f025                                                                                                               
005994   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005996   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
005998   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00599a   ffda                                                                                                               
00599c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00599e   ffd9                                                                                                               
0059a0   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                           ;  $Id: P18F8722.INC,v 1.2 2004/10/06 22:25:07 curtiss Exp $                     C:\MCC18\MPASM\P18F8722.INC
                                           ;  MPASM PIC18F8722 processor include                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;                                                                                C:\MCC18\MPASM\P18F8722.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d3a   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d3c   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d3e   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d40   d004     BRA       0x5d4a                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d42   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d44   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d46   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d48   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d4a   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d4c   d7fe     BRA       0x5d4a                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d4e   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d50   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d52   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d54   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           ; $Id: slenpgm.asm,v 1.3 2004/04/01 17:25:11 kuhrtt Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057b0   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057b2   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057b4   fff8                                                                                                               
0057b6   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057b8   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057ba   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057bc   fff7                                                                                                               
0057be   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057c0   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057c2   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057c4   fff6                                                                                                               
0057c6   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057e6   0efd     MOVLW     0xfd                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057e8   cfe3     MOVFF     0xfe3,0x1c               movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057ea   f01c                                                                                                               
0057ec   0efe     MOVLW     0xfe                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057ee   cfe3     MOVFF     0xfe3,0x1d               movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057f0   f01d                                                                                                               
0057f2   0eff     MOVLW     0xff                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057f4   cfe3     MOVFF     0xfe3,0x1e               movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057f6   f01e                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057d4   0efd     MOVLW     0xfd                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057d6   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057d8   e105     BNZ       0x57e4                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057da   0efe     MOVLW     0xfe                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057dc   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057de   e102     BNZ       0x57e4                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057e0   0eff     MOVLW     0xff                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0057e2   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern AARGB2                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0057c8   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0057ca   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0057cc   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0057ce   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0057d0   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0057d2   e009     BZ        0x57e6                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0057e4   d7f4     BRA       0x57ce                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0057f8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
